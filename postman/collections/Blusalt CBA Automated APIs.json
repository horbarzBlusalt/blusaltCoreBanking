{
	"info": {
		"_postman_id": "ff4dbe4a-74e0-4f22-ac3d-ad923b12ce79",
		"name": "Blusalt CBA Automated APIs",
		"description": "Apache Fineract is a secure, multi-tenanted microfinance platform.  \nThe goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform.  \nThe [https://cui.fineract.dev[reference](https://cui.fineract.dev[reference) app\\] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.  \nUntil we complete the new REST API documentation you still have the legacy documentation available [https://fineract.apache.org/legacy-docs/apiLive.htm[here]](https://fineract.apache.org/legacy-docs/apiLive.htm%5Bhere%5D).  \nPlease check [https://fineract.apache.org/docs/current[the](https://fineract.apache.org/docs/current%5Bthe) Fineract documentation\\] for more information.\n\nContact Support:  \nEmail: [dev@fineract.apache.org](https://mailto:dev@fineract.apache.org)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "11355566-ff4dbe4a-74e0-4f22-ac3d-ad923b12ce79"
	},
	"item": [
		{
			"name": "accountnumberformats",
			"item": [
				{
					"name": "List Account number formats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "5922c432-80f8-4706-ab38-18884291a8d2"
							}
						}
					],
					"id": "48023259-73dd-40b1-867f-ff7881e26338",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accountnumberformats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accountnumberformats"
							]
						},
						"description": "Example Requests:\n\naccountnumberformats\n\n\naccountnumberformats?fields=accountType,prefixType"
					},
					"response": [
						{
							"id": "f09b58f2-dbfe-43aa-ae29-e20f18e596e1",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accountnumberformats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accountnumberformats"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "f43b0db2-9afe-4d12-92c2-9d349512d0be"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"accountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"prefixType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"accountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"prefixType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Create an Account number format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7465ed0e-bd63-4758-ba96-339584e72fc4"
							}
						}
					],
					"id": "a0c791d8-cf2f-4f1c-8e12-0446de40e051",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountType\": 6,\n  \"prefixType\": 101\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accountnumberformats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accountnumberformats"
							]
						},
						"description": "Note: You may associate a single Account number format for a given account type\nMandatory Fields for Account number formats\naccountType"
					},
					"response": [
						{
							"id": "020172b5-58ff-48ce-827a-e622fd62c3c8",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountType\": 1,\n  \"prefixType\": 101\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accountnumberformats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accountnumberformats"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "a2222399-bb36-4c42-90cb-42fd47b24d5c"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 4\n}"
						}
					]
				},
				{
					"name": "Update an Account number format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8dd0d99f-c8ec-4137-b5c2-30b3efcd673e"
							}
						}
					],
					"id": "95725e60-f453-41c1-aa73-7f18a6222df5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"prefixType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accountnumberformats/:accountNumberFormatId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accountnumberformats",
								":accountNumberFormatId"
							],
							"variable": [
								{
									"key": "accountNumberFormatId",
									"value": "6608969",
									"description": "(Required) accountNumberFormatId"
								}
							]
						}
					},
					"response": [
						{
							"id": "231c7428-315b-4f26-ac2c-1e98eae8cdcf",
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"prefixType\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accountnumberformats/:accountNumberFormatId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accountnumberformats",
										":accountNumberFormatId"
									],
									"variable": [
										{
											"key": "accountNumberFormatId",
											"value": "6608969",
											"description": "(Required) accountNumberFormatId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "f988e431-b8f9-4dad-bf93-260a5ac8ddc1"
								}
							],
							"cookie": [],
							"body": "{\n  \"changes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resourceId\": 2\n}"
						}
					]
				},
				{
					"name": "Retrieve an Account number format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "39596599-f2bb-454b-8768-f7ea57334160"
							}
						}
					],
					"id": "429d8dc1-1a58-4005-a2b9-ed6568dc3396",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accountnumberformats/:accountNumberFormatId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accountnumberformats",
								":accountNumberFormatId"
							],
							"variable": [
								{
									"key": "accountNumberFormatId",
									"value": "6608969",
									"description": "(Required) accountNumberFormatId"
								}
							]
						},
						"description": "Example Requests:\n\naccountnumberformats/1\n\n\naccountnumberformats/1?template=true\n\n\naccountnumberformats/1?fields=accountType,prefixType"
					},
					"response": [
						{
							"id": "60a15a80-d4a2-412b-954a-739458b82ddd",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accountnumberformats/:accountNumberFormatId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accountnumberformats",
										":accountNumberFormatId"
									],
									"variable": [
										{
											"key": "accountNumberFormatId",
											"value": "6608969",
											"description": "(Required) accountNumberFormatId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "6f81e338-3427-4120-a3ed-93abe5fa9608"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 2,\n  \"prefixType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Retrieve Account number format Template",
					"id": "47bb0756-17e4-462b-810f-8a805fd5a1f9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accountnumberformats/template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accountnumberformats",
								"template"
							]
						},
						"description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\n\nExample Request:\n\naccountnumberformats/template"
					},
					"response": [
						{
							"id": "223f0386-1032-482d-8ab3-8c008f205a6f",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accountnumberformats/template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accountnumberformats",
										"template"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "623b5949-de0f-4ae0-a5e1-5ba899e94de4"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"prefixTypeOptions\": {\n    \"cupidatat6b\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"auteaa1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mollit8b\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an Account number format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "d20261cd-523f-4540-84a6-49b9eafb11b4"
							}
						}
					],
					"id": "3482bae5-4d4b-449f-8d20-9db04982ba7c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accountnumberformats/:accountNumberFormatId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accountnumberformats",
								":accountNumberFormatId"
							],
							"variable": [
								{
									"key": "accountNumberFormatId",
									"value": "6608969",
									"description": "(Required) accountNumberFormatId"
								}
							]
						},
						"description": "Note: Account numbers created while this format was active would remain unchanged."
					},
					"response": [
						{
							"id": "424e6842-6666-4c7b-aa40-397db89cd507",
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accountnumberformats/:accountNumberFormatId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accountnumberformats",
										":accountNumberFormatId"
									],
									"variable": [
										{
											"key": "accountNumberFormatId",
											"value": "6608969",
											"description": "(Required) accountNumberFormatId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "932554ba-74d3-41b3-8fb2-e1a101f927f4"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 2\n}"
						}
					]
				}
			],
			"id": "8a898a94-cacc-4b18-b297-c9493c3e7d59"
		},
		{
			"name": "accounttransfers",
			"item": [
				{
					"name": "List account transfers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"// Test for the presence of pageItems array",
									"pm.test(\"Response has pageItems array\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('pageItems').that.is.an('array');",
									"});",
									"",
									"// Test for the presence of totalFilteredRecords",
									"pm.test(\"Response has totalFilteredRecords\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('totalFilteredRecords').to.exist",
									"});",
									"",
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.pageItems.forEach(function(config) {",
									"        pm.expect(config).to.have.property('transferDescription');",
									"        pm.expect(config).to.have.property('toAccount');",
									"        pm.expect(config).to.have.property('toAccountType');",
									"        pm.expect(config).to.have.property('fromOffice');",
									"        pm.expect(config).to.have.property('transferAmount');",
									"        pm.expect(config).to.have.property('fromOffice');",
									"        pm.expect(config).to.have.property('fromAccount');",
									"        pm.expect(config).to.have.property('fromClient');",
									"        pm.expect(config).to.have.property('transferDate');",
									"        pm.expect(config).to.have.property('fromClientOptions');",
									"        pm.expect(config).to.have.property('toOffice');",
									"        pm.expect(config).to.have.property('fromOfficeOptions');",
									"        pm.expect(config).to.have.property('fromAccountType');",
									"        pm.expect(config).to.have.property('toClientOptions');",
									"        pm.expect(config).to.have.property('fromAccountOptions');",
									"        pm.expect(config).to.have.property('toClient');",
									"        pm.expect(config).to.have.property('currency');",
									"        pm.expect(config).to.have.property('id');",
									"        pm.expect(config).to.have.property('reversed');",
									"        pm.expect(config).to.have.property('toOfficeOptions');",
									"        pm.expect(config).to.have.property('toAccountTypeOptions');",
									"        pm.expect(config).to.have.property('toAccountOptions');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6bdc1878-7163-4807-903c-715816abdba7"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "dbbbb56c-bc1d-48b8-bf06-a07d6dfc1d0d"
							}
						}
					],
					"id": "193333ed-0507-4c48-bdaf-ca032213231e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounttransfers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounttransfers"
							],
							"query": [
								{
									"key": "sqlSearch",
									"value": "anim reprehenderit ut",
									"description": "sqlSearch",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "anim reprehenderit ut",
									"description": "externalId",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "-44553522",
									"description": "offset",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "-99895134",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "anim reprehenderit ut",
									"description": "orderBy",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "anim reprehenderit ut",
									"description": "sortOrder",
									"disabled": true
								},
								{
									"key": "accountDetailId",
									"value": "6608969",
									"description": "accountDetailId",
									"disabled": true
								}
							]
						},
						"description": "Lists account's transfers\n\nExample Requests:\n\n\n\naccounttransfers"
					},
					"response": [
						{
							"id": "d8fee8e8-f8fc-413b-b81d-26f640a949a1",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounttransfers?sqlSearch=anim reprehenderit ut&externalId=anim reprehenderit ut&offset=-44553522&limit=-99895134&orderBy=anim reprehenderit ut&sortOrder=anim reprehenderit ut&accountDetailId=6608969",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounttransfers"
									],
									"query": [
										{
											"key": "sqlSearch",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "externalId",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "offset",
											"value": "-44553522"
										},
										{
											"key": "limit",
											"value": "-99895134"
										},
										{
											"key": "orderBy",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "sortOrder",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "accountDetailId",
											"value": "6608969"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "8afb0ce2-c59e-46ca-806b-7eddf40a4709"
								}
							],
							"cookie": [],
							"body": "{\n  \"pageItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalFilteredRecords\": 4\n}"
						}
					]
				},
				{
					"name": "Create transfer between different clients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Test that transfer is successful\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.resourceId).to.exist",
									"    pm.collectionVariables.set('accountTransferId',jsonData.resourceId)",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "b915adc5-668b-4934-81fa-4aa4cbd93290"
							}
						}
					],
					"id": "27e7f911-1ca9-4269-9864-438aed9d44dc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fromAccountType\": \"SAVINGS\",\n  \"fromAccountId\": 1210431538158198,\n  \"fromOfficeId\": 11426373912794508,\n  \"fromClientId\": 25862431621186,\n  \"toAccountType\": \"SAVINGS\",\n  \"toAccountId\": 7973452448520586,\n  \"toOfficeId\": 1,\n  \"toClientId\": 14690260376751992,\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\",\n  \"transferDate\": \"{{todaysDate}}\",\n  \"transferAmount\": 100.00,\n  \"transferDescription\": \"Intra-bank transfer of funds\",\n  \"transferType\": \"ACCOUNT_TRANSFER\"\n}\n\n//from\n//14690260376751992\n//602226529706403\n//1\n\n//to\n//25862431621186\n//1210431538158198\n//11426373912794508",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounttransfers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounttransfers"
							]
						},
						"description": "Ability to create new transfer of monetary funds from one account to another."
					},
					"response": [
						{
							"id": "bc5195d4-a09c-4028-bebe-49433a7085dc",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingDate\": \"1990-01-16T08:01:29.663Z\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"externalId\": 17,\n  \"fromAccountId\": 1,\n  \"fromAccountType\": 2,\n  \"fromClientId\": 1,\n  \"fromOfficeId\": 1,\n  \"holdExternalReferenceId\": 17,\n  \"locale\": \"en\",\n  \"narration\": \"trf/NIP/account\",\n  \"sessionId\": \"12ECND34567891\",\n  \"toAccountId\": 2,\n  \"toAccountType\": 2,\n  \"toClientId\": 1,\n  \"toOfficeId\": 1,\n  \"transactionChannelId\": 17,\n  \"transferAmount\": 112.45,\n  \"transferDate\": \"01 August 2011\",\n  \"transferDescription\": \"A description of the transfer\",\n  \"valueDate\": \"2007-03-10T01:52:49.735Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounttransfers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounttransfers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "29de0b32-a8ba-4d29-8dda-f163ad259ccf"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1,\n  \"savingsId\": 1\n}"
						}
					]
				},
				{
					"name": "Create new Interbank credit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Test that interbank transfer was successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.be.a('string');",
									"    pm.expect(jsonData.status).eqls('Successful')",
									"});",
									"",
									"pm.test(\"Test that response has a specific properties\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('transferDescription');",
									"    pm.expect(pm.response.json()).to.have.property('beneficiaryAccountName');",
									"    pm.expect(pm.response.json()).to.have.property('amount');",
									"    pm.expect(pm.response.json()).to.have.property('transactionReference');",
									"    pm.expect(pm.response.json()).to.have.property('narration');",
									"    pm.expect(pm.response.json()).to.have.property('sessionID');",
									"    pm.expect(pm.response.json()).to.have.property('sourceAccountName');",
									"    pm.expect(pm.response.json()).to.have.property('status');",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "62159156-8374-4820-a58f-5816720a7b76"
							}
						}
					],
					"id": "cd9b52b8-4ab2-409a-bd3f-d13274370464",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"toAccountId\": 5466626511819210,\n    \"sourceAccountName\": \"Adebayo Paul\",\n    \"beneficiaryAccountName\": \"Ade Femi\",\n    \"dateFormat\": \"dd MMMM yyyy\",\n    \"locale\": \"en\",\n    \"sessionId\": \"RR123456789011090\",\n    \"narration\": \"transfer\",\n    \"transferDate\": \"{{todaysdate_ydm}}\",\n    \"transferAmount\": \"100\",\n    \"transferDescription\": \"Demo credit of 20000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounttransfers/createInterBankCredit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounttransfers",
								"createInterBankCredit"
							]
						},
						"description": "Debit leg fot Interbank Transfer."
					},
					"response": [
						{
							"id": "72361973-f865-4c81-a2a5-91630f7c6bc6",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"beneficiaryAccountName\": \"dolore et ea\",\n  \"dateFormat\": \"sed ut adipisicing consectetur ea\",\n  \"locale\": \"est officia\",\n  \"narration\": \"consequat\",\n  \"sessionId\": \"nostrud\",\n  \"sourceAccountName\": \"enim et\",\n  \"toAccountId\": 20783963,\n  \"transferAmount\": 63984103.76822832,\n  \"transferDate\": \"2000-03-12T15:22:14.116Z\",\n  \"transferDescription\": \"ea pariatur proident qui\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounttransfers/createInterBankCredit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounttransfers",
										"createInterBankCredit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "042a7c56-2a7a-4392-b495-5ac6a7ece498"
								}
							],
							"cookie": [],
							"body": "{\n  \"amount\": -12105060.895562097,\n  \"beneficiaryAccountName\": \"ipsum amet\",\n  \"charge\": -41175809.149012335,\n  \"narration\": \"ipsum do commodo\",\n  \"sessionID\": \"dolore tempor est\",\n  \"sourceAccountName\": \"deserunt aut\",\n  \"status\": \"culpa consectetur velit adipisicing anim\",\n  \"transactionReference\": \"officia proident\",\n  \"transferDescription\": \"in incididunt proident in\"\n}"
						}
					]
				},
				{
					"name": "Create new Interbank debit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Test that interbank transfer was successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.be.a('string');",
									"    pm.expect(jsonData.status).eqls('Successful')",
									"});",
									"",
									"pm.test(\"Test that response has a specific properties\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('transferDescription');",
									"    pm.expect(pm.response.json()).to.have.property('beneficiaryAccountName');",
									"    pm.expect(pm.response.json()).to.have.property('amount');",
									"    pm.expect(pm.response.json()).to.have.property('transactionReference');",
									"    pm.expect(pm.response.json()).to.have.property('narration');",
									"    pm.expect(pm.response.json()).to.have.property('sessionID');",
									"    pm.expect(pm.response.json()).to.have.property('sourceAccountName');",
									"    pm.expect(pm.response.json()).to.have.property('status');",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bd49c086-9b37-4af4-8e0d-b8118d287543"
							}
						}
					],
					"id": "44c5f9ad-f658-4c20-a012-72ea6c1e9403",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fromAccountId\": 1210431538158198,\n    \"sourceAccountName\": \"Bolu Paul\",\n    \"beneficiaryAccountName\": \"Abioye Obaloluwa\",\n    \"dateFormat\": \"dd MMMM yyyy\",\n    \"locale\": \"en\",\n    \"sessionId\": \"RR12345678901116\",\n    \"narration\": \"Inter Bank Transfer request \",\n    \"transferDate\": \"{{todaysdate_ydm}}\",\n    \"transferAmount\": \"100\",\n    \"transferType\": \"INTER_BANK\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounttransfers/createInterBankDebit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounttransfers",
								"createInterBankDebit"
							]
						},
						"description": "Debit leg fot Interbank Transfer."
					},
					"response": [
						{
							"id": "ebd4818a-0146-4010-a648-2d9b037298ef",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"beneficiaryAccountName\": \"Lorem irure\",\n  \"dateFormat\": \"sint veniam amet\",\n  \"fromAccountId\": -22022297,\n  \"locale\": \"cupida\",\n  \"narration\": \"ut sed veniam \",\n  \"sessionId\": \"esse reprehenderit\",\n  \"sourceAccountName\": \"tempor dolor qui\",\n  \"transferAmount\": 16308099.437155306,\n  \"transferDate\": \"2001-02-19T21:52:36.648Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounttransfers/createInterBankDebit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounttransfers",
										"createInterBankDebit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "1698bec5-1116-4e65-b66d-b814d5f7efa1"
								}
							],
							"cookie": [],
							"body": "{\n  \"amount\": -12105060.895562097,\n  \"beneficiaryAccountName\": \"ipsum amet\",\n  \"charge\": -41175809.149012335,\n  \"narration\": \"ipsum do commodo\",\n  \"sessionID\": \"dolore tempor est\",\n  \"sourceAccountName\": \"deserunt aut\",\n  \"status\": \"culpa consectetur velit adipisicing anim\",\n  \"transactionReference\": \"officia proident\",\n  \"transferDescription\": \"in incididunt proident in\"\n}"
						}
					]
				},
				{
					"name": "Refund of an Active Loan by Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "11ac507c-0ab4-4139-9329-a8a0432a8cc6"
							}
						}
					],
					"id": "8954c341-ab43-48d3-890b-d6fa0b93f4cd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "// {\n//   \"dateFormat\": \"dd MMMM yyyy\",\n//   \"fromAccountId\": 1210431538158198,\n//   \"fromAccountType\": \"SAVINGS\",\n//   \"fromClientId\": 25862431621186,\n//   \"fromOfficeId\": 1,\n//   \"locale\": \"en\",\n//   \"toAccountId\": 1,\n//   \"toAccountType\": 2,\n//   \"toClientId\": 1,\n//   \"toOfficeId\": 1,\n//   \"transferAmount\": 130,\n//   \"transferDate\": \"31 October 2014\",\n//   \"transferDescription\": \"Transfer refund to my savings account\"\n// }\n\n{\n  \"fromAccountType\": \"SAVINGS\",\n  \"fromAccountId\": 7758150722935879,\n  \"fromOfficeId\": 11426373912794508,\n  \"fromClientId\": 25862431621186,\n  \"toAccountType\": \"SAVINGS\",\n  \"toAccountId\": 7973452448520586,\n  \"toOfficeId\": 1,\n  \"toClientId\": 14690260376751992,\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\",\n  \"transferDate\": \"{{todaysDate}}\",\n  \"transferAmount\": 100.00,\n  \"transferDescription\": \"Transfer refund to my savings account\"\n//   \"transferType\": \"ACCOUNT_TRANSFER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounttransfers/refundByTransfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounttransfers",
								"refundByTransfer"
							]
						},
						"description": "Ability to refund an active loan by transferring to a savings account."
					},
					"response": [
						{
							"id": "c7d67b1d-dbae-4666-a272-1342da25c57f",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"fromAccountId\": 2,\n  \"fromAccountType\": 1,\n  \"fromClientId\": 1,\n  \"fromOfficeId\": 1,\n  \"locale\": \"en\",\n  \"toAccountId\": 1,\n  \"toAccountType\": 2,\n  \"toClientId\": 1,\n  \"toOfficeId\": 1,\n  \"transferAmount\": 130,\n  \"transferDate\": \"31 October 2014\",\n  \"transferDescription\": \"Transfer refund to my savings account\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounttransfers/refundByTransfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounttransfers",
										"refundByTransfer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "684eaa0e-b6af-49bb-aff8-cd42580b83b9"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1,\n  \"savingsId\": 1\n}"
						}
					]
				},
				{
					"name": "Retrieve Account Transfer Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "92176e8f-59c3-4e99-bb7b-ab249c4b7465"
							}
						}
					],
					"id": "ad46d38a-0a64-4845-a275-f6782d473458",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounttransfers/template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounttransfers",
								"template"
							],
							"query": [
								{
									"key": "fromOfficeId",
									"value": "6608969",
									"description": "fromOfficeId",
									"disabled": true
								},
								{
									"key": "fromClientId",
									"value": "6608969",
									"description": "fromClientId",
									"disabled": true
								},
								{
									"key": "fromAccountId",
									"value": "6608969",
									"description": "fromAccountId",
									"disabled": true
								},
								{
									"key": "fromAccountType",
									"value": "-44553522",
									"description": "fromAccountType",
									"disabled": true
								},
								{
									"key": "toOfficeId",
									"value": "6608969",
									"description": "toOfficeId",
									"disabled": true
								},
								{
									"key": "toClientId",
									"value": "6608969",
									"description": "toClientId",
									"disabled": true
								},
								{
									"key": "toAccountId",
									"value": "6608969",
									"description": "toAccountId",
									"disabled": true
								},
								{
									"key": "toAccountType",
									"value": "-44553522",
									"description": "toAccountType",
									"disabled": true
								}
							]
						},
						"description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n\n\nField Defaults\n\nAllowed Value Lists\n\nExample Requests:\n\n\n\naccounttransfers/template?fromAccountType=2&fromOfficeId=1\n\n\n\naccounttransfers/template?fromAccountType=2&fromOfficeId=1&fromClientId=1\n\n\n\naccounttransfers/template?fromClientId=1&fromAccountType=2&fromAccountId=1"
					},
					"response": [
						{
							"id": "32e9fa16-0c17-480a-8046-37b0221296e7",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounttransfers/template?fromOfficeId=6608969&fromClientId=6608969&fromAccountId=6608969&fromAccountType=-44553522&toOfficeId=6608969&toClientId=6608969&toAccountId=6608969&toAccountType=-44553522",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounttransfers",
										"template"
									],
									"query": [
										{
											"key": "fromOfficeId",
											"value": "6608969"
										},
										{
											"key": "fromClientId",
											"value": "6608969"
										},
										{
											"key": "fromAccountId",
											"value": "6608969"
										},
										{
											"key": "fromAccountType",
											"value": "-44553522"
										},
										{
											"key": "toOfficeId",
											"value": "6608969"
										},
										{
											"key": "toClientId",
											"value": "6608969"
										},
										{
											"key": "toAccountId",
											"value": "6608969"
										},
										{
											"key": "toAccountType",
											"value": "-44553522"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "4347768d-f6f4-4d59-881e-38d82d29b677"
								}
							],
							"cookie": [],
							"body": "{\n  \"fromAccountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromAccountTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fromClientOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fromOffice\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromOfficeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"toAccountTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"toOfficeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"transferAmount\": 0,\n  \"transferDate\": \"1983-09-09\"\n}"
						}
					]
				},
				{
					"name": "Retrieve Refund of an Active Loan by Transfer Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a5816c7e-3a9f-4bf4-9013-f14d9bf2212a"
							}
						}
					],
					"id": "34f64ebd-4683-47fa-973d-9f3601522e03",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounttransfers/templateRefundByTransfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounttransfers",
								"templateRefundByTransfer"
							],
							"query": [
								{
									"key": "fromOfficeId",
									"value": "6608969",
									"description": "fromOfficeId",
									"disabled": true
								},
								{
									"key": "fromClientId",
									"value": "6608969",
									"description": "fromClientId",
									"disabled": true
								},
								{
									"key": "fromAccountId",
									"value": "6608969",
									"description": "fromAccountId",
									"disabled": true
								},
								{
									"key": "fromAccountType",
									"value": "-44553522",
									"description": "fromAccountType",
									"disabled": true
								},
								{
									"key": "toOfficeId",
									"value": "6608969",
									"description": "toOfficeId",
									"disabled": true
								},
								{
									"key": "toClientId",
									"value": "6608969",
									"description": "toClientId",
									"disabled": true
								},
								{
									"key": "toAccountId",
									"value": "6608969",
									"description": "toAccountId",
									"disabled": true
								},
								{
									"key": "toAccountType",
									"value": "-44553522",
									"description": "toAccountType",
									"disabled": true
								}
							]
						},
						"description": "Retrieves Refund of an Active Loan by Transfer TemplateExample Requests :\n\n\n\naccounttransfers/templateRefundByTransfer?fromAccountId=2&fromAccountType=1& toAccountId=1&toAccountType=2&toClientId=1&toOfficeId=1"
					},
					"response": [
						{
							"id": "c7362b37-41a5-4a14-883b-414388c60fe7",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounttransfers/templateRefundByTransfer?fromOfficeId=6608969&fromClientId=6608969&fromAccountId=6608969&fromAccountType=-44553522&toOfficeId=6608969&toClientId=6608969&toAccountId=6608969&toAccountType=-44553522",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounttransfers",
										"templateRefundByTransfer"
									],
									"query": [
										{
											"key": "fromOfficeId",
											"value": "6608969"
										},
										{
											"key": "fromClientId",
											"value": "6608969"
										},
										{
											"key": "fromAccountId",
											"value": "6608969"
										},
										{
											"key": "fromAccountType",
											"value": "-44553522"
										},
										{
											"key": "toOfficeId",
											"value": "6608969"
										},
										{
											"key": "toClientId",
											"value": "6608969"
										},
										{
											"key": "toAccountId",
											"value": "6608969"
										},
										{
											"key": "toAccountType",
											"value": "-44553522"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "9658d89b-a901-4652-ba44-6dd2fb478ef4"
								}
							],
							"cookie": [],
							"body": "{\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromAccount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromAccountOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fromAccountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromAccountTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fromClient\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromClientOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fromOffice\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromOfficeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"toAccount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"toAccountOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"toAccountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"toAccountTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"toClient\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"toClientOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"toOffice\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"toOfficeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"transferAmount\": 130,\n  \"transferDate\": \"1950-12-18\"\n}"
						}
					]
				},
				{
					"name": "Retrieve account transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "43ab6e9e-7ed2-46b0-975f-83cfedf90f2f"
							}
						}
					],
					"id": "90f6db32-55b1-4d80-9a98-6020b489fdef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounttransfers/:transferId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounttransfers",
								":transferId"
							],
							"variable": [
								{
									"key": "transferId",
									"value": "6942923982886436",
									"description": "(Required) transferId"
								}
							]
						},
						"description": "Retrieves account transfer\n\nExample Requests :\n\n\n\naccounttransfers/1"
					},
					"response": [
						{
							"id": "9d8ab72f-d726-4814-bdb0-6a13c67b5318",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounttransfers/:transferId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounttransfers",
										":transferId"
									],
									"variable": [
										{
											"key": "transferId",
											"value": "6608969",
											"description": "(Required) transferId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "d433d177-954a-44a7-9dba-3459be8b0a61"
								}
							],
							"cookie": [],
							"body": "{\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromAccount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromAccountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromClient\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fromOffice\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 1,\n  \"reversed\": false,\n  \"toAccount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"toAccountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"toClient\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"toOffice\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"transferAmount\": 200,\n  \"transferDate\": \"1957-02-21\",\n  \"transferDescription\": \"pay off loan from savings.\"\n}"
						}
					]
				}
			],
			"id": "d64b5558-be3a-46c8-84f8-eb0c2b238116"
		},
		{
			"name": "audits",
			"item": [
				{
					"name": "List Audits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"// Test for the presence of pageItems array",
									"pm.test(\"Response has pageItems array\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('pageItems').that.is.an('array');",
									"});",
									"",
									"// Test for the presence of totalFilteredRecords",
									"pm.test(\"Response has totalFilteredRecords\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('totalFilteredRecords').to.exist",
									"});",
									"",
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.pageItems.forEach(function(config) {",
									"        pm.expect(config).to.have.property('actionName');",
									"        pm.expect(config).to.have.property('entityName');",
									"        pm.expect(config).to.have.property('url');",
									"        pm.expect(config).to.have.property('id');",
									"        pm.expect(config).to.have.property('madeOnDate');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e1d0103d-3ed5-4a17-a77f-a8095d01f118"
							}
						}
					],
					"id": "5cb6be04-a8c3-4c47-813f-d98b76b5256b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/audits?limit=100000&offset=1&paged=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audits"
							],
							"query": [
								{
									"key": "actionName",
									"value": "LOGGING IN SUCCESSFUL FROM UI",
									"disabled": true
								},
								{
									"key": "entityName",
									"value": "anim reprehenderit ut",
									"description": "entityName",
									"disabled": true
								},
								{
									"key": "resourceId",
									"value": "6608969",
									"description": "resourceId",
									"disabled": true
								},
								{
									"key": "makerId",
									"value": "6608969",
									"description": "makerId",
									"disabled": true
								},
								{
									"key": "makerDateTimeFrom",
									"value": "anim reprehenderit ut",
									"description": "makerDateTimeFrom",
									"disabled": true
								},
								{
									"key": "makerDateTimeTo",
									"value": "anim reprehenderit ut",
									"description": "makerDateTimeTo",
									"disabled": true
								},
								{
									"key": "checkerId",
									"value": "6608969",
									"description": "checkerId",
									"disabled": true
								},
								{
									"key": "checkerDateTimeFrom",
									"value": "anim reprehenderit ut",
									"description": "checkerDateTimeFrom",
									"disabled": true
								},
								{
									"key": "checkerDateTimeTo",
									"value": "anim reprehenderit ut",
									"description": "checkerDateTimeTo",
									"disabled": true
								},
								{
									"key": "processingResult",
									"value": "-44553522",
									"description": "processingResult",
									"disabled": true
								},
								{
									"key": "officeId",
									"value": "-44553522",
									"description": "officeId",
									"disabled": true
								},
								{
									"key": "groupId",
									"value": "-44553522",
									"description": "groupId",
									"disabled": true
								},
								{
									"key": "clientId",
									"value": "-44553522",
									"description": "clientId",
									"disabled": true
								},
								{
									"key": "loanid",
									"value": "-44553522",
									"description": "loanid",
									"disabled": true
								},
								{
									"key": "savingsAccountId",
									"value": "-44553522",
									"description": "savingsAccountId",
									"disabled": true
								},
								{
									"key": "paged",
									"value": "false",
									"description": "paged",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "-44553522",
									"description": "offset",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "-44553522",
									"description": "limit",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "anim reprehenderit ut",
									"description": "orderBy",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "anim reprehenderit ut",
									"description": "sortOrder",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100000"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "paged",
									"value": "true"
								}
							]
						},
						"description": "Get a 200 list of audits that match the criteria supplied and sorted by audit id in descending order, and are within the requestors' data scope. Also it supports pagination and sorting\n\nExample Requests:\n\naudits\n\naudits?fields=madeOnDate,maker,processingResult\n\naudits?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00\n\naudits?officeId=1\n\naudits?officeId=1&includeJson=true"
					},
					"response": [
						{
							"id": "9dc13570-4a31-4452-abbf-69f0cf90af14",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/audits?actionName=anim reprehenderit ut&entityName=anim reprehenderit ut&resourceId=6608969&makerId=6608969&makerDateTimeFrom=anim reprehenderit ut&makerDateTimeTo=anim reprehenderit ut&checkerId=6608969&checkerDateTimeFrom=anim reprehenderit ut&checkerDateTimeTo=anim reprehenderit ut&processingResult=-44553522&officeId=-44553522&groupId=-44553522&clientId=-44553522&loanid=-44553522&savingsAccountId=-44553522&paged=false&offset=-44553522&limit=-44553522&orderBy=anim reprehenderit ut&sortOrder=anim reprehenderit ut",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audits"
									],
									"query": [
										{
											"key": "actionName",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "entityName",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "resourceId",
											"value": "6608969"
										},
										{
											"key": "makerId",
											"value": "6608969"
										},
										{
											"key": "makerDateTimeFrom",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "makerDateTimeTo",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "checkerId",
											"value": "6608969"
										},
										{
											"key": "checkerDateTimeFrom",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "checkerDateTimeTo",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "processingResult",
											"value": "-44553522"
										},
										{
											"key": "officeId",
											"value": "-44553522"
										},
										{
											"key": "groupId",
											"value": "-44553522"
										},
										{
											"key": "clientId",
											"value": "-44553522"
										},
										{
											"key": "loanid",
											"value": "-44553522"
										},
										{
											"key": "savingsAccountId",
											"value": "-44553522"
										},
										{
											"key": "paged",
											"value": "false"
										},
										{
											"key": "offset",
											"value": "-44553522"
										},
										{
											"key": "limit",
											"value": "-44553522"
										},
										{
											"key": "orderBy",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "sortOrder",
											"value": "anim reprehenderit ut"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "c3e1d79b-e8e0-4652-bf74-937d292dac43"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"actionName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkedOnDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checker\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clientId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clientName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commandAsJson\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"entityName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupLevelName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"loanAccountNo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"loanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"madeOnDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maker\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"officeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingResult\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"resourceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"savingsAccountNo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subresourceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"actionName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkedOnDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checker\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clientId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clientName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commandAsJson\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"entityName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupLevelName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"loanAccountNo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"loanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"madeOnDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maker\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"officeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingResult\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"resourceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"savingsAccountNo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subresourceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Audit Search Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.appUsers).to.be.an('array').that.is.not.empty;",
									"    jsonData.appUsers.forEach(function(config) {",
									"        pm.expect(config).to.have.property('sendPasswordToEmail');",
									"        pm.expect(config).to.have.property('officeName');",
									"        pm.expect(config).to.have.property('firstname');",
									"        pm.expect(config).to.have.property('passwordNeverExpires');",
									"        pm.expect(config).to.have.property('allowedOffices');",
									"        pm.expect(config).to.have.property('clients');",
									"        pm.expect(config).to.have.property('customFields');",
									"        pm.expect(config).to.have.property('roles');",
									"        pm.expect(config).to.have.property('staff');",
									"        pm.expect(config).to.have.property('availableRoles');",
									"        pm.expect(config).to.have.property('lastname');",
									"        pm.expect(config).to.have.property('selfServiceRoles');",
									"        pm.expect(config).to.have.property('isSelfServiceUser');",
									"    });",
									"    pm.expect(jsonData.entityNames).to.be.an('array').that.is.not.empty;",
									"    pm.expect(jsonData.processingResults).to.be.an('array').that.is.not.empty;",
									"    pm.expect(jsonData.actionNames).to.be.an('array').that.is.not.empty;",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0c7d36bc-28dc-4f1e-970f-c7624a22049f"
							}
						}
					],
					"id": "694d80df-5c0a-4cba-a529-53d90f08ff7e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/audits/searchtemplate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audits",
								"searchtemplate"
							]
						},
						"description": "This is a convenience resource. It can be useful when building an Audit Search UI. \"appUsers\" are data scoped to the office/branch the requestor is associated with.\n\nExample Requests:\n\naudits/searchtemplate\naudits/searchtemplate?fields=actionNames"
					},
					"response": [
						{
							"id": "e5fe74b3-86a1-4027-acb5-9378274b221d",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/audits/searchtemplate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audits",
										"searchtemplate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "ebbbd2d5-d44b-4dda-91dd-936242d424d8"
								}
							],
							"cookie": [],
							"body": "{\n  \"actionNames\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"appUsers\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityNames\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"processingResults\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve an Audit Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "2dfea2e7-e98b-4378-88d6-56e318e79e79"
							}
						}
					],
					"id": "ffcbc193-ec41-4bc2-96f2-28b33c2d472a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/audits/:auditId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audits",
								":auditId"
							],
							"variable": [
								{
									"key": "auditId",
									"value": "6608969",
									"description": "(Required) auditId"
								}
							]
						},
						"description": "Example Requests:\n\naudits/20\naudits/20?fields=madeOnDate,maker,processingResult"
					},
					"response": [
						{
							"id": "83511b50-d4b0-494e-9b02-1ca050f2283a",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/audits/:auditId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audits",
										":auditId"
									],
									"variable": [
										{
											"key": "auditId",
											"value": "6608969",
											"description": "(Required) auditId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "810bf9d9-8d93-438b-9440-27001587f157"
								}
							],
							"cookie": [],
							"body": "{\n  \"actionName\": \"nisi dolor do ad\",\n  \"checkedOnDate\": \"2007-07-28T12:01:57.260Z\",\n  \"checker\": \"Lorem exercitation sunt consequat dolor\",\n  \"clientId\": 66513982,\n  \"clientName\": \"velit\",\n  \"commandAsJson\": \"Excepteur incididunt proident culpa\",\n  \"entityName\": \"labore conseq\",\n  \"groupLevelName\": \"dolore\",\n  \"groupName\": \"nulla\",\n  \"id\": 93034459,\n  \"loanAccountNo\": \"cupid\",\n  \"loanId\": 15783775,\n  \"madeOnDate\": \"1952-05-28T14:11:15.980Z\",\n  \"maker\": \"cillum occaecat irure vol\",\n  \"officeName\": \"sit Ut minim quis non\",\n  \"processingResult\": \"occaecat qu\",\n  \"resourceId\": 5208104,\n  \"savingsAccountNo\": \"ad veniam nisi consec\",\n  \"subresourceId\": -2127246,\n  \"url\": \"veniam deserunt\"\n}"
						}
					]
				}
			],
			"id": "78b241c4-2513-4cb3-9723-56152281e062"
		},
		{
			"name": "authorization-hold-configurations",
			"item": [
				{
					"name": "Get all Authorization Holds Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;",
									"    pm.response.json().forEach(function(config) {",
									"        pm.expect(config).to.have.property('createdDate');",
									"        pm.expect(config).to.have.property('daysToExpiration');",
									"        pm.expect(config).to.have.property('description');",
									"        pm.expect(config).to.have.property('id');",
									"        pm.expect(config).to.have.property('mcc');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"id": "f40dd762-e76b-4934-8a68-63e40a3e7a9c"
							}
						}
					],
					"id": "8f69b791-212b-46c6-a2e9-ab64ac90e35f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/authorization-hold-configurations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization-hold-configurations"
							]
						},
						"description": "Retrieval of all Authorization Holds Configuration"
					},
					"response": [
						{
							"id": "d1fa47d6-5c3b-4735-b98c-e0e2f4a53de8",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-hold-configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-hold-configurations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "caf24cb9-619a-4f2d-abab-d41f74cc3cb4"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysToExpiration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mcc\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysToExpiration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mcc\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new Authorization Hold Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Response has a resourceId property\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('resourceId');",
									"});",
									"",
									"pm.test(\"Response has changes object with data property\", function () {",
									"    pm.expect(pm.response.json().changes).to.be.an('object').that.has.property('data');",
									"});",
									"",
									"pm.test(\"Id in changes data is a number\", function () {",
									"    pm.expect(pm.response.json().changes.data.id).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Mcc in changes data is a number\", function () {",
									"    pm.expect(pm.response.json().changes.data.mcc).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Days to expiration in changes data is a number\", function () {",
									"    pm.expect(pm.response.json().changes.data.daysToExpiration).to.be.a('number');",
									"});",
									"",
									"pm.test(\"Description in changes data is a string\", function () {",
									"    pm.expect(pm.response.json().changes.data.description).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Created date in changes data is an array\", function () {",
									"    pm.expect(pm.response.json().changes.data.createdDate).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Created by in changes data is a string\", function () {",
									"    pm.expect(pm.response.json().changes.data.createdBy).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Success message in changes data is a string\", function () {",
									"    pm.expect(pm.response.json().changes.data.successMessage).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Get authorization config id\", ()=>{",
									"    var jsonData = pm.response.json()",
									"    pm.globals.set(\"authoConfigId\", jsonData.resourceId)",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "5a4050f9-5233-4dc7-a4af-3753801a1238"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
									"pm.globals.set(\"mcc\", num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7b655294-3fdb-45cf-8ed2-a5993fcfdc71"
							}
						}
					],
					"id": "e98c91cf-c59a-429f-858e-57fb9baf2287",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"daysToExpiration\": 2,\n  \"description\": \"An expiration setup config\",\n  \"mcc\": {{mcc}},\n  \"locale\":\"en_NG\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authorization-hold-configurations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization-hold-configurations"
							]
						},
						"description": "Mandatory Fields: mcc, daysToExpiration"
					},
					"response": [
						{
							"id": "0490f14b-7c01-4536-b643-1712379b00dc",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"daysToExpiration\": 36682480,\n  \"description\": \"tempor\",\n  \"mcc\": -98926537\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization-hold-configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-hold-configurations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "6f3637fa-2dc1-4546-8c72-c86248ec113a"
								}
							],
							"cookie": [],
							"body": "{\n  \"createdBy\": \"fugiat esse\",\n  \"createdDate\": \"2019-10-23T02:20:17.845Z\",\n  \"daysToExpiration\": -16196253,\n  \"description\": \"dolor\",\n  \"id\": 6872666,\n  \"lastModifiedDate\": \"1977-09-22T16:58:35.125Z\",\n  \"mcc\": -33071655,\n  \"successMessage\": \"qui cillum sit ea dolore\",\n  \"updatedBy\": \"adipisicing pariatur magna\"\n}"
						}
					]
				},
				{
					"name": "Create a existing Authorization Hold Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Response is a JSON object\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});",
									"",
									"pm.test(\"Response contains errors array\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('errors').that.is.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "4d91af69-7110-4851-aa57-5d99cd00c96e"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "ae53ac13-5eb2-4f9e-af6c-f12203998182"
							}
						}
					],
					"id": "0152153f-89d7-4f23-99be-438a46209d1d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"daysToExpiration\": 2,\n  \"description\": \"An expiration setup config\",\n  \"mcc\": \"20\",\n  \"locale\":\"en_NG\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authorization-hold-configurations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization-hold-configurations"
							]
						},
						"description": "Mandatory Fields: mcc, daysToExpiration"
					},
					"response": [
						{
							"id": "e1d37710-3515-4955-8451-57fb7979c867",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"daysToExpiration\": 36682480,\n  \"description\": \"tempor\",\n  \"mcc\": -98926537\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization-hold-configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-hold-configurations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "8fb2968f-b5da-450b-8020-d9bd0c92af45"
								}
							],
							"cookie": [],
							"body": "{\n  \"createdBy\": \"fugiat esse\",\n  \"createdDate\": \"2019-10-23T02:20:17.845Z\",\n  \"daysToExpiration\": -16196253,\n  \"description\": \"dolor\",\n  \"id\": 6872666,\n  \"lastModifiedDate\": \"1977-09-22T16:58:35.125Z\",\n  \"mcc\": -33071655,\n  \"successMessage\": \"qui cillum sit ea dolore\",\n  \"updatedBy\": \"adipisicing pariatur magna\"\n}"
						}
					]
				},
				{
					"name": "Get an Authorization Hold Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has the required properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('createdDate');",
									"    pm.expect(jsonData).to.have.property('updatedBy');",
									"    pm.expect(jsonData).to.have.property('createdBy');",
									"    pm.expect(jsonData).to.have.property('lastModifiedDate');",
									"    pm.expect(jsonData).to.have.property('daysToExpiration');",
									"    pm.expect(jsonData).to.have.property('description');",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('mcc');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "473eec8b-0c20-4991-996c-7c3bb00e098a"
							}
						}
					],
					"id": "b628ca0b-ab2f-4902-8d80-e71876aea3ff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/authorization-hold-configurations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization-hold-configurations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2358539743135585"
								}
							]
						},
						"description": "Retrieval of a Authorization Hold Configuration by Id"
					},
					"response": [
						{
							"id": "633ed91e-b2cc-4c29-8a52-64d23eb4f4e8",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-hold-configurations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-hold-configurations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6608969",
											"description": "(Required) id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "a232407c-3afd-4b84-a118-ab5080904d57"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysToExpiration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mcc\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysToExpiration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mcc\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Update an existing Authorization Hold Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "849a479d-47ff-4ef5-84f2-37e024ce0364"
							}
						}
					],
					"id": "41919990-4bad-4048-95dc-f5d75265885c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"daysToExpiration\": 15,\n  \"locale\":\"en_GB\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authorization-hold-configurations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization-hold-configurations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2358539743135585",
									"description": "(Required) id"
								}
							]
						},
						"description": "Mandatory Fields: mcc, daysToExpiration"
					},
					"response": [
						{
							"id": "9715cc95-5465-4b8f-8c6b-7051ad29f476",
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"daysToExpiration\": -71540313,\n  \"description\": \"ut quis incididunt\",\n  \"id\": 69626718,\n  \"lastModifiedDate\": \"1968-11-16T23:39:05.263Z\",\n  \"mcc\": -76244954,\n  \"updatedBy\": \"Lorem quis laborum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization-hold-configurations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-hold-configurations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6608969",
											"description": "(Required) id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "0db057c9-d776-45ea-a94b-c21a4f396b15"
								}
							],
							"cookie": [],
							"body": "{\n  \"createdBy\": \"fugiat esse\",\n  \"createdDate\": \"2019-10-23T02:20:17.845Z\",\n  \"daysToExpiration\": -16196253,\n  \"description\": \"dolor\",\n  \"id\": 6872666,\n  \"lastModifiedDate\": \"1977-09-22T16:58:35.125Z\",\n  \"mcc\": -33071655,\n  \"successMessage\": \"qui cillum sit ea dolore\",\n  \"updatedBy\": \"adipisicing pariatur magna\"\n}"
						}
					]
				},
				{
					"name": "Delete an existing Authorization Hold Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an object with resourceId and changes properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('resourceId');",
									"    pm.expect(jsonData).to.have.property('changes');",
									"});",
									"",
									"pm.test(\"Changes property has a successMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.changes).to.have.property('successMessage');",
									"});"
								],
								"type": "text/javascript",
								"id": "f5d01a4a-5a6b-4dea-a16c-bec166d97bb8"
							}
						}
					],
					"id": "fae9b212-2ec6-485a-8921-1b9dc9e6e58f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/authorization-hold-configurations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization-hold-configurations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{authoConfigId}}",
									"description": "(Required) id"
								}
							]
						},
						"description": "Performing Soft-Deletion of an existing Authorization Hold Configuration Record."
					},
					"response": [
						{
							"id": "1ff02a81-503b-44f1-8108-7fd41acdaf19",
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-hold-configurations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-hold-configurations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6608969",
											"description": "(Required) id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "f25ced89-d630-4268-8eae-7af1f2452fc3"
								}
							],
							"cookie": [],
							"body": "\"anim reprehenderit ut\""
						}
					]
				}
			],
			"id": "003ea55d-4405-4137-ace9-43f1d0b610bc"
		},
		{
			"name": "authorization-holds",
			"item": [
				{
					"name": "accounts",
					"item": [
						{
							"name": "Create Account Authorization Hold",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											"",
											"pm.test(\"Response has a resourceId property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('resourceId');",
											"});",
											"",
											"pm.test(\"Response has a loanId property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('loanId');",
											"});",
											"",
											"pm.test(\"Response has changes object with data property\", function () {",
											"    pm.expect(pm.response.json().changes).to.be.an('object').that.has.property('data');",
											"});",
											"",
											"pm.test(\"Id in changes data is a number\", function () {",
											"    pm.expect(pm.response.json().changes.data.id).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Source of authorization is account\", function () {",
											"    pm.expect(pm.response.json().changes.data.source).eql('ACCOUNT');",
											"});",
											"",
											"",
											"pm.test(\"External Reference Id in changes data is a string\", function () {",
											"    pm.expect(pm.response.json().changes.data.externalReferenceId).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Currency Code in changes data is a string\", function () {",
											"    pm.expect(pm.response.json().changes.data.currencyCode).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Status in changes data is pending\", function () {",
											"    pm.expect(pm.response.json().changes.data.status).eql('PENDING');",
											"});",
											"",
											"pm.test(\"Created date in changes data is an array\", function () {",
											"    pm.expect(pm.response.json().changes.data.creationDate).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Created by in changes data is a string\", function () {",
											"    pm.expect(pm.response.json().changes.data.createdBy).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Success message in changes data is a string\", function () {",
											"    pm.expect(pm.response.json().changes.data.successMessage).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Get account authorization hold id\", ()=>{",
											"    var jsonData = pm.response.json()",
											"    pm.globals.set(\"accountAuthHoldId\", jsonData.resourceId)",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "576bd238-f3ab-4c34-9cd3-d4d772baba54"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (1000 - 1 + 1)) + 1;",
											"pm.collectionVariables.set(\"externalReferenceId\", \"Auth-00\"+num);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "e439abf0-f6d9-4e5c-8baf-c9168c0db149"
									}
								}
							],
							"id": "4997f5de-1cc2-40cd-be24-35ad0fd6a503",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountKey\": 109115519100090,\n  \"accountType\": \"LOAN\",\n  \"advice\": false,\n  \"amount\": 50000,\n  \"creditDebitIndicator\": \"DEBIT\",\n  \"currencyCode\": \"NGN\",\n  \"exchangeRate\": null,\n  \"externalReferenceId\": \"{{externalReferenceId}}\",\n  \"originalAmount\": 0,\n  \"originalCurrency\": null,\n  \"source\": \"ACCOUNT\",\n  \"locale\": \"en\"\n  \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Account Authorization Holds",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											"",
											"pm.test(\"TotalFilteredRecords is a number\", function () {",
											"    pm.expect(pm.response.json().totalFilteredRecords).to.be.a('number');",
											"});",
											"",
											"pm.test(\"PageItems is an array of objects with specific properties\", function () {",
											"    pm.expect(pm.response.json().pageItems).to.be.an('array').that.is.not.empty;",
											"    pm.response.json().pageItems.forEach(function(config) {",
											"        pm.expect(config).to.have.property('amount');",
											"        pm.expect(config).to.have.property('advice');",
											"        pm.expect(config).to.have.property('accountType');",
											"        pm.expect(config).to.have.property('id');",
											"        pm.expect(config).to.have.property('userTransactionTime');",
											"        pm.expect(config).to.have.property('reversalDate');",
											"        pm.expect(config).to.have.property('cardAcceptor');",
											"        pm.expect(config).to.have.property('source');",
											"        pm.expect(config).to.have.property('creationDate');",
											"        pm.expect(config).to.have.property('creditDebitIndicator');",
											"        pm.expect(config).to.have.property('accountKey');",
											"        pm.expect(config).to.have.property('externalReferenceId');",
											"        pm.expect(config).to.have.property('originalAmount');",
											"        pm.expect(config).to.have.property('createdBy');",
											"        pm.expect(config).to.have.property('status');",
											"    });",
											"});",
											"",
											"pm.test(\"TotalFilteredRecords equal Total Records\", function () {",
											"    pm.expect(pm.response.json().totalFilteredRecords).eql(pm.response.json().totalRecord);",
											"});",
											"",
											"//Get specific ids",
											"let response = pm.response.json();",
											"let idsForSettlement = [];",
											"let amountsForSettlement = []",
											"",
											"response.pageItems.forEach(item => {",
											"    if (item.status.code === 'PENDING' && item.accountKey === '1377415863147957') {",
											"        // Add the id to the matchingIds array",
											"        idsForSettlement.push(item.id);",
											"        amountsForSettlement.push(item.amount)",
											"    }",
											"});",
											"",
											"pm.collectionVariables.set(\"idForSettlement\", idsForSettlement[0])",
											"pm.collectionVariables.set(\"amountForSettlement\", amountsForSettlement[0])",
											"",
											"",
											"console.log(\"Settlment IDs:\", idsForSettlement);",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "868a7ca2-6c28-401b-b81d-9dc90dd455a5"
									}
								}
							],
							"id": "3e3a63be-e74b-4530-badd-45914ab1bed0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/accounts/DEPOSIT/1377415863147957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"accounts",
										"DEPOSIT",
										"1377415863147957"
									],
									"query": [
										{
											"key": "status",
											"value": "REVERSED",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": null,
											"disabled": true
										},
										{
											"key": "sortOrder",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieval of a Authorization Hold by Account Key And External Reference Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response has some specific properties\", ()=> {",
											"    var config = pm.response.json()",
											"    pm.expect(config).to.have.property('amount');",
											"    pm.expect(config).to.have.property('advice');",
											"    pm.expect(config).to.have.property('accountType');",
											"    pm.expect(config).to.have.property('id');",
											"    pm.expect(config).to.have.property('userTransactionTime');",
											"    pm.expect(config).to.have.property('reversalDate');",
											"    pm.expect(config).to.have.property('cardAcceptor');",
											"    pm.expect(config).to.have.property('source');",
											"    pm.expect(config).to.have.property('creationDate');",
											"    pm.expect(config).to.have.property('creditDebitIndicator');",
											"    pm.expect(config).to.have.property('accountKey');",
											"    pm.expect(config).to.have.property('externalReferenceId');",
											"    pm.expect(config).to.have.property('originalAmount');",
											"    pm.expect(config).to.have.property('createdBy');",
											"    pm.expect(config).to.have.property('status');",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "e09ce592-cb90-4f65-a72d-fba8aa00120a"
									}
								}
							],
							"id": "9142dca1-3639-4ca4-9ad2-08dbb337f092",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/accounts/DEPOSIT/1377415863147957/Auth-0003",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"accounts",
										"DEPOSIT",
										"1377415863147957",
										"Auth-0003"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Single Authorization Hold by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is a JSON object\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"pm.test(\"Response is a valid JSON object\", function () {",
											"    pm.response.to.have.jsonBody();",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "d5fc76a6-b76d-43b2-9821-59dd73e8cb10"
									}
								}
							],
							"id": "e757edd9-6610-4c2e-9e6b-00be15ae7c04",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/427188244583905",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"427188244583905"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reverse an Account Authorization Hold",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is a JSON object\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"pm.test(\"Response is a valid JSON object\", function () {",
											"    pm.response.to.have.jsonBody();",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "1f832344-08a1-4b1e-8572-6d9450dc28c6"
									}
								}
							],
							"id": "4f0b4399-2c2a-47a3-bb59-9eb6eb4b449a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountKey\": 1377415863147957,\n  \"accountType\": \"DEPOSIT\",\n  \"externalReferenceId\": \"Auth-0002\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/accounts/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"accounts",
										"reverse"
									]
								}
							},
							"response": []
						}
					],
					"id": "fc2b9419-52c9-4a0a-857c-103746520d3e"
				},
				{
					"name": "cards",
					"item": [
						{
							"name": "{cardToken}/{externalReferenceId}",
							"item": [
								{
									"name": "Reverse a Card Authorization Hold",
									"id": "1940708a-89b0-4f20-8a49-d00f4e6ccfb4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:externalReferenceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization-holds",
												"cards",
												":cardToken",
												":externalReferenceId"
											],
											"variable": [
												{
													"key": "cardToken",
													"value": "anim reprehenderit ut",
													"description": "(Required) Card token"
												},
												{
													"key": "externalReferenceId",
													"value": "anim reprehenderit ut",
													"description": "(Required) External Reference Id"
												}
											]
										},
										"description": "Performing reversal of a Card Authorization Hold."
									},
									"response": [
										{
											"id": "6a2de7c9-89a6-40c6-ad33-25aacde29ada",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:externalReferenceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization-holds",
														"cards",
														":cardToken",
														":externalReferenceId"
													],
													"variable": [
														{
															"key": "cardToken",
															"value": "anim reprehenderit ut",
															"description": "(Required) Card token"
														},
														{
															"key": "externalReferenceId",
															"value": "anim reprehenderit ut",
															"description": "(Required) External Reference Id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "b78b0cef-624a-4759-aea4-a0de90828fd8"
												}
											],
											"cookie": [],
											"body": "\"anim reprehenderit ut\""
										}
									]
								},
								{
									"name": "Get an Authorization Hold",
									"id": "a05b0032-8551-4f81-a817-f503d9481fa1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:externalReferenceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization-holds",
												"cards",
												":cardToken",
												":externalReferenceId"
											],
											"variable": [
												{
													"key": "cardToken",
													"value": "anim reprehenderit ut",
													"description": "(Required) Card token"
												},
												{
													"key": "externalReferenceId",
													"value": "anim reprehenderit ut",
													"description": "(Required) External Reference Id"
												}
											]
										},
										"description": "Retrieval of a Authorization Hold by Card Token And External Reference Id"
									},
									"response": [
										{
											"id": "b381ccd6-36a3-4a6f-8165-5971c922d652",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:externalReferenceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization-holds",
														"cards",
														":cardToken",
														":externalReferenceId"
													],
													"variable": [
														{
															"key": "cardToken",
															"value": "anim reprehenderit ut",
															"description": "(Required) Card token"
														},
														{
															"key": "externalReferenceId",
															"value": "anim reprehenderit ut",
															"description": "(Required) External Reference Id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "9c2e12de-56c4-473b-8c1d-b0238c8dc51f"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"accountKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"accountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"advice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardAcceptor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardToken\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creationDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creditDebitIndicator\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currencyCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchangeRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalAmount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalCurrency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reversalDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"source\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userTransactionTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"accountKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"accountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"advice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardAcceptor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardToken\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creationDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creditDebitIndicator\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currencyCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchangeRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalAmount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalCurrency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reversalDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"source\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userTransactionTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "Decrease amount for Card Authorization Hold",
									"id": "24a3631c-315d-40cc-9518-c507c44bd6ac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"advice\": true,\n  \"amount\": -90002667.65185691,\n  \"cardToken\": \"magna\",\n  \"currencyCode\": \"Lorem et sint velit\",\n  \"encodedKey\": \"in aute\",\n  \"externalReferenceId\": \"eu \"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:externalReferenceId/decrease",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization-holds",
												"cards",
												":cardToken",
												":externalReferenceId",
												"decrease"
											],
											"variable": [
												{
													"key": "cardToken",
													"value": "anim reprehenderit ut",
													"description": "(Required) Card token"
												},
												{
													"key": "externalReferenceId",
													"value": "anim reprehenderit ut",
													"description": "(Required) External Reference Id"
												}
											]
										},
										"description": "Mandatory Fields: cardToken, externalReferenceId, amount, advice"
									},
									"response": [
										{
											"id": "90642efe-343a-469b-9ec0-348b8b2fe4c4",
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"advice\": true,\n  \"amount\": -90002667.65185691,\n  \"cardToken\": \"magna\",\n  \"currencyCode\": \"Lorem et sint velit\",\n  \"encodedKey\": \"in aute\",\n  \"externalReferenceId\": \"eu \"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:externalReferenceId/decrease",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization-holds",
														"cards",
														":cardToken",
														":externalReferenceId",
														"decrease"
													],
													"variable": [
														{
															"key": "cardToken",
															"value": "anim reprehenderit ut",
															"description": "(Required) Card token"
														},
														{
															"key": "externalReferenceId",
															"value": "anim reprehenderit ut",
															"description": "(Required) External Reference Id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "9bdb287b-fb7a-4fea-aa88-9900fe955e54"
												}
											],
											"cookie": [],
											"body": "\"anim reprehenderit ut\""
										}
									]
								},
								{
									"name": "Increase amount for Card Authorization Hold",
									"id": "d1eb7852-0697-4852-9076-816b5bef4334",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"advice\": true,\n  \"amount\": 100000,\n  \"cardToken\": \"10099\",\n  \"currencyCode\": \"NGN\",\n  \"encodedKey\": \"inaute\",\n  \"externalReferenceId\": \"879-099\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:externalReferenceId/increase",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization-holds",
												"cards",
												":cardToken",
												":externalReferenceId",
												"increase"
											],
											"variable": [
												{
													"key": "cardToken",
													"value": "10099",
													"description": "(Required) Card token"
												},
												{
													"key": "externalReferenceId",
													"value": "879-099",
													"description": "(Required) External Reference Id"
												}
											]
										},
										"description": "Mandatory Fields: cardToken, externalReferenceId, amount, advice"
									},
									"response": [
										{
											"id": "3ec3c79c-456e-494b-8fcb-9d932e456c5a",
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"advice\": true,\n  \"amount\": -90002667.65185691,\n  \"cardToken\": \"magna\",\n  \"currencyCode\": \"Lorem et sint velit\",\n  \"encodedKey\": \"in aute\",\n  \"externalReferenceId\": \"eu \"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:externalReferenceId/increase",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization-holds",
														"cards",
														":cardToken",
														":externalReferenceId",
														"increase"
													],
													"variable": [
														{
															"key": "cardToken",
															"value": "anim reprehenderit ut",
															"description": "(Required) Card token"
														},
														{
															"key": "externalReferenceId",
															"value": "anim reprehenderit ut",
															"description": "(Required) External Reference Id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "2015e8fc-c684-45d5-bbc6-0389d6154813"
												}
											],
											"cookie": [],
											"body": "\"anim reprehenderit ut\""
										}
									]
								}
							],
							"id": "a1af2a8f-22a3-4f24-8f2b-13b84c82959e"
						},
						{
							"name": "Create Debit Card",
							"item": [
								{
									"name": "Create & Associate Card to Deposit Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"eval(pm.environment.get('baseSuccessTest'))();",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "1ed2ab9b-1269-4100-81fe-5c161bf37cbe"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var num = Math.floor(Math.random() * (10000 - 1 + 1)) + 1;",
													"pm.collectionVariables.set(\"newCardToken\", \"10\"+num);",
													"",
													"var num = Math.floor(Math.random() * (1000 - 1 + 1)) + 1;",
													"pm.collectionVariables.set(\"cardExternalReferenceId\", \"card-0\"+num);"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "b85f1ebf-557b-4d14-8b16-f370b89050dd"
											}
										}
									],
									"id": "3839aed4-b45d-469e-ab93-299b371d6951",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cardReferenceToken\": \"{{newCardToken}}\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"externalId\": \"{{cardExternalReferenceId}}\",\n  \"locale\": \"en\",\n  \"savingsAccountId\": 7714052180104296\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/savings-accounts/cards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"savings-accounts",
												"cards"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a new Debit Card Authorization Hold",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"eval(pm.environment.get('baseSuccessTest'))();",
													"",
													"pm.test(\"Response has a resourceId property\", function () {",
													"    pm.expect(pm.response.json()).to.have.property('resourceId');",
													"});",
													"",
													"pm.test(\"Response has changes object with data property\", function () {",
													"    pm.expect(pm.response.json().changes).to.be.an('object').that.has.property('data');",
													"});",
													"",
													"pm.test(\"Id in changes data is a number\", function () {",
													"    pm.expect(pm.response.json().changes.data.id).to.be.a('number');",
													"});",
													"",
													"pm.test(\"Source of authorization is account\", function () {",
													"    pm.expect(pm.response.json().changes.data.source).eql('CARD');",
													"});",
													"",
													"",
													"pm.test(\"External Reference Id in changes data is a string\", function () {",
													"    pm.expect(pm.response.json().changes.data.externalReferenceId).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Currency Code in changes data is a string\", function () {",
													"    pm.expect(pm.response.json().changes.data.currencyCode).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Status in changes data is pending\", function () {",
													"    pm.expect(pm.response.json().changes.data.status).eql('PENDING');",
													"});",
													"",
													"pm.test(\"Created date in changes data is an array\", function () {",
													"    pm.expect(pm.response.json().changes.data.creationDate).to.be.an('array');",
													"});",
													"",
													"pm.test(\"Created by in changes data is a string\", function () {",
													"    pm.expect(pm.response.json().changes.data.createdBy).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Success message in changes data is a string\", function () {",
													"    pm.expect(pm.response.json().changes.data.successMessage).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Success message returns created successfully\", function () {",
													"    pm.expect(pm.response.json().changes.data.successMessage).contains('Card Authorization Hold Created Successfully');",
													"});",
													"",
													"pm.test(\"Get card authorization hold id\", ()=>{",
													"    var jsonData = pm.response.json()",
													"    pm.collectionVariables.set(\"cardAuthHoldId\", jsonData.resourceId)",
													"})",
													"",
													"pm.test(\"Get accountKey id\", ()=>{",
													"    var jsonData = pm.response.json().changes.data",
													"    pm.collectionVariables.set(\"accountKeyId\", jsonData.accountKey)",
													"})",
													"",
													"pm.test(\"Get card amount\", ()=>{",
													"    var jsonData = pm.response.json().changes.data",
													"    pm.collectionVariables.set(\"cardAmount\", jsonData.amount)",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "b3b972f0-dfde-48af-a3f7-637fcecf6ba7"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "706cb796-3a74-4e70-a00e-b74487279d2d"
											}
										}
									],
									"id": "b9bab9cd-b7b5-492b-8c90-4e9d2e70b0d6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountKey\": 0,\n  \"accountType\": \"SAVINGS\",\n  \"advice\": true,\n  \"amount\": 10000,\n  \"cardAcceptor\": {\n    \"city\": \"Yaba\",\n    \"country\": \"Nigeria\",\n    \"mcc\": \"019\",\n    \"name\": \"Abioye Obaloluwa\",\n    \"state\": \"Lagos\",\n    \"street\": \"22 Ademola Street\",\n    \"zip\": \"120001\"\n  },\n  \"cardToken\": \"{{newCardToken}}\",\n  \"creditDebitIndicator\": \"DEBIT\",\n  \"currencyCode\": \"NGN\",\n  \"exchangeRate\": 1000,\n  \"externalReferenceId\": \"{{cardExternalReferenceId}}\",\n  \"originalAmount\": 10000,\n  \"originalCurrency\": \"NGN\",\n  \"source\": \"CARD\",\n  \"locale\":\"en_NG\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization-holds/cards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization-holds",
												"cards"
											]
										},
										"description": "Mandatory Fields: cardToken, cardAcceptor, advice, amount, creditDebitIndicator, currencyCode"
									},
									"response": [
										{
											"id": "14d282e3-b843-42f2-8f49-2b3a8fd17716",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountKey\": 17125700,\n  \"accountType\": \"LOAN\",\n  \"advice\": false,\n  \"amount\": -65349394.23601815,\n  \"cardAcceptor\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cardToken\": \"sint deserunt veniam aute\",\n  \"creditDebitIndicator\": \"DBIT\",\n  \"currencyCode\": \"fugiat minim anim ut sit\",\n  \"exchangeRate\": -68979308.13439226,\n  \"externalReferenceId\": \"veniam mollit culpa\",\n  \"originalAmount\": -31374315.630228594,\n  \"originalCurrency\": \"commodo Duis fugiat\",\n  \"source\": \"ACCOUNT\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/authorization-holds/cards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization-holds",
														"cards"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "7b9e573f-1526-4150-a717-5ff073a975ee"
												}
											],
											"cookie": [],
											"body": "{\n  \"accountKey\": \"dolor et nostrud eu non\",\n  \"accountType\": \"DEPOSIT\",\n  \"advice\": true,\n  \"amount\": -79575961.79307535,\n  \"cardToken\": \"occaecat irure eu minim\",\n  \"city\": \"consectetur occaecat proident in\",\n  \"country\": \"nostrud\",\n  \"createdBy\": \"reprehenderit sit dolore f\",\n  \"creationDate\": \"1977-05-19T03:27:47.344Z\",\n  \"creditDebitIndicator\": \"DBIT\",\n  \"currencyCode\": \"nulla irure aliquip do\",\n  \"exchangeRate\": 81697421.19788155,\n  \"externalReferenceId\": \"proident velit cillum\",\n  \"id\": -41806837,\n  \"mcc\": 59994660,\n  \"name\": \"sed sint Excepteur dolor\",\n  \"originalAmount\": 57928453.82434884,\n  \"originalCurrency\": \"\",\n  \"reversalDate\": \"1975-11-23T17:06:19.235Z\",\n  \"source\": \"CARD\",\n  \"state\": \"ipsum sunt incididunt\",\n  \"status\": \"PENDING\",\n  \"street\": \"id culpa ea sit\",\n  \"successMessage\": \"ipsum commodo\",\n  \"userTransactionTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"zip\": \"non ipsum\"\n}"
										}
									]
								},
								{
									"name": "Make Settlement for Debit-Type Account Authorization Hold",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"eval(pm.environment.get('baseSuccessTest'))();",
													"",
													"pm.test(\"Response has a resourceId property\", function () {",
													"    pm.expect(pm.response.json()).to.have.property('resourceId');",
													"});",
													"",
													"pm.test(\"Response has a savingsId property\", function () {",
													"    pm.expect(pm.response.json()).to.have.property('savingsId');",
													"});",
													"",
													"pm.test(\"Response has a officeId property\", function () {",
													"    pm.expect(pm.response.json()).to.have.property('officeId');",
													"});",
													"",
													"pm.test(\"Get debit settlement id\", ()=>{",
													"    var jsonData = pm.response.json()",
													"    pm.collectionVariables.set(\"debitSettlementId\", jsonData.resourceId)",
													"})",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "655e606e-fdf4-4d6b-a2c2-77ee255e1206"
											}
										}
									],
									"id": "1e7aff46-7d65-4ea1-a45a-eb9376f691db",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transactionDate\": \"{{todaysDate}}\",\n  \"transactionAmount\": {{cardAmount}},\n  \"holdExternalReferenceId\": {{cardAuthHoldId}},\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\"  \n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/current-accounts/{{accountKeyId}}/transactions?command=withdrawal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"current-accounts",
												"{{accountKeyId}}",
												"transactions"
											],
											"query": [
												{
													"key": "command",
													"value": "withdrawal"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "4d9239bd-1392-46d1-b193-39850edc81ce"
						},
						{
							"name": "Create Credit Card",
							"item": [
								{
									"name": "Create & Associate Card to Deposit Account Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"eval(pm.environment.get('baseSuccessTest'))();",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "683b53a7-b30c-4ae8-a9fb-2122552ec05f"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var num = Math.floor(Math.random() * (10000 - 1 + 1)) + 1;",
													"pm.collectionVariables.set(\"newCardToken\", \"10\"+num);",
													"",
													"var num = Math.floor(Math.random() * (1000 - 1 + 1)) + 1;",
													"pm.collectionVariables.set(\"cardExternalReferenceId\", \"card-0\"+num);"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "fc9369a1-3b3a-4a00-961c-39b4b6df4664"
											}
										}
									],
									"id": "2bef6a60-9448-4920-b751-b79abb374ca3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cardReferenceToken\": \"{{newCardToken}}\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"externalId\": \"{{cardExternalReferenceId}}\",\n  \"locale\": \"en\",\n  \"savingsAccountId\": 7714052180104296\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/savings-accounts/cards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"savings-accounts",
												"cards"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a new Credit Card Authorization Hold",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"eval(pm.environment.get('baseSuccessTest'))();",
													"",
													"pm.test(\"Response has a resourceId property\", function () {",
													"    pm.expect(pm.response.json()).to.have.property('resourceId');",
													"});",
													"",
													"pm.test(\"Response has changes object with data property\", function () {",
													"    pm.expect(pm.response.json().changes).to.be.an('object').that.has.property('data');",
													"});",
													"",
													"pm.test(\"Id in changes data is a number\", function () {",
													"    pm.expect(pm.response.json().changes.data.id).to.be.a('number');",
													"});",
													"",
													"pm.test(\"Source of authorization is account\", function () {",
													"    pm.expect(pm.response.json().changes.data.source).eql('CARD');",
													"});",
													"",
													"",
													"pm.test(\"External Reference Id in changes data is a string\", function () {",
													"    pm.expect(pm.response.json().changes.data.externalReferenceId).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Currency Code in changes data is a string\", function () {",
													"    pm.expect(pm.response.json().changes.data.currencyCode).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Status in changes data is pending\", function () {",
													"    pm.expect(pm.response.json().changes.data.status).eql('PENDING');",
													"});",
													"",
													"pm.test(\"Created date in changes data is an array\", function () {",
													"    pm.expect(pm.response.json().changes.data.creationDate).to.be.an('array');",
													"});",
													"",
													"pm.test(\"Created by in changes data is a string\", function () {",
													"    pm.expect(pm.response.json().changes.data.createdBy).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Success message in changes data is a string\", function () {",
													"    pm.expect(pm.response.json().changes.data.successMessage).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Success message returns created successfully\", function () {",
													"    pm.expect(pm.response.json().changes.data.successMessage).contains('Card Authorization Hold Created Successfully');",
													"});",
													"",
													"pm.test(\"Get card authorization hold id\", ()=>{",
													"    var jsonData = pm.response.json()",
													"    pm.collectionVariables.set(\"cardAuthHoldId\", jsonData.resourceId)",
													"})",
													"",
													"pm.test(\"Get accountKey id\", ()=>{",
													"    var jsonData = pm.response.json().changes.data",
													"    pm.collectionVariables.set(\"accountKeyId\", jsonData.accountKey)",
													"})",
													"",
													"pm.test(\"Get card amount\", ()=>{",
													"    var jsonData = pm.response.json().changes.data",
													"    pm.collectionVariables.set(\"cardAmount\", jsonData.amount)",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "210c2982-11d0-48c8-83d5-ce8cd727ac7a"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "ab1df545-40e8-42b0-9364-9e52c58473e8"
											}
										}
									],
									"id": "9eb085e4-140b-4e0e-a8d5-14be31e2924d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountKey\": 0,\n  \"accountType\": \"SAVINGS\",\n  \"advice\": true,\n  \"amount\": 5000,\n  \"cardAcceptor\": {\n    \"city\": \"Yaba\",\n    \"country\": \"Nigeria\",\n    \"mcc\": \"019\",\n    \"name\": \"Abioye Obaloluwa\",\n    \"state\": \"Lagos\",\n    \"street\": \"22 Ademola Street\",\n    \"zip\": \"120001\"\n  },\n  \"cardToken\": \"{{newCardToken}}\",\n  \"creditDebitIndicator\": \"CREDIT\",\n  \"currencyCode\": \"NGN\",\n  \"exchangeRate\": 1000,\n  \"externalReferenceId\": \"{{cardExternalReferenceId}}\",\n  \"originalAmount\": 5000,\n  \"originalCurrency\": \"NGN\",\n  \"source\": \"CARD\",\n  \"locale\":\"en_NG\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization-holds/cards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization-holds",
												"cards"
											]
										},
										"description": "Mandatory Fields: cardToken, cardAcceptor, advice, amount, creditDebitIndicator, currencyCode"
									},
									"response": [
										{
											"id": "d8ef4087-0e27-40f9-9e31-fbd0b8d35170",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountKey\": 17125700,\n  \"accountType\": \"LOAN\",\n  \"advice\": false,\n  \"amount\": -65349394.23601815,\n  \"cardAcceptor\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cardToken\": \"sint deserunt veniam aute\",\n  \"creditDebitIndicator\": \"DBIT\",\n  \"currencyCode\": \"fugiat minim anim ut sit\",\n  \"exchangeRate\": -68979308.13439226,\n  \"externalReferenceId\": \"veniam mollit culpa\",\n  \"originalAmount\": -31374315.630228594,\n  \"originalCurrency\": \"commodo Duis fugiat\",\n  \"source\": \"ACCOUNT\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/authorization-holds/cards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authorization-holds",
														"cards"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "fc2856a6-1e15-442c-9e9f-930f4092fbbf"
												}
											],
											"cookie": [],
											"body": "{\n  \"accountKey\": \"dolor et nostrud eu non\",\n  \"accountType\": \"DEPOSIT\",\n  \"advice\": true,\n  \"amount\": -79575961.79307535,\n  \"cardToken\": \"occaecat irure eu minim\",\n  \"city\": \"consectetur occaecat proident in\",\n  \"country\": \"nostrud\",\n  \"createdBy\": \"reprehenderit sit dolore f\",\n  \"creationDate\": \"1977-05-19T03:27:47.344Z\",\n  \"creditDebitIndicator\": \"DBIT\",\n  \"currencyCode\": \"nulla irure aliquip do\",\n  \"exchangeRate\": 81697421.19788155,\n  \"externalReferenceId\": \"proident velit cillum\",\n  \"id\": -41806837,\n  \"mcc\": 59994660,\n  \"name\": \"sed sint Excepteur dolor\",\n  \"originalAmount\": 57928453.82434884,\n  \"originalCurrency\": \"\",\n  \"reversalDate\": \"1975-11-23T17:06:19.235Z\",\n  \"source\": \"CARD\",\n  \"state\": \"ipsum sunt incididunt\",\n  \"status\": \"PENDING\",\n  \"street\": \"id culpa ea sit\",\n  \"successMessage\": \"ipsum commodo\",\n  \"userTransactionTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"zip\": \"non ipsum\"\n}"
										}
									]
								},
								{
									"name": "Make Settlement for Credit-Type Account Authorization Hold",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response is a JSON object\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"pm.test(\"Response is a valid JSON object\", function () {",
													"    pm.response.to.have.jsonBody();",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "0c81ad31-7f81-4f7f-9b94-bab545ba46eb"
											}
										}
									],
									"id": "34e95068-02a5-4e30-9081-b0f5a6c42690",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transactionDate\": \"{{todaysDate}}\",\n  \"transactionAmount\": {{cardAmount}},\n  \"holdExternalReferenceId\": {{cardAuthHoldId}},\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\"  \n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/current-accounts/{{accountKeyId}}/transactions?command=deposit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"current-accounts",
												"{{accountKeyId}}",
												"transactions"
											],
											"query": [
												{
													"key": "command",
													"value": "deposit"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "10d65e18-5f22-4c6b-9533-9eecc80a4bd1"
						},
						{
							"name": "Get an Authorization Hold",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response has some specific properties\", ()=> {",
											"    var config = pm.response.json()",
											"    pm.expect(config).to.have.property('amount');",
											"    pm.expect(config).to.have.property('advice');",
											"    pm.expect(config).to.have.property('accountType');",
											"    pm.expect(config).to.have.property('id');",
											"    pm.expect(config).to.have.property('userTransactionTime');",
											"    pm.expect(config).to.have.property('reversalDate');",
											"    pm.expect(config).to.have.property('cardAcceptor');",
											"    pm.expect(config).to.have.property('source');",
											"    pm.expect(config).to.have.property('creationDate');",
											"    pm.expect(config).to.have.property('creditDebitIndicator');",
											"    pm.expect(config).to.have.property('accountKey');",
											"    pm.expect(config).to.have.property('externalReferenceId');",
											"    pm.expect(config).to.have.property('originalAmount');",
											"    pm.expect(config).to.have.property('createdBy');",
											"    pm.expect(config).to.have.property('status');",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "e501288b-c209-48a0-a72e-4c0a8ffa796d"
									}
								}
							],
							"id": "bb017880-ef9d-4601-bc86-02f0798282b0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{cardAuthHoldId}}"
										}
									]
								},
								"description": "Retrieval of a Authorization Hold by Id"
							},
							"response": [
								{
									"id": "4540f0c4-afdf-4159-908f-37ccfa3670a7",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization-holds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization-holds",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "6608969",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "6e5e9211-db19-491e-ab71-ddeb8f60f7f8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"accountKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"accountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"advice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardAcceptor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardToken\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creationDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creditDebitIndicator\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currencyCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchangeRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalAmount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalCurrency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reversalDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"source\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userTransactionTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"accountKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"accountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"advice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardAcceptor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardToken\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creationDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creditDebitIndicator\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currencyCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchangeRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalAmount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalCurrency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reversalDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"source\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userTransactionTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
								}
							]
						},
						{
							"name": "Delete an Authorization Hold",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											"",
											"pm.test(\"Response has a resourceId property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('resourceId');",
											"});",
											"",
											"pm.test(\"Authorization Hold is deleted successfully\", function () {",
											"    pm.expect(pm.response.json().changes.successMessage).contains('Deleted Successfully');",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "c8af8ea4-77fe-48f4-80a8-36ba4f07e3de"
									}
								}
							],
							"id": "24fcd8b6-a5a2-447e-bcbc-9ef9cb07a3f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/:holdExternalId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										":holdExternalId"
									],
									"variable": [
										{
											"key": "holdExternalId",
											"value": "{{cardAuthHoldId}}",
											"description": "(Required) Authorization Hold Id"
										}
									]
								},
								"description": "Performing soft-deletion of an Authorization Hold Record."
							},
							"response": [
								{
									"id": "fe440885-9483-4404-8c19-dca04c73ba87",
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization-holds/:holdExternalId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization-holds",
												":holdExternalId"
											],
											"variable": [
												{
													"key": "holdExternalId",
													"value": "6608969",
													"description": "(Required) Authorization Hold Id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "c98c1176-beab-4538-8243-7c9448b9fc45"
										}
									],
									"cookie": [],
									"body": "\"anim reprehenderit ut\""
								}
							]
						},
						{
							"name": "Get All Deposit Account Cards",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is an array of objects with specific properties\", function () {",
											"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;",
											"    pm.response.json().forEach(function(config) {",
											"        pm.expect(config).to.have.property('savingsAccountNo');",
											"        pm.expect(config).to.have.property('cardReferenceToken');",
											"        pm.expect(config).to.have.property('createdDate');",
											"        pm.expect(config).to.have.property('id');",
											"        pm.expect(config).to.have.property('createdByUsername');",
											"        pm.expect(config).to.have.property('deleted');",
											"        pm.expect(config).to.have.property('externalId');",
											"        pm.expect(config).to.have.property('savingsAccountId');",
											"        pm.expect(config).to.have.property('createdById');  ",
											"    });",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "ed5fe0fe-b751-4d69-aa75-27f66dca094e"
									}
								}
							],
							"id": "14347025-c7e1-49ec-8ec6-1e2d38b98be4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savings-accounts/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savings-accounts",
										"cards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Deposit Account Cards By AccountId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is an array of objects with specific properties\", function () {",
											"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;",
											"    pm.response.json().forEach(function(config) {",
											"        pm.expect(config).to.have.property('savingsAccountNo');",
											"        pm.expect(config).to.have.property('cardReferenceToken');",
											"        pm.expect(config).to.have.property('createdDate');",
											"        pm.expect(config).to.have.property('id');",
											"        pm.expect(config).to.have.property('createdByUsername');",
											"        pm.expect(config).to.have.property('deleted');",
											"        pm.expect(config).to.have.property('externalId');",
											"        pm.expect(config).to.have.property('savingsAccountId');",
											"        pm.expect(config).to.have.property('createdById');  ",
											"    });",
											"});",
											"",
											"let response = pm.response.json();",
											"let cardIds = []",
											"response.forEach(item => {",
											"    cardIds.push(item.id)",
											"})",
											"",
											"let lengthOfArray = cardIds.length",
											"",
											"pm.collectionVariables.set(\"cardInfoToDelete\", cardIds[lengthOfArray-1])",
											"",
											"console.log(cardIds[lengthOfArray-1])",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "24ff8341-272f-4c18-a080-99f169f6bc25"
									}
								}
							],
							"id": "aaabfc74-1ca2-441a-a5f6-ea14c5f7026d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savings-accounts/cards/:savingsAccountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savings-accounts",
										"cards",
										":savingsAccountId"
									],
									"variable": [
										{
											"key": "savingsAccountId",
											"value": "7714052180104296"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Deposit Account Card Info",
							"id": "4929bd85-3e62-4c4b-9511-9ccef54e3ad7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savings-accounts/cards/{{cardInfoToDelete}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savings-accounts",
										"cards",
										"{{cardInfoToDelete}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Single Card Authorization Hold Details by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response has some specific properties\", ()=> {",
											"    var config = pm.response.json()",
											"    pm.expect(config).to.have.property('amount');",
											"    pm.expect(config).to.have.property('advice');",
											"    pm.expect(config).to.have.property('accountType');",
											"    pm.expect(config).to.have.property('id');",
											"    pm.expect(config).to.have.property('userTransactionTime');",
											"    pm.expect(config).to.have.property('reversalDate');",
											"    pm.expect(config).to.have.property('cardAcceptor');",
											"    pm.expect(config).to.have.property('source');",
											"    pm.expect(config).to.have.property('creationDate');",
											"    pm.expect(config).to.have.property('creditDebitIndicator');",
											"    pm.expect(config).to.have.property('accountKey');",
											"    pm.expect(config).to.have.property('externalReferenceId');",
											"    pm.expect(config).to.have.property('originalAmount');",
											"    pm.expect(config).to.have.property('createdBy');",
											"    pm.expect(config).to.have.property('status');",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "7908a9e9-1ec8-40c9-b8ea-8a8f208b35e2"
									}
								}
							],
							"id": "2e39a3ff-ce25-4249-a271-edbbde16b27f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/3714269571844588",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"3714269571844588"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reverse a Card Authorization Hold Request",
							"id": "f40f749e-65ac-4a5e-ae33-ca292535f035",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cardToken\": {{newCardToken}},\n  \"externalReferenceId\": \"{{cardExternalReferenceId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/cards/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"cards",
										"reverse"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Single Card Authorization Hold Request by Card Token and External Reference Id",
							"id": "b6e86a83-f385-4b31-8a0d-23958d597c15",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/cards/:cardToken/:referenceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"cards",
										":cardToken",
										":referenceId"
									],
									"variable": [
										{
											"key": "cardToken",
											"value": "{{newCardToken}}"
										},
										{
											"key": "referenceId",
											"value": "{{cardExternalReferenceId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Increase Amount for Card Authorization Hold Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('resourceId');",
											"});",
											"",
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json().changes).to.have.property('amount');",
											"});",
											"",
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json().changes).to.have.property('successMessage');",
											"});",
											"",
											"pm.test(\"Response message returns successful\", function () {",
											"    pm.expect(pm.response.json().changes.successMessage).contains('Amount Increased Successfully');",
											"});",
											"",
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json().changes).to.have.property('status');",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "c6c451f2-628b-4f61-a40f-b6a3256b3a8c"
									}
								}
							],
							"id": "cd2354de-babe-40f6-a21f-57e193c21765",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cardToken\": \"{{newCardToken}}\",\n  \"externalReferenceId\": \"{{cardExternalReferenceId}}\",\n  \"amount\": 1000,\n  \"currencyCode\": \"NGN\",\n  \"encodedKey\": null,\n  \"locale\": \"en\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/cards/increase-amount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"cards",
										"increase-amount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Decrease Amount for Card Authorization Hold Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('resourceId');",
											"});",
											"",
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json().changes).to.have.property('amount');",
											"});",
											"",
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json().changes).to.have.property('successMessage');",
											"});",
											"",
											"pm.test(\"Response message returns successful\", function () {",
											"    pm.expect(pm.response.json().changes.successMessage).contains('Amount Decreased Successfully');",
											"});",
											"",
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json().changes).to.have.property('status');",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "bc066ad7-9cfb-440d-9fed-b33620e35a6c"
									}
								}
							],
							"id": "4512ff37-cab4-4973-8029-d7d04a4d24ca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cardToken\": \"{{newCardToken}}\",\n  \"externalReferenceId\": \"{{cardExternalReferenceId}}\",\n  \"amount\": 2000,\n  \"currencyCode\": \"NGN\",\n  \"encodedKey\": null,\n  \"locale\": \"en\"  \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization-holds/cards/decrease-amount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization-holds",
										"cards",
										"decrease-amount"
									]
								}
							},
							"response": []
						}
					],
					"id": "3791606e-7493-4359-83e6-e917b9d23d66"
				}
			],
			"id": "89456e02-5702-4c29-ae98-4b64b238deff"
		},
		{
			"name": "card-transactions",
			"item": [
				{
					"name": "cards",
					"item": [
						{
							"name": "Create a new Card Transaction",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (1000 - 1 + 1)) + 1;",
											"pm.collectionVariables.set(\"externalReferenceId\", \"Auth-00\"+num);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "1d1abd95-0685-4cf5-9533-834fd141a31d"
									}
								}
							],
							"id": "c7440f60-2a94-4d84-a9c3-f31661d1579f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"advice\": true,\n  \"amount\": 80063433.13699368,\n\n  \"cardToken\": \"{{newCardToken}}\",\n  \"creditDebitIndicator\": \"CREDIT\",\n  \"currencyCode\": \"NGN\",\n  \"externalAuthorizationReferenceId\": \"{{cardExternalReferenceId}}\",\n  \"externalReferenceId\": \"{{externalReferenceId}}\",\n  \"firstRepaymentDate\": \"2024-07-13T19:16:06.906Z\",\n  \"increaseAmountIfNeeded\": false,\n  \"transactionChannelId\": \"121090\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/card-transactions/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"card-transactions",
										"cards"
									]
								},
								"description": "Mandatory Fields: cardToken, cardAcceptor, advice, amount, creditDebitIndicator, currencyCode"
							},
							"response": [
								{
									"id": "75328a19-6616-41e9-88e2-3bdb28b36389",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"advice\": true,\n  \"amount\": 80063433.13699368,\n  \"cardAcceptor\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cardToken\": \"ea laboris labore exercitation\",\n  \"creditDebitIndicator\": \"CRDT\",\n  \"currencyCode\": \"Excepteur consectetur\",\n  \"externalAuthorizationReferenceId\": \"sit pariatur\",\n  \"externalReferenceId\": \"cillum dolor tempor officia\",\n  \"firstRepaymentDate\": \"1954-12-02T19:16:06.906Z\",\n  \"increaseAmountIfNeeded\": false,\n  \"transactionChannelId\": \"cupidatat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/card-transactions/cards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"card-transactions",
												"cards"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "a9354f82-8a5b-40d6-9602-09503bad3d47"
										}
									],
									"cookie": [],
									"body": "\"anim reprehenderit ut\""
								}
							]
						},
						{
							"name": "Get a Card Transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response has some specific properties\", ()=> {",
											"    var config = pm.response.json()",
											"    pm.expect(config).to.have.property('amount');",
											"    pm.expect(config).to.have.property('advice');",
											"    pm.expect(config).to.have.property('increaseAmountIfNeeded');",
											"    pm.expect(config).to.have.property('id');",
											"    pm.expect(config).to.have.property('transactionChannelId');",
											"    pm.expect(config).to.have.property('externalReferenceId');",
											"    pm.expect(config).to.have.property('cardAcceptor');",
											"    pm.expect(config).to.have.property('creationDate');",
											"    pm.expect(config).to.have.property('creditDebitIndicator');",
											"    pm.expect(config).to.have.property('firstRepaymentDate');",
											"    pm.expect(config).to.have.property('externalAuthorizationReferenceId');",
											"    pm.expect(config).to.have.property('linkedTransaction');",
											"    pm.expect(config).to.have.property('createdBy');",
											"    pm.expect(config).to.have.property('currencyCode');",
											"})",
											"",
											"pm.test(\"Get Card Transaction id\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.exist",
											"    pm.globals.set(\"cardTransactionId\", jsonData.id)",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "90b5e77d-dbaa-41f1-b2cc-f1e447b5dd0e"
									}
								}
							],
							"id": "a8f084c5-e155-412f-a294-4ed000cec8c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/card-transactions/cards/:cardToken/:externalReferenceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"card-transactions",
										"cards",
										":cardToken",
										":externalReferenceId"
									],
									"variable": [
										{
											"key": "cardToken",
											"value": "{{newCardToken}}",
											"description": "(Required) Card token"
										},
										{
											"key": "externalReferenceId",
											"value": "{{externalReferenceId}}",
											"description": "(Required) External Reference Id"
										}
									]
								},
								"description": "Retrieval of a Card Transaction by Card Token And External Reference Id"
							},
							"response": [
								{
									"id": "816d4d40-ed68-46ca-abf3-087cb9143779",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/card-transactions/cards/:cardToken/:externalReferenceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"card-transactions",
												"cards",
												":cardToken",
												":externalReferenceId"
											],
											"variable": [
												{
													"key": "cardToken",
													"value": "anim reprehenderit ut",
													"description": "(Required) Card token"
												},
												{
													"key": "externalReferenceId",
													"value": "anim reprehenderit ut",
													"description": "(Required) External Reference Id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "0932933c-73b5-4470-8a0b-c854d1db1c8b"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"advice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardAcceptor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardToken\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creationDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creditDebitIndicator\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currencyCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalAuthorizationReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstRepaymentDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"increaseAmountIfNeeded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"linkedTransaction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionChannelId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userTransactionTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"advice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardAcceptor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardToken\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creationDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creditDebitIndicator\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currencyCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalAuthorizationReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstRepaymentDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"increaseAmountIfNeeded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"linkedTransaction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionChannelId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userTransactionTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
								}
							]
						}
					],
					"id": "d8951491-0f6d-41ec-afa4-4bca3be6af4e"
				},
				{
					"name": "Get a Card Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has some specific properties\", ()=> {",
									"    var config = pm.response.json()",
									"    pm.expect(config).to.have.property('amount');",
									"    pm.expect(config).to.have.property('advice');",
									"    pm.expect(config).to.have.property('increaseAmountIfNeeded');",
									"    pm.expect(config).to.have.property('id');",
									"    pm.expect(config).to.have.property('transactionChannelId');",
									"    pm.expect(config).to.have.property('externalReferenceId');",
									"    pm.expect(config).to.have.property('cardAcceptor');",
									"    pm.expect(config).to.have.property('creationDate');",
									"    pm.expect(config).to.have.property('creditDebitIndicator');",
									"    pm.expect(config).to.have.property('firstRepaymentDate');",
									"    pm.expect(config).to.have.property('externalAuthorizationReferenceId');",
									"    pm.expect(config).to.have.property('linkedTransaction');",
									"    pm.expect(config).to.have.property('createdBy');",
									"    pm.expect(config).to.have.property('currencyCode');",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "03d39834-23fc-4480-9737-7c54c2041826"
							}
						}
					],
					"id": "ecc8e2c1-a072-459f-86d5-b73f09f549d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/card-transactions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"card-transactions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{cardTransactionId}}",
									"description": "(Required) id"
								}
							]
						},
						"description": "Retrieval of a Card Transaction by Id"
					},
					"response": [
						{
							"id": "05323255-577d-4570-821a-d6851cd63d5e",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/card-transactions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"card-transactions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6608969",
											"description": "(Required) id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "58ff6214-bc0b-46f7-bc47-a7efbd257e43"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"advice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardAcceptor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardToken\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creationDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creditDebitIndicator\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currencyCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalAuthorizationReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstRepaymentDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"increaseAmountIfNeeded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"linkedTransaction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionChannelId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userTransactionTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"advice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardAcceptor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cardToken\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdBy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creationDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"creditDebitIndicator\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currencyCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalAuthorizationReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"externalReferenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstRepaymentDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"increaseAmountIfNeeded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"linkedTransaction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionChannelId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userTransactionTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				}
			],
			"id": "1013fb0b-0b1f-4edf-8470-4650c79f4157"
		},
		{
			"name": "centres",
			"item": [
				{
					"name": "{centreId}",
					"item": [
						{
							"name": "Retrieve a Centre",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response has a specific property\", function () {",
											"    var config = pm.response.json()",
											"    pm.expect(config).to.have.property('notes');",
											"    pm.expect(config).to.have.property('customFields');",
											"    pm.expect(config).to.have.property('officeData');",
											"    pm.expect(config).to.have.property('name');",
											"    pm.expect(config).to.have.property('meetingDay');",
											"    pm.expect(config).to.have.property('active');",
											"    pm.expect(config).to.have.property('id');",
											"    pm.expect(config).to.have.property('addressData');",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "1934eaf6-8e76-4eaa-bf8d-0421ea853ba7"
									}
								}
							],
							"id": "8a272880-da00-470a-a117-19a6fabfd77f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/centres/:centreId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"centres",
										":centreId"
									],
									"variable": [
										{
											"key": "centreId",
											"value": "{{centerId}}",
											"description": "(Required) centreId"
										}
									]
								},
								"description": "Example Requests: centres/1"
							},
							"response": [
								{
									"id": "4c13fea5-9cf0-4db8-a9de-7d04bb430878",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/centres/:centreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"centres",
												":centreId"
											],
											"variable": [
												{
													"key": "centreId",
													"value": "6608969",
													"description": "(Required) centreId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "d6f6791c-fdd7-4a2b-a98d-f4cc1452146e"
										}
									],
									"cookie": [],
									"body": "{\n  \"addressId\": 12,\n  \"assignedBranchId\": 25,\n  \"id\": 1,\n  \"isActive\": true,\n  \"meetingDay\": \"FRIDAY\",\n  \"name\": \"Meeting\",\n  \"notes\": \"Centre\"\n}"
								}
							]
						},
						{
							"name": "Update a Centre",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (500 - 1 + 1)) + 1;",
											"pm.collectionVariables.set(\"updatedCenterName\", \"LagosUpdatedCenter\"+num);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "39e3b1fc-be8d-4e66-90c7-bb90b297d9d6"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('resourceId');",
											"    pm.expect(pm.response.json()).to.have.property('changes');",
											"    pm.expect(pm.response.json().changes).to.have.property('name');",
											"    ",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "c54a61c2-5562-48e3-b573-a9202c6b6d09"
									}
								}
							],
							"id": "3deee25c-f015-451b-97e9-b4b619e2324a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{updatedCenterName}}\",\n  \"notes\": \"Centre for Meeting Customers\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/centres/:centreId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"centres",
										":centreId"
									],
									"variable": [
										{
											"key": "centreId",
											"value": "{{centerId}}",
											"description": "(Required) centreId"
										}
									]
								},
								"description": "Updating an existing centre."
							},
							"response": [
								{
									"id": "abcc79d3-6327-48e6-8e12-f06a1590c905",
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Meeting Centre\",\n  \"notes\": \"Centre for Meeting Customers\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/centres/:centreId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"centres",
												":centreId"
											],
											"variable": [
												{
													"key": "centreId",
													"value": "6608969",
													"description": "(Required) centreId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "f4ad75c8-9a8b-4127-b843-4c254d5bab32"
										}
									],
									"cookie": [],
									"body": "{\n  \"changes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resourceId\": 1\n}"
								}
							]
						}
					],
					"id": "01f5bf65-3cf5-4c0e-a3b7-5496301ad4b2"
				},
				{
					"name": "List all Centres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;",
									"    pm.response.json().forEach(function(config) {",
									"        pm.expect(config).to.have.property('notes');",
									"        pm.expect(config).to.have.property('customFields');",
									"        pm.expect(config).to.have.property('officeData');",
									"        pm.expect(config).to.have.property('name');",
									"        pm.expect(config).to.have.property('meetingDay');",
									"        pm.expect(config).to.have.property('active');",
									"        pm.expect(config).to.have.property('id');",
									"        pm.expect(config).to.have.property('addressData');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "526dd4bc-f8cf-492a-ac6e-6b9239baebd0"
							}
						}
					],
					"id": "20996dcd-1079-4886-b837-4a32f46d463f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/centres",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"centres"
							]
						},
						"description": "Example Requests: centres"
					},
					"response": [
						{
							"id": "c925d143-88cb-4f68-ac0c-5b36f4a73d41",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/centres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"centres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "5c71c055-1eb1-4919-994c-2d6629fa45ce"
								}
							],
							"cookie": [],
							"body": "{\n  \"addressId\": 12,\n  \"assignedBranchId\": 25,\n  \"id\": 1,\n  \"isActive\": true,\n  \"meetingDay\": \"FRIDAY\",\n  \"name\": \"Meeting\",\n  \"notes\": \"Centre\"\n}"
						}
					]
				},
				{
					"name": "Create a Centre",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Get center id\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.resourceId).to.exist",
									"    pm.collectionVariables.set(\"centerId\", jsonData.resourceId)",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "362cd075-93bc-42e5-a1e0-b5e46757e980"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (500 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"centerName\", \"Abuja Center\"+num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6f71120e-54ce-4847-881e-54c77ee3de3f"
							}
						}
					],
					"id": "bac69e4c-ac3f-4475-b2cb-dd4da0d7d664",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n//   \"addressId\": 12,\n  \"assignedBranchId\": 1,\n  \"isActive\": true,\n  \"meetingDay\": \"MONDAY\",\n  \"name\": \"{{centerName}}\",\n  \"notes\": \"This is a meeting centre\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/centres",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"centres"
							]
						},
						"description": "Mandatory Fields: name, isActive"
					},
					"response": [
						{
							"id": "46575e31-0237-477a-89c5-8af8320c857b",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressId\": 12,\n  \"assignedBranchId\": 25,\n  \"isActive\": true,\n  \"meetingDay\": \"MONDAY\",\n  \"name\": \"Meeting Centre\",\n  \"notes\": \"This is a meeting centre\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/centres",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"centres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "8e860da0-a3f3-4e85-b154-a6b53107adc4"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				}
			],
			"id": "371f9539-b4c5-439f-b79f-8f8664c182d6"
		},
		{
			"name": "charges",
			"item": [
				{
					"name": "Create a savings charge",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (1500 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"savingsChargeCode\", \"SA_\"+num);",
									"pm.collectionVariables.set(\"savingsChargeName\", \"Savings_activation_payment_automated\"+num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bb6f3dcc-6f8e-4b6d-8028-ee7d6e2b0157"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Get savings charge id\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.resourceId).to.exist",
									"    pm.collectionVariables.set(\"savingsChargeId\", jsonData.resourceId)",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "9f73a034-7acb-4b29-bc63-b6cdb650e84d"
							}
						}
					],
					"id": "e67f5c7b-c64d-459d-b437-4c87a4f1526f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"{{savingsChargeName}}\",\n    \"chargeAppliesTo\":\"SAVINGS\",\n    \"currencyCode\":\"NGN\",\n    \"locale\":\"en\",\n    \"amount\":2000.00,\n    \"active\":true,\n    \"penalty\":true,\n    \"chargeTimeType\":\"SAVINGS_ACTIVATION\",\n    \"chargeCalculationType\":\"FLAT\",\n    \"chargePaymentMode\":\"ACCOUNT_TRANSFER\",\n    \"minCap\":\"1000\",\n    \"maxCap\":\"2000\",\n    \"minimumTransactionAmount\":100,\n    \"maximumTransactionAmount\":3000,\n    \"chargeCode\":\"{{savingsChargeCode}}\",\n    \"reportingTag\":\"Endurance\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/charges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges"
							]
						},
						"description": "Define a new charge that can later be associated with loans and savings through their respective product definitions or directly on each account instance."
					},
					"response": [
						{
							"id": "4540d724-21ff-4d04-958b-31daf28dd37a",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active\": \"true\",\n  \"amount\": 230.56,\n  \"chargeAppliesTo\": 1,\n  \"chargeCalculationType\": 1,\n  \"chargePaymentMode\": 1,\n  \"chargeTimeType\": 1,\n  \"currencyCode\": \"USD\",\n  \"locale\": \"en\",\n  \"maxCap\": 230.56,\n  \"maximumTransactionAmount\": 230.56,\n  \"minCap\": 230.56,\n  \"minimumTransactionAmount\": 230.56,\n  \"monthDayFormat\": \"dd MMMM\",\n  \"name\": \"Loan Service fee\",\n  \"penalty\": \"false\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/charges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "9c2ecc2f-3ab9-4c91-946a-b3e599ae984c"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				},
				{
					"name": "Create a loan charge",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (1500 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"loanChargeCode\", \"LC_\"+num);",
									"pm.collectionVariables.set(\"loanChargeName\", \"Loan_activation_payment_automated\"+num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "32fdad71-9c0a-469c-89f3-bd4ae54c931b"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Get loan charge id\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.resourceId).to.exist",
									"    pm.collectionVariables.set(\"loanChargeId\", jsonData.resourceId)",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0ba9ed07-7ac9-4b06-bf4a-06121104cb88"
							}
						}
					],
					"id": "25c97ad0-e245-4805-be90-147c9d311b49",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"{{loanChargeName}}\",\n    \"chargeAppliesTo\":\"LOAN\",\n    \"currencyCode\":\"NGN\",\n    \"locale\":\"en\",\n    \"amount\":2000.00,\n    \"active\":true,\n    \"penalty\":true,\n    \"chargeTimeType\":\"INSTALMENT_FEE\",\n    \"chargeCalculationType\":\"FLAT\",\n    \"chargePaymentMode\":\"ACCOUNT_TRANSFER\",\n    \"minCap\":\"1000\",\n    \"maxCap\":\"2000\",\n    \"minimumTransactionAmount\":100,\n    \"maximumTransactionAmount\":3000,\n    \"chargeCode\":\"{{loanChargeCode}}\",\n    \"reportingTag\":\"Endurance\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/charges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges"
							]
						},
						"description": "Define a new charge that can later be associated with loans and savings through their respective product definitions or directly on each account instance."
					},
					"response": [
						{
							"id": "e3bb3806-982d-462e-a985-8925b6da9966",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active\": \"true\",\n  \"amount\": 230.56,\n  \"chargeAppliesTo\": 1,\n  \"chargeCalculationType\": 1,\n  \"chargePaymentMode\": 1,\n  \"chargeTimeType\": 1,\n  \"currencyCode\": \"USD\",\n  \"locale\": \"en\",\n  \"maxCap\": 230.56,\n  \"maximumTransactionAmount\": 230.56,\n  \"minCap\": 230.56,\n  \"minimumTransactionAmount\": 230.56,\n  \"monthDayFormat\": \"dd MMMM\",\n  \"name\": \"Loan Service fee\",\n  \"penalty\": \"false\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/charges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "c70e630a-60f1-46f9-8213-23ae7f7c69fd"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				},
				{
					"name": "Create BNPL Charges",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Get loan charge id\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.resourceId).to.exist",
									"    pm.collectionVariables.set(\"bnplChargeId\", jsonData.resourceId)",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "dcdd061e-6650-471a-b39e-2e9719fe43a7"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (1500 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"bnplChargeCode\", \"BL_\"+num);",
									"pm.collectionVariables.set(\"bnplChargeName\", \"BNPL_charge_automated\"+num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f59df968-1201-4178-930f-eacd6b5724f7"
							}
						}
					],
					"id": "8b9924c6-5ff8-4963-a743-bdb4326c4178",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"{{bnplChargeName}}\",\n    \"chargeAppliesTo\":\"LOAN\",\n    \"currencyCode\":\"NGN\",\n    \"locale\":\"en\",\n    \"amount\": 20,\n    \"active\": true,\n    \"chargeTimeType\":\"BNPL_PROVIDER_COMMISSION\",\n    \"chargeCalculationType\":\"FLAT\",\n    \"chargePaymentMode\":\"ACCOUNT_TRANSFER\",\n    \"monthDayFormat\": \"dd MMM\",\n    \"chargeApplyDateMethod\": \"MONTHLY_FROM_ACTIVATION\",\n    \"feeInterval\": 1,\n    \"minCap\":5,\n    \"maxCap\":50,\n    \"minimumTransactionAmount\": \"5\",\n    \"maximumTransactionAmount\": \"50\",\n    \"reportingTag\":\"VICTOR\",\n    \"chargeCode\":\"{{bnplChargeCode}}\",\n    \"incomeAccountId\":\"4669335920181970\",\n    \"mandatory\":\"true\"\n    //\"branchGroupIds\":[7182259374202514, 2928919159036682]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/charges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a Charge",
					"id": "07cbb0f1-7220-4049-8e75-2a90a44310e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/charges/:chargeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges",
								":chargeId"
							],
							"variable": [
								{
									"key": "chargeId",
									"value": "{{loanChargeId}}",
									"description": "(Required) chargeId"
								}
							]
						},
						"description": "Returns the details of a defined Charge.\n\nExample Requests:\n\ncharges/1"
					},
					"response": [
						{
							"id": "d0495d8b-5abb-4727-aea2-29c1607b8e00",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charges/:chargeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charges",
										":chargeId"
									],
									"variable": [
										{
											"key": "chargeId",
											"value": "6608969",
											"description": "(Required) chargeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "2022c222-2eab-4d7f-8ac4-9cdefb4d0c59"
								}
							],
							"cookie": [],
							"body": "{\n  \"active\": \"true\",\n  \"amount\": 230.56,\n  \"chargeAppliesTo\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"chargeCalculationType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"chargePaymentMode\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"chargeTimeType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 1,\n  \"maxCap\": 230.56,\n  \"maximumTransactionAmount\": 230.56,\n  \"minCap\": 230.56,\n  \"minimumTransactionAmount\": 230.56,\n  \"name\": \"Loan Service fee\",\n  \"penalty\": \"false\"\n}"
						}
					]
				},
				{
					"name": "Retrieve Charges",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;",
									"    pm.response.json().forEach(function(config) {",
									"        pm.expect(config).to.have.property('chargeCalculationType');",
									"        pm.expect(config).to.have.property('chargeTimeType');",
									"        pm.expect(config).to.have.property('chargeAppliesTo');",
									"        pm.expect(config).to.have.property('id');",
									"        pm.expect(config).to.have.property('chargePaymentMode');",
									"        pm.expect(config).to.have.property('chargeCalculationType');",
									"        pm.expect(config).to.have.property('currency');",
									"        pm.expect(config).to.have.property('amount');",
									"        pm.expect(config).to.have.property('isPaymentType');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "41f23515-7c7e-4cc1-b536-0e57d3d0bc86"
							}
						}
					],
					"id": "3a8ef3e3-e8d1-471e-baf9-312a00eb04ab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/charges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges"
							]
						},
						"description": "Returns the list of defined charges.\n\nExample Requests:\n\ncharges"
					},
					"response": [
						{
							"id": "706ba284-050d-4966-9992-c27dab53ba91",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "ecdf67b6-6a3b-4de3-af1f-a1f8878809b0"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeAppliesTo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeCalculationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargePaymentMode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeTimeType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxCap\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maximumTransactionAmount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minCap\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minimumTransactionAmount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"penalty\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeAppliesTo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeCalculationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargePaymentMode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chargeTimeType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxCap\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maximumTransactionAmount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minCap\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minimumTransactionAmount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"penalty\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Retrieve Charge Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseJson = pm.response.json();",
									"",
									"pm.test(\"Validate loanChargeTimeTypeOptions\", function () {",
									"    let expectedOptions = [",
									"        { \"code\": \"chargeTimeType.disbursement\", \"id\": \"1\", \"value\": \"Disbursement\" },",
									"        { \"code\": \"chargeTimeType.specifiedDueDate\", \"id\": \"2\", \"value\": \"Specified due date\" },",
									"        { \"code\": \"chargeTimeType.instalmentFee\", \"id\": \"8\", \"value\": \"Installment Fee\" },",
									"        { \"code\": \"chargeTimeType.overdueInstallment\", \"id\": \"9\", \"value\": \"Overdue Fees\" },",
									"        { \"code\": \"chargeTimeType.tranchedisbursement\", \"id\": \"12\", \"value\": \"Tranche Disbursement\" },",
									"        { \"code\": \"chargeTimeType.plannedfee\", \"id\": \"20\", \"value\": \"Planned Fee\" },",
									"        { \"code\": \"chargeTimeType.capitalized.disbursement\", \"id\": \"23\", \"value\": \"Capitalized Fee\" }",
									"    ];",
									"    pm.expect(responseJson.loanChargeTimeTypeOptions).to.eql(expectedOptions);",
									"});",
									"",
									"pm.test(\"Validate chargeApplyDateMethodOptions\", function () {",
									"    let expectedOptions = [",
									"        { \"code\": \"charge.apply.date.method.monthly.from.activation\", \"id\": \"1\", \"value\": \"Monthly from Activation\" },",
									"        { \"code\": \"charge.apply.date.method.first.day.of.every.month\", \"id\": \"2\", \"value\": \"First Day of Every Month\" }",
									"    ];",
									"    pm.expect(responseJson.chargeApplyDateMethodOptions).to.eql(expectedOptions);",
									"});",
									"",
									"pm.test(\"Validate chargeCalculationTypeOptions\", function () {",
									"    let expectedOptions = [",
									"        { \"code\": \"chargeCalculationType.flat\", \"id\": \"1\", \"value\": \"Flat\" },",
									"        { \"code\": \"chargeCalculationType.percent.of.amount\", \"id\": \"2\", \"value\": \"% Amount\" },",
									"        { \"code\": \"chargeCalculationType.percent.of.amount.and.interest\", \"id\": \"3\", \"value\": \"% Loan Amount + Interest\" },",
									"        { \"code\": \"chargeCalculationType.percent.of.interest\", \"id\": \"4\", \"value\": \"% Interest\" },",
									"        { \"code\": \"chargeCalculationType.percent.of.disbursement.amount\", \"id\": \"5\", \"value\": \"% Disbursement Amount\" }",
									"    ];",
									"    pm.expect(responseJson.chargeCalculationTypeOptions).to.eql(expectedOptions);",
									"});",
									"",
									"pm.test(\"Validate chargePaymetModeOptions\", function () {",
									"    let expectedOptions = [",
									"        { \"code\": \"chargepaymentmode.regular\", \"id\": \"0\", \"value\": \"Regular\" },",
									"        { \"code\": \"chargepaymentmode.accounttransfer\", \"id\": \"1\", \"value\": \"Account transfer\" }",
									"    ];",
									"    pm.expect(responseJson.chargePaymetModeOptions).to.eql(expectedOptions);",
									"});",
									"",
									"pm.test(\"Validate shareChargeCalculationTypeOptions\", function () {",
									"    let expectedOptions = [",
									"        { \"code\": \"chargeCalculationType.flat\", \"id\": \"1\", \"value\": \"Flat\" },",
									"        { \"code\": \"chargeCalculationType.percent.of.amount\", \"id\": \"2\", \"value\": \"% Amount\" }",
									"    ];",
									"    pm.expect(responseJson.shareChargeCalculationTypeOptions).to.eql(expectedOptions);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "891f6093-d82e-49cb-a772-937e3ba1bcf3"
							}
						}
					],
					"id": "8ba18bd1-4cd6-462b-bfbd-97a5aeaddd05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/charges/template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges",
								"template"
							]
						},
						"description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed description Lists\nExample Request:\n\ncharges/template\n"
					},
					"response": [
						{
							"id": "efbd68c6-61e5-4a1b-b781-e0895fe05560",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charges/template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charges",
										"template"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "617e9e8f-26c5-4f23-b0b3-3d5028e993e3"
								}
							],
							"cookie": [],
							"body": "{\n  \"active\": \"false\",\n  \"chargeAppliesToOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"chargeCalculationTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"chargePaymentModeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"chargeTimeTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"currencyOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"feeFrequencyOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"loanChargeCalculationTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"loanChargeTimeTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"penalty\": \"false\",\n  \"savingsChargeCalculationTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"savingsChargeTimeTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve Branch Group for Charge",
					"id": "ac19a173-e84a-4943-98de-991c623e1827",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fineract-platform-tenantid",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"North-West\",\n  \"branches\":[\n      1,2\n      ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/branch-grouping/chargeId/:chargeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"branch-grouping",
								"chargeId",
								":chargeId"
							],
							"variable": [
								{
									"key": "chargeId",
									"value": "7307187452916"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve All Loan Applicable Fees",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is a JSON object\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    var config = pm.response.json()",
									"    pm.expect(config).to.have.property('chargeCalculationType');",
									"    pm.expect(config).to.have.property('id');",
									"    pm.expect(config).to.have.property('name');",
									"    pm.expect(config).to.have.property('chargeTimeType');",
									"    pm.expect(config).to.have.property('chargeAppliesTo');",
									"    pm.expect(config).to.have.property('chargePaymentMode');",
									"    pm.expect(config).to.have.property('currency');",
									"    pm.expect(config).to.have.property('amount');",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "ba4bb090-ccfb-4cd8-a36d-af7a117b619d"
							}
						}
					],
					"id": "353cddf6-1da1-45e4-ae79-9ab4c41dea75",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/charges/{{loanChargeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges",
								"{{loanChargeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate Charge",
					"id": "1fb460ab-7c22-4b90-ba85-bea2b749c2a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n    \"active\":true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/charges/{{loanChargeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges",
								"{{loanChargeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Charge",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var amount = Math.floor(Math.random() * (800 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"chargeAmount\", amount);",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8164ff01-d12d-4163-9f5b-624bd4d59c3d"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON",
									"let responseJson = pm.response.json();",
									"",
									"pm.test(\"Validate resourceId\", function () {",
									"    pm.expect(responseJson).to.have.property('resourceId');",
									"});",
									"",
									"pm.test(\"Validate changes object\", function () {",
									"    pm.expect(responseJson).to.have.property('changes');",
									"    pm.expect(responseJson.changes).to.be.an('object');",
									"    ",
									"    pm.test(\"Validate changes.amount\", function () {",
									"        pm.expect(responseJson.changes).to.have.property('amount');",
									"    });",
									"    ",
									"    pm.test(\"Validate changes.locale\", function () {",
									"        pm.expect(responseJson.changes).to.have.property('locale');",
									"        pm.expect(responseJson.changes.locale).to.equal('en_GB');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f4cdf053-2810-4a94-8ddb-f7685c187473"
							}
						}
					],
					"id": "751abae2-afed-41f4-abda-98ce4e0f87a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n   \"amount\":\"{{chargeAmount}}\",\n   \"locale\":\"en_GB\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/charges/{{loanChargeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges",
								"{{loanChargeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Charge to Loan Account",
					"id": "5f902233-f34c-4c34-bb08-1bffd6fade25",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"chargeId\": \"{{loanChargeId}}\",\n    \"amount\": 1000,\n    \"dueDate\": \"{{todaysDate}}\",\n    \"dateFormat\":\"dd MMM yyyy\",\n    \"locale\":\"en_GB\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/loans/12724046776257355/charges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"loans",
								"12724046776257355",
								"charges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Loan Charges  for a Loan",
					"id": "5b0a555c-aed4-4592-b9f7-7c62c116309f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{fineract_url}}/loans/575082627622102/charges",
							"host": [
								"{{fineract_url}}"
							],
							"path": [
								"loans",
								"575082627622102",
								"charges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Loan Charge",
					"id": "a9a6e495-166d-4904-97f5-f9664be4ed7e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/charges/:chargeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charges",
								":chargeId"
							],
							"variable": [
								{
									"key": "chargeId",
									"value": "{{loanChargeId}}",
									"description": "(Required) chargeId"
								}
							]
						},
						"description": "Deletes a Charge."
					},
					"response": [
						{
							"id": "3b3224a4-cac7-4340-9efc-cbcc0e36378a",
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charges/:chargeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charges",
										":chargeId"
									],
									"variable": [
										{
											"key": "chargeId",
											"value": "6608969",
											"description": "(Required) chargeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "f9dbaa80-9963-4f33-b161-ddf57a2e0725"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				}
			],
			"id": "2d3284a3-56f2-41f1-bf51-1efbb21a0a0f"
		},
		{
			"name": "client documents",
			"item": [
				{
					"name": "Update a client Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "221acd55-3af7-4083-ba6f-cd2b6be7d198"
							}
						}
					],
					"id": "891c8bda-5860-43b2-b285-7fe2cfac50c3",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Length",
								"value": "6608969",
								"description": "Content-Length"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "idType",
									"value": "5994557011520496",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/Users/odirieboh/Downloads/Bugs/image.png"
								},
								{
									"key": "issuingInstitution",
									"value": "Nigerian Immigration",
									"type": "text"
								},
								{
									"key": "idNumber",
									"value": "B00119289",
									"type": "text"
								},
								{
									"key": "dateFormat",
									"value": "dd MMM yyyy",
									"type": "text"
								},
								{
									"key": "expiryDate",
									"value": "31 April 2027",
									"type": "text"
								},
								{
									"key": "placeOfIssuance",
									"value": "Festac, Lagos",
									"type": "text"
								},
								{
									"key": "issuanceDate",
									"value": "22 April 2023",
									"type": "text"
								},
								{
									"key": "documentIdType",
									"value": "810842522889020",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://dev-cba.blusalt.net/fineract-provider/api/v1/clients/:clientId/update-client-id-document",
							"protocol": "https",
							"host": [
								"dev-cba",
								"blusalt",
								"net"
							],
							"path": [
								"fineract-provider",
								"api",
								"v1",
								"clients",
								":clientId",
								"update-client-id-document"
							],
							"variable": [
								{
									"key": "clientId",
									"value": "14690260376751992"
								}
							]
						},
						"description": "Note: A client document is created using a Multi-part form upload \n\nBody Parts\n\nname : \nName or summary of the document\n\ndescription : \nDescription of the document\n\nfile : \nThe file to be uploaded\n\nMandatory Fields : \nfile and description"
					},
					"response": [
						{
							"id": "b418a9db-3372-4a68-9a9d-a0353966861c",
							"name": "default response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Content-Length",
										"value": "6608969",
										"description": "Content-Length"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "est",
											"type": "text"
										},
										{
											"key": "file",
											"value": "{\"contentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"entity\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"formDataContentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"headers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"mediaType\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"messageBodyWorkers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"name\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parameterizedHeaders\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parent\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"providers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"simple\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"value\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}}",
											"type": "text"
										},
										{
											"key": "name",
											"value": "sit Ut",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/client-documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-documents"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6608969",
											"description": "(Required) clientId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "0c777078-5a62-481f-9c60-eb33c5240037"
								}
							],
							"cookie": [],
							"body": "\"anim reprehenderit ut\""
						}
					]
				},
				{
					"name": "Create a Document Category",
					"id": "be3d2a25-3d34-4538-8459-69e1bfd5e1ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"KYC Documents\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/document-category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"document-category"
							]
						},
						"description": "Note: A client document is created using a Multi-part form upload \n\nBody Parts\n\nname : \nName or summary of the document\n\ndescription : \nDescription of the document\n\nfile : \nThe file to be uploaded\n\nMandatory Fields : \nfile and description"
					},
					"response": [
						{
							"id": "f9329ec0-00f8-4a40-965c-598d0402dda0",
							"name": "default response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Content-Length",
										"value": "6608969",
										"description": "Content-Length"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "est",
											"type": "text"
										},
										{
											"key": "file",
											"value": "{\"contentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"entity\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"formDataContentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"headers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"mediaType\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"messageBodyWorkers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"name\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parameterizedHeaders\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parent\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"providers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"simple\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"value\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}}",
											"type": "text"
										},
										{
											"key": "name",
											"value": "sit Ut",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/client-documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-documents"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6608969",
											"description": "(Required) clientId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "51acd58d-a207-4ad1-a872-c9b852ce7b0c"
								}
							],
							"cookie": [],
							"body": "\"anim reprehenderit ut\""
						}
					]
				},
				{
					"name": "Create a Document Type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (400 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"docTypeName\", \"PVC\"+num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "82703386-b7bd-4b63-b847-532370cc8e3e"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Get docTypeId id\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.resourceId).to.exist",
									"    pm.globals.set(\"docTypeId\", jsonData.resourceId)",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f5f7a0f9-ef20-4828-ac69-2293e96a6abc"
							}
						}
					],
					"id": "7e4ba256-5373-4257-a155-6d9ff908cf5a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"{{docTypeName}}\",\n    \"position\":1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/document-category/document-type/:documentCategoryId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"document-category",
								"document-type",
								":documentCategoryId"
							],
							"variable": [
								{
									"key": "documentCategoryId",
									"value": "3617608741558909"
								}
							]
						},
						"description": "Note: A client document is created using a Multi-part form upload \n\nBody Parts\n\nname : \nName or summary of the document\n\ndescription : \nDescription of the document\n\nfile : \nThe file to be uploaded\n\nMandatory Fields : \nfile and description"
					},
					"response": [
						{
							"id": "be4a6764-d5db-4700-b329-6c6e75317c62",
							"name": "default response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Content-Length",
										"value": "6608969",
										"description": "Content-Length"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "est",
											"type": "text"
										},
										{
											"key": "file",
											"value": "{\"contentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"entity\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"formDataContentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"headers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"mediaType\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"messageBodyWorkers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"name\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parameterizedHeaders\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parent\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"providers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"simple\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"value\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}}",
											"type": "text"
										},
										{
											"key": "name",
											"value": "sit Ut",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/client-documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-documents"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6608969",
											"description": "(Required) clientId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "16102498-f128-4bf8-9952-9e89d2e34e88"
								}
							],
							"cookie": [],
							"body": "\"anim reprehenderit ut\""
						}
					]
				},
				{
					"name": "Get a Document Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Verify response properties exist\", function () {",
									"    pm.expect(responseJson).to.have.property('associatedTypes');",
									"    pm.expect(responseJson).to.have.property('category');",
									"",
									"    pm.expect(responseJson.associatedTypes).to.be.an('array');",
									"    responseJson.associatedTypes.forEach(function(associatedType) {",
									"        pm.expect(associatedType).to.have.property('name');",
									"        pm.expect(associatedType).to.have.property('active');",
									"        pm.expect(associatedType).to.have.property('id');",
									"        pm.expect(associatedType).to.have.property('position');",
									"        pm.expect(associatedType).to.have.property('mandatory');",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e46c0dbc-0656-44af-9ece-83d4e8358215"
							}
						}
					],
					"id": "ad8a9d87-38d6-4890-aa28-8565dc8cc91f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Voter's Card\",\n    \"position\":1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/document-category/:documentCategoryId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"document-category",
								":documentCategoryId"
							],
							"variable": [
								{
									"key": "documentCategoryId",
									"value": "{{docTypeId}}"
								}
							]
						},
						"description": "Note: A client document is created using a Multi-part form upload \n\nBody Parts\n\nname : \nName or summary of the document\n\ndescription : \nDescription of the document\n\nfile : \nThe file to be uploaded\n\nMandatory Fields : \nfile and description"
					},
					"response": [
						{
							"id": "4e6415c5-b85a-44b2-b65f-6cf3444a0483",
							"name": "default response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Content-Length",
										"value": "6608969",
										"description": "Content-Length"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "est",
											"type": "text"
										},
										{
											"key": "file",
											"value": "{\"contentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"entity\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"formDataContentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"headers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"mediaType\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"messageBodyWorkers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"name\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parameterizedHeaders\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parent\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"providers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"simple\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"value\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}}",
											"type": "text"
										},
										{
											"key": "name",
											"value": "sit Ut",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/client-documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-documents"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6608969",
											"description": "(Required) clientId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "94aa0633-5710-4edc-9a7f-608d8a861469"
								}
							],
							"cookie": [],
							"body": "\"anim reprehenderit ut\""
						}
					]
				},
				{
					"name": "Get a Document Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Verify response properties exist\", function () {",
									"    pm.expect(responseJson).to.be.an('array').that.is.not.empty;",
									"",
									"    responseJson.forEach(function(category) {",
									"        pm.expect(category).to.have.property('name').that.is.a('string');",
									"        pm.expect(category).to.have.property('id').that.is.a('string');",
									"        pm.expect(category).to.have.property('systemDefined').that.is.a('boolean');",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bc0ad176-ad55-49fa-a4e5-c94a3046aa15"
							}
						}
					],
					"id": "0a373afa-e3c9-4e82-a297-37db689f7eb1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"KYC Documents\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/document-category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"document-category"
							]
						},
						"description": "Note: A client document is created using a Multi-part form upload \n\nBody Parts\n\nname : \nName or summary of the document\n\ndescription : \nDescription of the document\n\nfile : \nThe file to be uploaded\n\nMandatory Fields : \nfile and description"
					},
					"response": [
						{
							"id": "515f902a-78ef-4872-8f09-914268191bcc",
							"name": "default response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Content-Length",
										"value": "6608969",
										"description": "Content-Length"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "est",
											"type": "text"
										},
										{
											"key": "file",
											"value": "{\"contentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"entity\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"formDataContentDisposition\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"headers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"mediaType\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"messageBodyWorkers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"name\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parameterizedHeaders\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"parent\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"providers\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"simple\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},\"value\":{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}}",
											"type": "text"
										},
										{
											"key": "name",
											"value": "sit Ut",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/client-documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-documents"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6608969",
											"description": "(Required) clientId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "020b3983-dbc2-4334-be7d-97b859b05017"
								}
							],
							"cookie": [],
							"body": "\"anim reprehenderit ut\""
						}
					]
				},
				{
					"name": "Retrieve all Client Documents",
					"id": "749c52fa-8d7f-4008-a6d3-8e375d826680",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/client-documents/by-document-id/:documentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"client-documents",
								"by-document-id",
								":documentId"
							],
							"variable": [
								{
									"key": "documentId",
									"value": "14690260376751992",
									"description": "(Required) documentId"
								}
							]
						},
						"description": "Example Requests:\n\nclient-documnets/1\n\n\nclients/1?template=true\n\n\nclients/1"
					},
					"response": [
						{
							"id": "ea538e2d-1cde-470f-9769-00f8eef681b8",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/client-documents/by-document-id/:documentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-documents",
										"by-document-id",
										":documentId"
									],
									"variable": [
										{
											"key": "documentId",
											"value": "6608969",
											"description": "(Required) documentId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "87b106b6-21b5-4b25-8c59-513caf34054a"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountNo\": \"000000027\",\n  \"activationDate\": \"2021-07-16\",\n  \"active\": true,\n  \"displayName\": \"savings test\",\n  \"emailAddress\": \"1\",\n  \"firstname\": \"savings\",\n  \"id\": 27,\n  \"lastname\": \"test\",\n  \"officeId\": 1,\n  \"officeName\": \"Head Office\",\n  \"personalTitleId\": 1,\n  \"savingsProductId\": 4,\n  \"savingsProductName\": \"account overdraft\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeline\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Retrieve a Client Documents",
					"id": "707f2eba-055d-47a2-af52-9b38d8268bfd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/client-documents/:clientId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"client-documents",
								":clientId"
							],
							"variable": [
								{
									"key": "clientId",
									"value": "25862431621186",
									"description": "(Required) clientId"
								}
							]
						},
						"description": "Example Requests:\n\nclients/1\n\n\nclients/1?template=true\n\n\nclients/1?fields=id,displayName,officeName"
					},
					"response": [
						{
							"id": "3ed498ce-0d97-45f4-b885-22a87220a66c",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/client-documents/:clientId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-documents",
										":clientId"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6608969",
											"description": "(Required) clientId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "5fc7bdb0-c94c-4639-b238-3207d4820946"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountNo\": \"000000027\",\n  \"activationDate\": \"2008-08-10\",\n  \"active\": true,\n  \"displayName\": \"savings test\",\n  \"emailAddress\": \"1\",\n  \"firstname\": \"savings\",\n  \"id\": 27,\n  \"lastname\": \"test\",\n  \"officeId\": 1,\n  \"officeName\": \"Head Office\",\n  \"personalTitleId\": 1,\n  \"savingsProductId\": 4,\n  \"savingsProductName\": \"account overdraft\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeline\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						}
					]
				}
			],
			"id": "48f430a9-ce0b-4ded-9108-a5a6011ad5a3"
		},
		{
			"name": "client-roles",
			"item": [
				{
					"name": "Retrieve all client roles by type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "b784b398-a071-472e-b974-dccec94a6b53"
							}
						}
					],
					"id": "3bfc0ca5-5a3b-4502-9f8d-c1bb56691a7e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/client-roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"client-roles"
							],
							"variable": [
								{
									"key": "type",
									"value": "DEFAULT_CLIENT,GROUP",
									"description": "(Required) type"
								}
							]
						},
						"description": "Example Requests:\n\nclient-roles/[GROUP]\n\n\nclients/[Group]?template=true\n\n\nclients/1?fields=id,displayName,officeName"
					},
					"response": [
						{
							"id": "73a33790-d252-4f9c-954c-fbce9877a868",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/client-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-roles"
									],
									"variable": [
										{
											"key": "type",
											"value": "DEFAULT_CLIENT,GROUP",
											"description": "(Required) type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "0918f915-0e6b-40ff-8c46-e6d3641760c4"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountNo\": \"000000027\",\n  \"activationDate\": \"2008-08-10\",\n  \"active\": true,\n  \"displayName\": \"savings test\",\n  \"emailAddress\": \"1\",\n  \"firstname\": \"savings\",\n  \"id\": 27,\n  \"lastname\": \"test\",\n  \"officeId\": 1,\n  \"officeName\": \"Head Office\",\n  \"personalTitleId\": 1,\n  \"savingsProductId\": 4,\n  \"savingsProductName\": \"account overdraft\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeline\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Client Role Configuration",
					"id": "8d355bf3-10b3-46da-b3e6-7a84c6b26c97",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/client-roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"client-roles"
							]
						}
					},
					"response": [
						{
							"id": "3824cdd1-228b-4c13-a88d-ff930e6c0dcd",
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/client-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "e96ee87b-0287-4ae6-bf19-65aab6783def"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountNo\": \"000000027\",\n  \"activationDate\": \"2008-08-10\",\n  \"active\": true,\n  \"displayName\": \"savings test\",\n  \"emailAddress\": \"1\",\n  \"firstname\": \"savings\",\n  \"id\": 27,\n  \"lastname\": \"test\",\n  \"officeId\": 1,\n  \"officeName\": \"Head Office\",\n  \"personalTitleId\": 1,\n  \"savingsProductId\": 4,\n  \"savingsProductName\": \"account overdraft\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeline\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						}
					]
				}
			],
			"id": "108d7865-0bdc-4332-ae9c-01cb1a37cd73"
		},
		{
			"name": "clients",
			"item": [
				{
					"name": "{clientId}",
					"item": [
						{
							"name": "familymembers",
							"item": [
								{
									"name": "{familyMemberId}",
									"item": [
										{
											"name": "delete Client Family Members",
											"id": "b5463194-7b76-40ec-9e04-17a18078ebb6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "anim reprehenderit ut",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/familymembers/:familyMemberId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"familymembers",
														":familyMemberId"
													],
													"variable": [
														{
															"key": "familyMemberId",
															"value": "6608969",
															"description": "(Required) "
														},
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"response": [
												{
													"id": "06310337-42cb-4878-8644-39649ff3144b",
													"name": "default response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "anim reprehenderit ut",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/clients/:clientId/familymembers/:familyMemberId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clients",
																":clientId",
																"familymembers",
																":familyMemberId"
															],
															"variable": [
																{
																	"key": "familyMemberId",
																	"value": "6608969",
																	"description": "(Required) "
																},
																{
																	"key": "clientId",
																	"value": "6608969",
																	"description": "(Required) clientId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "5d0781e9-e124-4a68-9dcf-0befa2de7667"
														}
													],
													"cookie": [],
													"body": "\"anim reprehenderit ut\""
												}
											]
										},
										{
											"name": "get Family Member",
											"id": "93eb68fc-fdca-4730-a84e-de3855f48941",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/familymembers/:familyMemberId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"familymembers",
														":familyMemberId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "25862431621186",
															"description": "(Required) clientId"
														},
														{
															"key": "familyMemberId",
															"value": "25862431621186",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "6206bcaa-5d1c-460e-8fb2-7c7c5a6428e2",
													"name": "default response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clients/:clientId/familymembers/:familyMemberId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clients",
																":clientId",
																"familymembers",
																":familyMemberId"
															],
															"variable": [
																{
																	"key": "familyMemberId",
																	"value": "6608969",
																	"description": "(Required) "
																},
																{
																	"key": "clientId",
																	"value": "6608969",
																	"description": "(Required) clientId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "c87b8e98-84c8-40fd-a092-0a54bc4d6fe1"
														}
													],
													"cookie": [],
													"body": "\"anim reprehenderit ut\""
												}
											]
										},
										{
											"name": "update Client Family Members",
											"id": "4f003dd4-b8a8-4514-851e-184994287ca2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "anim reprehenderit ut",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/familymembers/:familyMemberId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"familymembers",
														":familyMemberId"
													],
													"variable": [
														{
															"key": "familyMemberId",
															"value": "6608969",
															"description": "(Required) "
														},
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"response": [
												{
													"id": "c05fe90f-2607-4308-83be-82ff480c0da3",
													"name": "default response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "anim reprehenderit ut",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/clients/:clientId/familymembers/:familyMemberId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clients",
																":clientId",
																"familymembers",
																":familyMemberId"
															],
															"variable": [
																{
																	"key": "familyMemberId",
																	"value": "6608969",
																	"description": "(Required) "
																},
																{
																	"key": "clientId",
																	"value": "6608969",
																	"description": "(Required) clientId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "9509220e-7d81-4701-af62-1347c2e8d5e1"
														}
													],
													"cookie": [],
													"body": "\"anim reprehenderit ut\""
												}
											]
										}
									],
									"id": "a45b331e-cea1-4acb-b6c6-30c6756bded0"
								},
								{
									"name": "get Family Members",
									"id": "d77cabd8-9002-4f66-a6e6-8bc136b5d0cb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/familymembers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"familymembers"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "25862431621186",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "3b5f58ea-63a2-413b-aac1-ae74b2951674",
											"name": "default response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/familymembers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"familymembers"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "835c38ca-1c7d-41ab-a579-6ecbe21a941d"
												}
											],
											"cookie": [],
											"body": "\"anim reprehenderit ut\""
										}
									]
								},
								{
									"name": "add Client Family Members",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"eval(pm.environment.get('baseSuccessTest'))();"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "7d659bb6-005c-4815-8e93-ee7787082bd8"
											}
										}
									],
									"id": "0efec820-03d8-4e76-bbc9-90d3d235582f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"age\":9\n    // \"date_of_birth\":\"09/01/1998\"\n    // \"is_next_of_kin\":true,\n    // \"firstname\":\"Kenny\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/familymembers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"familymembers"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "25862431621186",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "1367794d-89fd-451f-b358-7ec3438233be",
											"name": "default response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "anim reprehenderit ut",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/familymembers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"familymembers"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "8d3a9053-0dd4-49d4-bec0-da82fa91d733"
												}
											],
											"cookie": [],
											"body": "\"anim reprehenderit ut\""
										}
									]
								},
								{
									"name": "get Template 2",
									"id": "9cebd9df-3d8f-42b3-a596-bba53f9509d9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/familymembers/template",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"familymembers",
												"template"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "21077d54-7c23-4f06-9b5b-f1a8f64ae088",
											"name": "default response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/familymembers/template",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"familymembers",
														"template"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "68d18002-39df-4adc-b864-c286d72e708e"
												}
											],
											"cookie": [],
											"body": "\"anim reprehenderit ut\""
										}
									]
								}
							],
							"id": "f046c410-bea8-406b-a96d-b0019f4af527"
						},
						{
							"name": "identifiers",
							"item": [
								{
									"name": "{identifierId}",
									"item": [
										{
											"name": "Delete a Client Identifier",
											"id": "a15d9715-fdba-4fec-8f83-a852286f4cfb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/identifiers/:identifierId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"identifiers",
														":identifierId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														},
														{
															"key": "identifierId",
															"value": "6608969",
															"description": "(Required) identifierId"
														}
													]
												},
												"description": "Deletes a Client Identifier"
											},
											"response": [
												{
													"id": "ba96f0f2-e84d-4d7b-bba9-ded3b94fd089",
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clients/:clientId/identifiers/:identifierId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clients",
																":clientId",
																"identifiers",
																":identifierId"
															],
															"variable": [
																{
																	"key": "clientId",
																	"value": "6608969",
																	"description": "(Required) clientId"
																},
																{
																	"key": "identifierId",
																	"value": "6608969",
																	"description": "(Required) identifierId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "dcebf655-cd66-4d27-a376-3afa5583a29c"
														}
													],
													"cookie": [],
													"body": "{\n  \"clientId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 3\n}"
												}
											]
										},
										{
											"name": "Retrieve a Client Identifier",
											"id": "fcfbf725-1534-418c-85da-d2bc24488bea",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/identifiers/:identifierId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"identifiers",
														":identifierId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														},
														{
															"key": "identifierId",
															"value": "6608969",
															"description": "(Required) identifierId"
														}
													]
												},
												"description": "Example Requests:\nclients/1/identifier/2\n\n\nclients/1/identifier/2?template=true\n\nclients/1/identifiers/2?fields=documentKey,documentType,description"
											},
											"response": [
												{
													"id": "fb6c15d7-b12c-448f-8bff-30a9ffed4ae4",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clients/:clientId/identifiers/:identifierId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clients",
																":clientId",
																"identifiers",
																":identifierId"
															],
															"variable": [
																{
																	"key": "clientId",
																	"value": "6608969",
																	"description": "(Required) clientId"
																},
																{
																	"key": "identifierId",
																	"value": "6608969",
																	"description": "(Required) identifierId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "3b6fee50-a7ed-417a-a4dd-e4fd831b7da6"
														}
													],
													"cookie": [],
													"body": "{\n  \"clientId\": 1,\n  \"description\": \"Issued in the year 2--7\",\n  \"documentKey\": \"12345\",\n  \"documentType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 2\n}"
												}
											]
										},
										{
											"name": "Update a Client Identifier",
											"id": "a60ad10d-0463-49e5-a9d5-182c44f8723e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Document has been updated\",\n  \"documentKey\": \"KA-94667\",\n  \"documentTypeId\": 4\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/identifiers/:identifierId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"identifiers",
														":identifierId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														},
														{
															"key": "identifierId",
															"value": "6608969",
															"description": "(Required) identifierId"
														}
													]
												},
												"description": "Updates a Client Identifier"
											},
											"response": [
												{
													"id": "ef0f509a-7c85-4123-bcbd-cd0fa25c5cca",
													"name": "OK",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"Document has been updated\",\n  \"documentKey\": \"KA-94667\",\n  \"documentTypeId\": 4\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/clients/:clientId/identifiers/:identifierId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clients",
																":clientId",
																"identifiers",
																":identifierId"
															],
															"variable": [
																{
																	"key": "clientId",
																	"value": "6608969",
																	"description": "(Required) clientId"
																},
																{
																	"key": "identifierId",
																	"value": "6608969",
																	"description": "(Required) identifierId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "b6aadb71-8eaf-475e-936a-009e372fe3bc"
														}
													],
													"cookie": [],
													"body": "{\n  \"changes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clientId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 3\n}"
												}
											]
										}
									],
									"id": "ebc36c8d-96d0-4254-8cb0-770c3e7a592d"
								},
								{
									"name": "List all Identifiers for a Client",
									"id": "e847baf4-7660-4099-939e-d5c717470780",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/identifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"identifiers"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "14690260376751992",
													"description": "(Required) clientId"
												}
											]
										},
										"description": "Example Requests:\nclients/1/identifiers\n\n\nclients/1/identifiers?fields=documentKey,documentType,description"
									},
									"response": [
										{
											"id": "81dadfa1-389b-4b63-bf06-90061f0446e3",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/identifiers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"identifiers"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "757f71d5-4095-4c0e-ad19-422b1010c6e4"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"clientId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"documentKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"documentType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"clientId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"documentKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"documentType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "Create an Identifier for a Client",
									"id": "eda70331-2001-44d1-bbee-efbec0475962",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Document has been verified\",\n  \"documentKey\": \"KA-54677\",\n  \"documentTypeId\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/identifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"identifiers"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "14690260376751992",
													"description": "(Required) clientId"
												}
											]
										},
										"description": "Mandatory Fields\ndocumentKey, documentTypeId "
									},
									"response": [
										{
											"id": "54538d57-d3ad-4eda-bb6d-ad4ffd86520b",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Document has been verified\",\n  \"documentKey\": \"KA-54677\",\n  \"documentTypeId\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/identifiers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"identifiers"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "acc9adcc-f2ea-4b8a-9456-65d80849b61c"
												}
											],
											"cookie": [],
											"body": "{\n  \"clientId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 3\n}"
										}
									]
								},
								{
									"name": "Retrieve Client Identifier Details Template",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();",
													"",
													"pm.test(\"Verify response properties exist\", function () {",
													"    pm.expect(responseJson).to.have.property('clientId');",
													"    pm.expect(responseJson).to.have.property('documentType');",
													"    pm.expect(responseJson).to.have.property('documentKey');",
													"    pm.expect(responseJson).to.have.property('allowedDocumentTypes');",
													"    pm.expect(responseJson).to.have.property('description');",
													"    pm.expect(responseJson).to.have.property('id');",
													"    pm.expect(responseJson).to.have.property('status');",
													"",
													"    pm.expect(responseJson.allowedDocumentTypes).to.be.an('array');",
													"    responseJson.allowedDocumentTypes.forEach(function(documentType) {",
													"        pm.expect(documentType).to.have.property('name');",
													"        pm.expect(documentType).to.have.property('description');",
													"        pm.expect(documentType).to.have.property('active');",
													"        pm.expect(documentType).to.have.property('id');",
													"        pm.expect(documentType).to.have.property('position');",
													"        pm.expect(documentType).to.have.property('mandatory');",
													"    });",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "ae86210d-cd32-4f28-974b-fcc9528888b4"
											}
										}
									],
									"id": "ca39bee9-3dd5-4ce5-ba5d-bb05fe1e6c13",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/identifiers/template",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"identifiers",
												"template"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "14690260376751992",
													"description": "(Required) clientId"
												}
											]
										},
										"description": "This is a convenience resource useful for building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n Field Defaults\n Allowed description Lists\n\n\nExample Request:\nclients/1/identifiers/template"
									},
									"response": [
										{
											"id": "439479cb-6d62-46e7-9ad9-af0a4061d3e3",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/identifiers/template",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"identifiers",
														"template"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "ae88421a-ca72-4fba-b887-a80c06e1914a"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowedDocumentTypes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "9d86a6f7-7ec5-488d-940c-aafdd6cedb25"
						},
						{
							"name": "transactions",
							"item": [
								{
									"name": "{transactionId}",
									"item": [
										{
											"name": "Retrieve a Client Transaction",
											"id": "dffc994a-e212-4977-a8a5-f3432a02e856",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/transactions/:transactionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"transactions",
														":transactionId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "14690260376751992",
															"description": "(Required) clientId"
														},
														{
															"key": "transactionId",
															"value": "7090101201998768",
															"description": "(Required) transactionId"
														}
													]
												},
												"description": "Example Requests:\nclients/1/transactions/1\n\n\nclients/1/transactions/1?fields=id,officeName"
											},
											"response": [
												{
													"id": "b35aa20c-1c6d-4186-9b46-a588eedf402d",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clients/:clientId/transactions/:transactionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clients",
																":clientId",
																"transactions",
																":transactionId"
															],
															"variable": [
																{
																	"key": "clientId",
																	"value": "6608969",
																	"description": "(Required) clientId"
																},
																{
																	"key": "transactionId",
																	"value": "6608969",
																	"description": "(Required) transactionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "fafbb675-a6f2-43ce-880f-013ad68191e5"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": 60,\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": \"1950-05-17\",\n  \"id\": 1,\n  \"officeId\": 1,\n  \"officeName\": \"Head Office\",\n  \"reversed\": true,\n  \"submittedOnDate\": \"2021-12-24\",\n  \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Undo a Client Transaction",
											"id": "dc1258a5-e4ab-4b22-846f-9cb9f5da20ae",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/transactions/:transactionId?command=undo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"transactions",
														":transactionId"
													],
													"query": [
														{
															"key": "command",
															"value": "undo",
															"description": "command"
														}
													],
													"variable": [
														{
															"key": "clientId",
															"value": "14690260376751992",
															"description": "(Required) clientId"
														},
														{
															"key": "transactionId",
															"value": "7090101201998768",
															"description": "(Required) transactionId"
														}
													]
												},
												"description": "Undoes a Client Transaction"
											},
											"response": [
												{
													"id": "5b90e589-8d8b-4966-a53a-318b400639a1",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/clients/:clientId/transactions/:transactionId?command=anim reprehenderit ut",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"clients",
																":clientId",
																"transactions",
																":transactionId"
															],
															"query": [
																{
																	"key": "command",
																	"value": "anim reprehenderit ut"
																}
															],
															"variable": [
																{
																	"key": "clientId",
																	"value": "6608969",
																	"description": "(Required) clientId"
																},
																{
																	"key": "transactionId",
																	"value": "6608969",
																	"description": "(Required) transactionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "e9a1652a-a8a6-4a66-9173-42fe4b0e9f1f"
														}
													],
													"cookie": [],
													"body": "{\n  \"clientId\": 189,\n  \"officeId\": 1,\n  \"resourceId\": 222\n}"
												}
											]
										}
									],
									"id": "5d141ca4-fe3c-4773-8a84-4c14fa50fd48"
								},
								{
									"name": "List Client Transactions",
									"id": "fb4c8206-3e18-4a66-8b02-c4ceb7b2e04c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/transactions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"transactions"
											],
											"query": [
												{
													"key": "offset",
													"value": "-44553522",
													"description": "offset",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "-44553522",
													"description": "limit",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "clientId",
													"value": "14690260376751992",
													"description": "(Required) clientId"
												}
											]
										},
										"description": "The list capability of client transaction can support pagination.\n\nExample Requests:\n\nclients/189/transactions\n\nclients/189/transactions?offset=10&limit=50"
									},
									"response": [
										{
											"id": "28fadcf5-8ac2-41b7-b4c3-9d6f87802052",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId/transactions?offset=-44553522&limit=-44553522",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId",
														"transactions"
													],
													"query": [
														{
															"key": "offset",
															"value": "-44553522"
														},
														{
															"key": "limit",
															"value": "-44553522"
														}
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "8e98bf5f-f556-44bc-b838-c5570c74f90e"
												}
											],
											"cookie": [],
											"body": "{\n  \"pageItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalFilteredRecords\": 20\n}"
										}
									]
								}
							],
							"id": "987495ad-d440-4906-a3b9-b6ab88d82d9f"
						},
						{
							"name": "client transfer",
							"item": [
								{
									"name": "Propose a Client Transfer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"eval(pm.environment.get('baseSuccessTest'))();",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "b5eed03c-bde2-4ae8-8acc-f7dab8d54589"
											}
										}
									],
									"id": "2e34b320-ad31-4da4-bc75-5667ea8799df",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transferDate\":\"{{todaysDate}}\",\n    \"destinationOfficeId\":\"12474843303329063\",\n    \"note\":\"Movement of client\",\n    \"locale\":\"en\",\n    \"dateFormat\":\"dd MMMM yyyy\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId?command=proposeTransfer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"query": [
												{
													"key": "command",
													"value": "proposeTransfer",
													"description": "command"
												}
											],
											"variable": [
												{
													"key": "clientId",
													"value": "1380257378480069",
													"description": "(Required) clientId"
												}
											]
										},
										"description": "Activate a Client:\n\nClients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).\n\nIf the client happens to be already active this API will result in an error.\n\nClose a Client:\n\nClients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .\n\nIf the client have any active loans/savingsAccount this API will result in an error.\n\nReject a Client:\n\nClients can be rejected when client is in pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: rejectionDate, rejectionReasonId\n\nWithdraw a Client:\n\nClient applications can be withdrawn when client is in a pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: withdrawalDate, withdrawalReasonId\n\nReactivate a Client: Clients can be reactivated after they have been closed.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reactivationDate\n\nUndoReject a Client:\n\nClients can be reactivated after they have been rejected.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDateUndoWithdraw a Client:\n\nClients can be reactivated after they have been withdrawn.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDate\n\nAssign a Staff:\n\nAllows you to assign a Staff for existed Client.\n\nThe selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.\n\nUnassign a Staff:\n\nAllows you to unassign the Staff assigned to a Client.\n\nUpdate Default Savings Account:\n\nAllows you to modify or assign a default savings account for an existing Client.\n\nThe selected savings account should be one among the existing savings account for a particular customer.\n\nPropose a Client Transfer:\n\nAllows you to propose the transfer of a Client to a different Office.\n\nWithdraw a Client Transfer:\n\nAllows you to withdraw the proposed transfer of a Client to a different Office.\n\nWithdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal\n\nReject a Client Transfer:\n\nAllows the Destination Branch to reject the proposed Client Transfer.\n\nAccept a Client Transfer:\n\nAllows the Destination Branch to accept the proposed Client Transfer.\n\nThe destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer\n\nPropose and Accept a Client Transfer:\n\nAbstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.\n\nShowing request/response for 'Reject a Client Transfer'"
									},
									"response": [
										{
											"id": "ef511c12-2aaa-457a-a67f-133a2d1cb2be",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activationDate\": \"03 August 2021\",\n  \"dateFormat\": \"dd MMM yyyy\",\n  \"locale\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId?command=anim reprehenderit ut",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId"
													],
													"query": [
														{
															"key": "command",
															"value": "anim reprehenderit ut"
														}
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "09e94119-f61c-432f-bb37-9c9670fe2fb3"
												}
											],
											"cookie": [],
											"body": "{\n  \"clientId\": 2,\n  \"officeId\": 2,\n  \"resourceId\": 2\n}"
										}
									]
								},
								{
									"name": "Withdraw Client Transfer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"eval(pm.environment.get('baseSuccessTest'))();",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "189fc160-ed62-4dda-b624-3e7c901c7d38"
											}
										}
									],
									"id": "dc11475b-b20e-4f9e-b320-40797af391eb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"note\":\"Withdraw movement of client\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId?command=withdrawTransfer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"query": [
												{
													"key": "command",
													"value": "withdrawTransfer",
													"description": "command"
												}
											],
											"variable": [
												{
													"key": "clientId",
													"value": "1380257378480069",
													"description": "(Required) clientId"
												}
											]
										},
										"description": "Activate a Client:\n\nClients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).\n\nIf the client happens to be already active this API will result in an error.\n\nClose a Client:\n\nClients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .\n\nIf the client have any active loans/savingsAccount this API will result in an error.\n\nReject a Client:\n\nClients can be rejected when client is in pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: rejectionDate, rejectionReasonId\n\nWithdraw a Client:\n\nClient applications can be withdrawn when client is in a pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: withdrawalDate, withdrawalReasonId\n\nReactivate a Client: Clients can be reactivated after they have been closed.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reactivationDate\n\nUndoReject a Client:\n\nClients can be reactivated after they have been rejected.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDateUndoWithdraw a Client:\n\nClients can be reactivated after they have been withdrawn.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDate\n\nAssign a Staff:\n\nAllows you to assign a Staff for existed Client.\n\nThe selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.\n\nUnassign a Staff:\n\nAllows you to unassign the Staff assigned to a Client.\n\nUpdate Default Savings Account:\n\nAllows you to modify or assign a default savings account for an existing Client.\n\nThe selected savings account should be one among the existing savings account for a particular customer.\n\nPropose a Client Transfer:\n\nAllows you to propose the transfer of a Client to a different Office.\n\nWithdraw a Client Transfer:\n\nAllows you to withdraw the proposed transfer of a Client to a different Office.\n\nWithdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal\n\nReject a Client Transfer:\n\nAllows the Destination Branch to reject the proposed Client Transfer.\n\nAccept a Client Transfer:\n\nAllows the Destination Branch to accept the proposed Client Transfer.\n\nThe destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer\n\nPropose and Accept a Client Transfer:\n\nAbstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.\n\nShowing request/response for 'Reject a Client Transfer'"
									},
									"response": [
										{
											"id": "1ee6b9e7-26ce-479b-bb8f-49f0e7df1049",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activationDate\": \"03 August 2021\",\n  \"dateFormat\": \"dd MMM yyyy\",\n  \"locale\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId?command=anim reprehenderit ut",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId"
													],
													"query": [
														{
															"key": "command",
															"value": "anim reprehenderit ut"
														}
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "99319f2c-561d-4494-8307-b67a10e5c470"
												}
											],
											"cookie": [],
											"body": "{\n  \"clientId\": 2,\n  \"officeId\": 2,\n  \"resourceId\": 2\n}"
										}
									]
								},
								{
									"name": "Approve a branch transfer request",
									"id": "0746aafc-a8dc-4a34-8888-4c356f553131",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"note\":\"Accepting a branch transfer\",\n    \"locale\":\"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId?command=acceptTransfer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"query": [
												{
													"key": "command",
													"value": "acceptTransfer",
													"description": "command"
												}
											],
											"variable": [
												{
													"key": "clientId",
													"value": "469911458914999",
													"description": "(Required) clientId"
												}
											]
										},
										"description": "Activate a Client:\n\nClients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).\n\nIf the client happens to be already active this API will result in an error.\n\nClose a Client:\n\nClients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .\n\nIf the client have any active loans/savingsAccount this API will result in an error.\n\nReject a Client:\n\nClients can be rejected when client is in pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: rejectionDate, rejectionReasonId\n\nWithdraw a Client:\n\nClient applications can be withdrawn when client is in a pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: withdrawalDate, withdrawalReasonId\n\nReactivate a Client: Clients can be reactivated after they have been closed.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reactivationDate\n\nUndoReject a Client:\n\nClients can be reactivated after they have been rejected.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDateUndoWithdraw a Client:\n\nClients can be reactivated after they have been withdrawn.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDate\n\nAssign a Staff:\n\nAllows you to assign a Staff for existed Client.\n\nThe selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.\n\nUnassign a Staff:\n\nAllows you to unassign the Staff assigned to a Client.\n\nUpdate Default Savings Account:\n\nAllows you to modify or assign a default savings account for an existing Client.\n\nThe selected savings account should be one among the existing savings account for a particular customer.\n\nPropose a Client Transfer:\n\nAllows you to propose the transfer of a Client to a different Office.\n\nWithdraw a Client Transfer:\n\nAllows you to withdraw the proposed transfer of a Client to a different Office.\n\nWithdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal\n\nReject a Client Transfer:\n\nAllows the Destination Branch to reject the proposed Client Transfer.\n\nAccept a Client Transfer:\n\nAllows the Destination Branch to accept the proposed Client Transfer.\n\nThe destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer\n\nPropose and Accept a Client Transfer:\n\nAbstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.\n\nShowing request/response for 'Reject a Client Transfer'"
									},
									"response": [
										{
											"id": "ee81808d-1de5-43b2-81a8-cf1bec286c15",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activationDate\": \"03 August 2021\",\n  \"dateFormat\": \"dd MMM yyyy\",\n  \"locale\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/clients/:clientId?command=anim reprehenderit ut",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"clients",
														":clientId"
													],
													"query": [
														{
															"key": "command",
															"value": "anim reprehenderit ut"
														}
													],
													"variable": [
														{
															"key": "clientId",
															"value": "6608969",
															"description": "(Required) clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "57e8c886-e357-489e-8c4e-15f9b1a1aa3f"
												}
											],
											"cookie": [],
											"body": "{\n  \"clientId\": 2,\n  \"officeId\": 2,\n  \"resourceId\": 2\n}"
										}
									]
								}
							],
							"id": "8ac2f516-ebad-4967-a2fa-2669231513b7"
						},
						{
							"name": "Delete a Client",
							"id": "45665202-3279-4d27-8b6b-adf878fd9d81",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6581247936489540",
											"description": "(Required) clientId"
										}
									]
								},
								"description": "If a client is in Pending state, you are allowed to Delete it. The delete is a 'hard delete' and cannot be recovered from. Once clients become active or have loans or savings associated with them, you cannot delete the client but you may Close the client if they have left the program."
							},
							"response": [
								{
									"id": "e5740667-f346-4050-97ee-5ed1e54a5ce9",
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) clientId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "712c1523-3da9-4131-a897-4e18216e14f3"
										}
									],
									"cookie": [],
									"body": "{\n  \"clientId\": 3,\n  \"officeId\": 1,\n  \"resourceId\": 3\n}"
								}
							]
						},
						{
							"name": "Update client document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "5562291c-6e06-409c-a088-2a1ace1d8e15"
									}
								}
							],
							"id": "2529f58f-4f8b-44a7-9baf-e4e904925622",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idType",
											"value": "8580510003293790",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/Users/odirieboh/Downloads/Bugs/image.png"
										},
										{
											"key": "issuingInstitution",
											"value": "UK Immigration",
											"type": "text"
										},
										{
											"key": "idNumber",
											"value": "B00188LI0",
											"type": "text"
										},
										{
											"key": "dateFormat",
											"value": "dd MMM yyyy",
											"type": "text"
										},
										{
											"key": "expiryDate",
											"value": "31 October 2027",
											"type": "text"
										},
										{
											"key": "placeOfIssuance",
											"value": "Festac, Lagos",
											"type": "text"
										},
										{
											"key": "documentTypeId",
											"value": "8580510003293790",
											"type": "text"
										},
										{
											"key": "issuanceDate",
											"value": "21 October 2022",
											"type": "text"
										},
										{
											"key": "",
											"value": "3618476339923224",
											"type": "text",
											"disabled": true
										},
										{
											"key": "",
											"value": "8580510003293790",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId/update-client-id-document",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId",
										"update-client-id-document"
									],
									"query": [
										{
											"key": "staffInSelectedOfficeOnly",
											"value": "false",
											"description": "staffInSelectedOfficeOnly",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "clientId",
											"value": "720674911087176"
										}
									]
								},
								"description": "Example Requests:\n\nclients/1\n\n\nclients/1?template=true\n\n\nclients/1?fields=id,displayName,officeName"
							},
							"response": [
								{
									"id": "2168153e-cd9c-402a-ba7f-a566c67c93ee",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId?staffInSelectedOfficeOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"query": [
												{
													"key": "staffInSelectedOfficeOnly",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) clientId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "acc84c43-9838-44f3-8064-db95560c6887"
										}
									],
									"cookie": [],
									"body": "{\n  \"accountNo\": \"000000027\",\n  \"activationDate\": \"2008-08-10\",\n  \"active\": true,\n  \"displayName\": \"savings test\",\n  \"emailAddress\": \"1\",\n  \"firstname\": \"savings\",\n  \"id\": 27,\n  \"lastname\": \"test\",\n  \"officeId\": 1,\n  \"officeName\": \"Head Office\",\n  \"personalTitleId\": 1,\n  \"savingsProductId\": 4,\n  \"savingsProductName\": \"account overdraft\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeline\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Activate a Client | Close a Client | Reject a Client | Withdraw a Client | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client | Assign a Staff | Unassign a Staff | Update Default Savings Account | Propose a Client Transfer | Withdraw a Clie",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "b510d0da-c37d-40ac-8445-57baae255928"
									}
								}
							],
							"id": "9f1a77b6-c2b6-4ae5-baac-aedc77d317b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationDate\": \"23 May 2024\",\n  \"dateFormat\": \"dd MMM yyyy\",\n  \"locale\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId?command=activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId"
									],
									"query": [
										{
											"key": "command",
											"value": "activate",
											"description": "command"
										}
									],
									"variable": [
										{
											"key": "clientId",
											"value": "13391932459983781",
											"description": "(Required) clientId"
										}
									]
								},
								"description": "Activate a Client:\n\nClients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).\n\nIf the client happens to be already active this API will result in an error.\n\nClose a Client:\n\nClients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .\n\nIf the client have any active loans/savingsAccount this API will result in an error.\n\nReject a Client:\n\nClients can be rejected when client is in pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: rejectionDate, rejectionReasonId\n\nWithdraw a Client:\n\nClient applications can be withdrawn when client is in a pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: withdrawalDate, withdrawalReasonId\n\nReactivate a Client: Clients can be reactivated after they have been closed.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reactivationDate\n\nUndoReject a Client:\n\nClients can be reactivated after they have been rejected.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDateUndoWithdraw a Client:\n\nClients can be reactivated after they have been withdrawn.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDate\n\nAssign a Staff:\n\nAllows you to assign a Staff for existed Client.\n\nThe selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.\n\nUnassign a Staff:\n\nAllows you to unassign the Staff assigned to a Client.\n\nUpdate Default Savings Account:\n\nAllows you to modify or assign a default savings account for an existing Client.\n\nThe selected savings account should be one among the existing savings account for a particular customer.\n\nPropose a Client Transfer:\n\nAllows you to propose the transfer of a Client to a different Office.\n\nWithdraw a Client Transfer:\n\nAllows you to withdraw the proposed transfer of a Client to a different Office.\n\nWithdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal\n\nReject a Client Transfer:\n\nAllows the Destination Branch to reject the proposed Client Transfer.\n\nAccept a Client Transfer:\n\nAllows the Destination Branch to accept the proposed Client Transfer.\n\nThe destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer\n\nPropose and Accept a Client Transfer:\n\nAbstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.\n\nShowing request/response for 'Reject a Client Transfer'"
							},
							"response": [
								{
									"id": "c0d6ce5b-4301-4520-88a5-5c28b66a7c39",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationDate\": \"03 August 2021\",\n  \"dateFormat\": \"dd MMM yyyy\",\n  \"locale\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId?command=anim reprehenderit ut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"query": [
												{
													"key": "command",
													"value": "anim reprehenderit ut"
												}
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) clientId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "c69e8b32-9595-44f0-a455-454ea80cec65"
										}
									],
									"cookie": [],
									"body": "{\n  \"clientId\": 2,\n  \"officeId\": 2,\n  \"resourceId\": 2\n}"
								}
							]
						},
						{
							"name": "UndoBlackList Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "5e8c6936-54ee-4cca-a7ca-6a788bc1466f"
									}
								}
							],
							"id": "e2a800b4-c5ae-463f-aa34-fa0b425ce7e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"undoBlacklistedDate\":\"31 August 2023\",\"undoBlacklistedReason\":\"ffff\",\"dateFormat\":\"dd MMMM yyyy\", \"locale\":\"en\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId?command=undo_blacklist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId"
									],
									"query": [
										{
											"key": "command",
											"value": "undo_blacklist",
											"description": "command"
										}
									],
									"variable": [
										{
											"key": "clientId",
											"value": "720674911087176",
											"description": "(Required) clientId"
										}
									]
								},
								"description": "Activate a Client:\n\nClients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).\n\nIf the client happens to be already active this API will result in an error.\n\nClose a Client:\n\nClients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .\n\nIf the client have any active loans/savingsAccount this API will result in an error.\n\nReject a Client:\n\nClients can be rejected when client is in pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: rejectionDate, rejectionReasonId\n\nWithdraw a Client:\n\nClient applications can be withdrawn when client is in a pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: withdrawalDate, withdrawalReasonId\n\nReactivate a Client: Clients can be reactivated after they have been closed.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reactivationDate\n\nUndoReject a Client:\n\nClients can be reactivated after they have been rejected.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDateUndoWithdraw a Client:\n\nClients can be reactivated after they have been withdrawn.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDate\n\nAssign a Staff:\n\nAllows you to assign a Staff for existed Client.\n\nThe selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.\n\nUnassign a Staff:\n\nAllows you to unassign the Staff assigned to a Client.\n\nUpdate Default Savings Account:\n\nAllows you to modify or assign a default savings account for an existing Client.\n\nThe selected savings account should be one among the existing savings account for a particular customer.\n\nPropose a Client Transfer:\n\nAllows you to propose the transfer of a Client to a different Office.\n\nWithdraw a Client Transfer:\n\nAllows you to withdraw the proposed transfer of a Client to a different Office.\n\nWithdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal\n\nReject a Client Transfer:\n\nAllows the Destination Branch to reject the proposed Client Transfer.\n\nAccept a Client Transfer:\n\nAllows the Destination Branch to accept the proposed Client Transfer.\n\nThe destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer\n\nPropose and Accept a Client Transfer:\n\nAbstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.\n\nShowing request/response for 'Reject a Client Transfer'"
							},
							"response": [
								{
									"id": "1c91c332-3360-4258-9a0f-d00d8bb26bdf",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationDate\": \"03 August 2021\",\n  \"dateFormat\": \"dd MMM yyyy\",\n  \"locale\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId?command=anim reprehenderit ut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"query": [
												{
													"key": "command",
													"value": "anim reprehenderit ut"
												}
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) clientId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "ea9fda55-d275-4bcf-9562-cb9334d6b555"
										}
									],
									"cookie": [],
									"body": "{\n  \"clientId\": 2,\n  \"officeId\": 2,\n  \"resourceId\": 2\n}"
								}
							]
						},
						{
							"name": "BlackList Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "7e4e15ad-8f22-48ee-a113-4dd6d6774a36"
									}
								}
							],
							"id": "7ca5fbbb-3f92-48da-b55c-d878342e6216",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"blacklistedDate\":\"30 August 2023\",\"blacklistedReason\":\"test\",\"dateFormat\":\"dd MMMM yyyy\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId?command=blacklist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId"
									],
									"query": [
										{
											"key": "command",
											"value": "blacklist",
											"description": "command"
										}
									],
									"variable": [
										{
											"key": "clientId",
											"value": "720674911087176",
											"description": "(Required) clientId"
										}
									]
								},
								"description": "Activate a Client:\n\nClients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).\n\nIf the client happens to be already active this API will result in an error.\n\nClose a Client:\n\nClients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .\n\nIf the client have any active loans/savingsAccount this API will result in an error.\n\nReject a Client:\n\nClients can be rejected when client is in pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: rejectionDate, rejectionReasonId\n\nWithdraw a Client:\n\nClient applications can be withdrawn when client is in a pending for activation status.\n\nIf the client is any other status, this API throws an error.\n\nMandatory Fields: withdrawalDate, withdrawalReasonId\n\nReactivate a Client: Clients can be reactivated after they have been closed.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reactivationDate\n\nUndoReject a Client:\n\nClients can be reactivated after they have been rejected.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDateUndoWithdraw a Client:\n\nClients can be reactivated after they have been withdrawn.\n\nTrying to reactivate a client in any other state throws an error.\n\nMandatory Fields: reopenedDate\n\nAssign a Staff:\n\nAllows you to assign a Staff for existed Client.\n\nThe selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.\n\nUnassign a Staff:\n\nAllows you to unassign the Staff assigned to a Client.\n\nUpdate Default Savings Account:\n\nAllows you to modify or assign a default savings account for an existing Client.\n\nThe selected savings account should be one among the existing savings account for a particular customer.\n\nPropose a Client Transfer:\n\nAllows you to propose the transfer of a Client to a different Office.\n\nWithdraw a Client Transfer:\n\nAllows you to withdraw the proposed transfer of a Client to a different Office.\n\nWithdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal\n\nReject a Client Transfer:\n\nAllows the Destination Branch to reject the proposed Client Transfer.\n\nAccept a Client Transfer:\n\nAllows the Destination Branch to accept the proposed Client Transfer.\n\nThe destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer\n\nPropose and Accept a Client Transfer:\n\nAbstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.\n\nShowing request/response for 'Reject a Client Transfer'"
							},
							"response": [
								{
									"id": "4a79f5b6-7933-4beb-a7cb-a5cadf23bdb3",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationDate\": \"03 August 2021\",\n  \"dateFormat\": \"dd MMM yyyy\",\n  \"locale\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId?command=anim reprehenderit ut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"query": [
												{
													"key": "command",
													"value": "anim reprehenderit ut"
												}
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) clientId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "38f07ad5-f7ac-4aa3-a1fa-1cae03e967e0"
										}
									],
									"cookie": [],
									"body": "{\n  \"clientId\": 2,\n  \"officeId\": 2,\n  \"resourceId\": 2\n}"
								}
							]
						},
						{
							"name": "Update a Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "ee885052-12ca-4625-97dc-be43713ef348"
									}
								}
							],
							"id": "3463a120-1482-4340-9394-bc0cee6ff181",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    //\"clientTypeId\": \"6611445597731642\"\n    \"dateOfBirth\": \"15 August 1996\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "3040193886367716",
											"description": "(Required) clientId"
										}
									]
								},
								"description": "Note: You can update any of the basic attributes of a client (but not its associations) using this API.\n\nChanging the relationship between a client and its office is not supported through this API. An API specific to handling transfers of clients between offices is available for the same.\n\nThe relationship between a client and a group must be removed through the Groups API."
							},
							"response": [
								{
									"id": "6148baf5-d09f-4183-a61b-9e2cda9d1375",
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalId\": \"786444UUUYYH7\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) clientId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "70fd7486-1db3-4cb1-a231-9f16258ed19b"
										}
									],
									"cookie": [],
									"body": "{\n  \"changes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clientId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 1\n}"
								}
							]
						},
						{
							"name": "Retrieve client accounts overview",
							"id": "73eb531c-e54f-4d14-b1b6-7c5a84bb7fa2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId",
										"accounts"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "14690260376751992",
											"description": "(Required) clientId"
										}
									]
								},
								"description": "An example of how a loan portfolio summary can be provided. This is requested in a specific use case of the community application.\nIt is quite reasonable to add resources like this to simplify User Interface development.\n\nExample Requests:\n \nclients/1/accounts\n\nclients/1/accounts?fields=loanAccounts,savingsAccounts"
							},
							"response": [
								{
									"id": "d8708492-022e-4ceb-92aa-c5f37eed01e6",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"accounts"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) clientId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "4b2e7ed0-614c-4fc3-8579-ceb1444c214c"
										}
									],
									"cookie": [],
									"body": "{\n  \"loanAccounts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"savingsAccounts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "8ef72e98-658d-45d4-84ea-450c8e08b8e3",
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"accounts"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) clientId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"uuid": "56e7b48d-530d-4911-bb94-f83d3f73ad79"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "retrieve Obligee Details",
							"id": "b22ce4cd-de6d-4a2d-b64f-6da646983754",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId/obligeedetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId",
										"obligeedetails"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "14690260376751992",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "c8be17a0-3d63-4c27-b98a-a23700b630df",
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/obligeedetails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"obligeedetails"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "dfce5297-b4e3-4e8e-a2bf-b83e853bbf1e"
										}
									],
									"cookie": [],
									"body": "\"anim reprehenderit ut\""
								}
							]
						},
						{
							"name": "retrieve Transfer Template",
							"id": "bbec7650-10b2-4b28-bcf4-3e3b1319e149",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients/:clientId/transferproposaldate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":clientId",
										"transferproposaldate"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "14690260376751992",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "60ed3293-0931-45a3-a3f9-9b99eca95bfb",
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:clientId/transferproposaldate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":clientId",
												"transferproposaldate"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "6608969",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "29160054-ddc3-469d-ada7-31b503260a54"
										}
									],
									"cookie": [],
									"body": "\"anim reprehenderit ut\""
								}
							]
						}
					],
					"id": "191a5c13-2781-4fc3-af6a-b1aa17909a6c"
				},
				{
					"name": "client-type",
					"item": [
						{
							"name": "CreateClientType",
							"item": [
								{
									"name": "create adult client type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required field - resourceId\", function () {",
													"    const responseData = pm.response.json();",
													"    pm.expect(responseData).to.have.property('resourceId');",
													"});",
													"",
													"",
													"pm.test(\"ResourceId should not be empty\", function () {",
													"  const responseData = pm.response.json();",
													"  pm.expect(responseData.resourceId).to.exist.and.to.not.be.empty;",
													"});",
													"",
													"",
													"pm.test(\"Content-Type header is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "7f61090b-6ba3-4fe9-b685-d9a63b5d8627"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var num = Math.floor(Math.random() * (10 - 1 + 1)) + 1;",
													"pm.globals.set(\"clientTypeName\", \"MEMBERS\"+num);"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "e1d675f5-04d0-4f3e-bfbf-c14027ea5f81"
											}
										}
									],
									"id": "952db9d0-20b9-4c44-baba-f387677e7f7b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": {{clientTypeName}},\n  \"isMinor\": false,\n  \"minimumAgeOfClient\": 18,\n  \"maximumAgeOfClient\": 50,\n  \"locale\": \"en\",\n  \"allowOpeningAccounts\": true,\n  \"allowAsGuarantor\": true,\n  \"documentTypeIds\":[8580510003293790,3618476339923224]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/client-type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"client-type"
											]
										}
									},
									"response": []
								},
								{
									"name": "create minor client type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required field - resourceId\", function () {",
													"    const responseData = pm.response.json();",
													"    pm.expect(responseData).to.have.property('resourceId');",
													"});",
													"",
													"",
													"pm.test(\"ResourceId should not be empty\", function () {",
													"  const responseData = pm.response.json();",
													"  pm.expect(responseData.resourceId).to.exist.and.to.not.be.empty;",
													"});",
													"",
													"",
													"pm.test(\"Content-Type header is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "74a72955-5f73-4b94-8f1f-3baa3806bd01"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var num = Math.floor(Math.random() * (10 - 1 + 1)) + 1;",
													"pm.globals.set(\"clientTypeName\", \"CHILDREN\"+num);"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "3f78ba61-a25a-45d1-ad8a-5f732ee4cafd"
											}
										}
									],
									"id": "412d86a0-c6ad-4b41-bd3e-18e0584330d1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": {{clientTypeName}},\n  \"isMinor\": true,\n  \"minimumAgeOfClient\": 2,\n  \"maximumAgeOfClient\": 15,\n  \"locale\": \"en\",\n  \"allowOpeningAccounts\": true,\n  \"allowAsGuarantor\": false,\n  \"documentTypeIds\":[8580510003293790,3618476339923224]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/client-type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"client-type"
											]
										}
									},
									"response": []
								},
								{
									"name": "existing_client_type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test for Content-Type header is application/json",
													"pm.test(\"Content-Type header is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"// Test for response time to be less than 500ms",
													"pm.test(\"Response time is less than 500ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(500);",
													"});",
													"",
													"//Test that duplicate entry error is returned",
													"pm.test(\"Response has duplicate entry error\", ()=>{",
													"    var jsonData = pm.response.json()",
													"    pm.expect(jsonData.errors[0].developerMessage).contains('Duplicate entry') ",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "2e81afd1-0dcb-4b17-9c63-f5b5ca7d9e03"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "e3f317ae-1ba9-4a7c-8415-83d423d4238b"
											}
										}
									],
									"id": "9422b77f-5843-417b-9a7e-56f211313af1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "{{fineract_platform_tenantid}}",
												"value": "default",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"MEMBERS\",\n  \"isMinor\": false,\n  \"minimumAgeOfClient\": 18,\n  \"maximumAgeOfClient\": 50,\n  \"locale\": \"en\",\n  \"allowOpeningAccounts\": true,\n  \"allowAsGuarantor\": true,\n  \"documentTypeIds\":[8580510003293790,3618476339923224]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/client-type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"client-type"
											]
										}
									},
									"response": []
								}
							],
							"id": "d0178b98-8d4c-44d4-9c40-a7cfc0980026"
						},
						{
							"name": "get-all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Name is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"  ",
											"    pm.expect(responseData).to.be.an('array');",
											"    responseData.forEach(function (clientType) {",
											"        pm.expect(clientType.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"Document type IDs array is present and has expected number of elements\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('array');",
											"    pm.expect(responseData[0].documentTypeIds).to.exist.and.to.be.an('array');",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "13b431ff-dfc0-42aa-a217-27d5e1440df9"
									}
								}
							],
							"id": "cc0bee88-648b-49cb-903a-8d20fe714898",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/client-type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-type"
									]
								}
							},
							"response": []
						},
						{
							"name": "update-one-by-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields - resourceId and changes\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.resourceId).to.exist;",
											"    pm.expect(responseData.changes).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"ResourceId is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.resourceId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ResourceId should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Changes is an object\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.changes).to.be.an('object');",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "5ae55d1f-9474-483a-a1c7-199c05293fc7"
									}
								}
							],
							"id": "520dab50-99b8-42d8-b44c-3a829af4f4e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "fineract-platform-tenantid",
										"value": "default",
										"type": "text"
									},
									{
										"key": "X-API-KEY",
										"value": "app_WeqI3mnBabpK8CNdZN+Y1Q==_2237940298",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-APP-ID",
										"value": "39d4b51bba504d0d899921a7980c6527",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"allowAsGuarantor\": false,\n\"locale\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/client-type/:clientTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-type",
										":clientTypeId"
									],
									"variable": [
										{
											"key": "clientTypeId",
											"value": "13676526180376847"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get-one-by-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"pm.test(\"Ensure that documentTypeIds is an array\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.documentTypeIds).to.be.an('array');",
											"});",
											"",
											"",
											"pm.test(\"Name is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "db252db9-aa52-4e17-91a6-684f0cdbde65"
									}
								}
							],
							"id": "eb2a071a-c6e7-4c41-b0cc-df2f73465895",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "fineract-platform-tenantid",
										"value": "default",
										"type": "text"
									},
									{
										"key": "X-API-KEY",
										"value": "app_WeqI3mnBabpK8CNdZN+Y1Q==_2237940298",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-APP-ID",
										"value": "39d4b51bba504d0d899921a7980c6527",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"CHILDREN\",\n  \"isMinor\": true,\n  \"minimumAgeOfClient\": 60,\n  \"maximumAgeOfClient\": 99,\n  \"locale\": \"en\",\n  \"allowOpeningAccounts\": true,\n  \"allowAsGuarantor\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/client-type/4544038514606495",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-type",
										"4544038514606495"
									]
								}
							},
							"response": []
						}
					],
					"id": "cb9e5b0f-382e-4dbe-899b-8f324d395040"
				},
				{
					"name": "client-source-of-income",
					"item": [
						{
							"name": "get all sources of income",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is an array\", function () {",
											"    pm.expect(pm.response.json()).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Each element in the array has specific properties\", function () {",
											"    pm.response.json().forEach(function(income) {",
											"        pm.expect(income).to.have.property('maximumAnnualMonetaryIncome');",
											"        pm.expect(income).to.have.property('clientId');",
											"        pm.expect(income).to.have.property('active');",
											"        pm.expect(income).to.have.property('sourceOfIncomeType');",
											"        pm.expect(income).to.have.property('id');",
											"        pm.expect(income).to.have.property('minimumAnnualMonetaryIncome');",
											"    });",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "c146eb5e-ab59-4d6e-a440-247d25724dd1"
									}
								}
							],
							"id": "8929da81-5554-4d93-8ef9-c832191bf15b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/source-of-income",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"source-of-income"
									]
								}
							},
							"response": []
						},
						{
							"name": "create a source of income",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields - resourceId, clientId, and officeId\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.resourceId).to.exist;",
											"  pm.expect(responseData.clientId).to.exist;",
											"  pm.expect(responseData.officeId).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"ResourceId should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.resourceId).to.exist.and.to.not.be.empty;",
											"});",
											"",
											"",
											"pm.test(\"ClientId is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.clientId).to.be.a('string').and.to.match(/[0-9]+/);",
											"});",
											"",
											"",
											"pm.test(\"OfficeId should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.officeId).to.exist.and.to.have.lengthOf.at.least(1, \"OfficeId should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "8e465515-18bd-4d0e-9c62-030aff10e5c1"
									}
								}
							],
							"id": "02122f86-341d-4992-89c9-aba444d9b500",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": true,\n    \"locale\": \"en\",\n    \"minimumAnnualMonetaryIncome\": \"500000\",\n    \"maximumAnnualMonetaryIncome\": \"1000000\",\n    \"sourceOfIncomeTypeId\":5969982849729967\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/source-of-income?type=client&ownerId=25862431621186",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"source-of-income"
									],
									"query": [
										{
											"key": "type",
											"value": "client"
										},
										{
											"key": "ownerId",
											"value": "25862431621186"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update source of income",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (10000000)) + 1;",
											"console.log(num)",
											"pm.globals.set(\"amount\", num);",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "eb6761b4-8d35-417e-9a29-d9f1f7071ea6"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has the required fields - resourceId, changes\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.resourceId).to.exist;",
											"  pm.expect(responseData.changes).to.exist;",
											"});",
											"",
											"pm.test(\"ResourceId should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  pm.expect(responseData.resourceId).to.exist.and.to.not.be.empty;",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "54654009-1983-4a73-8705-be13fad9233f"
									}
								}
							],
							"id": "d9f61444-1c7f-45de-b6d5-40bcdc0a2edd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"locale\": \"en\",\n    \"maximumAnnualMonetaryIncome\": {{amount}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/source-of-income/:sourceOfIncomeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"source-of-income",
										":sourceOfIncomeId"
									],
									"variable": [
										{
											"key": "sourceOfIncomeId",
											"value": "13678573726112266"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Negative Scenario - Update source of income",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (10 - 1 + 1)) + 1;",
											"pm.globals.set(\"amount\", num);",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "ac9f272a-5bd2-49ff-b7e7-c6822e5a64dd"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response is in JSON format\", function () {",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
											"});",
											"",
											"pm.test(\"Response contains errors array\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('errors').that.is.an('array');",
											"});",
											"",
											"pm.test(\"Each error object in the errors array has specific properties\", function () {",
											"    pm.response.json().errors.forEach(function(error) {",
											"        pm.expect(error).to.have.property('developerMessage');",
											"        pm.expect(error).to.have.property('defaultUserMessage');",
											"        pm.expect(error).to.have.property('userMessageGlobalisationCode');",
											"        pm.expect(error).to.have.property('parameterName');",
											"        pm.expect(error).to.have.property('value');",
											"        pm.expect(error.args[0]).to.have.property('value');",
											"    });",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "4b5e19a7-41b8-4921-a979-25d779f228b6"
									}
								}
							],
							"id": "43dee5ce-2ee4-42c8-9244-9bc2d0efb3c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"locale\": \"en\",\n    \"maximumAnnualMonetaryIncome\": {{amount}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/source-of-income/:sourceOfIncomeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"source-of-income",
										":sourceOfIncomeId"
									],
									"variable": [
										{
											"key": "sourceOfIncomeId",
											"value": "13678573726112266"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "add-document-to-source-of-income",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields - resourceId and subResourceId\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.have.property('resourceId');",
											"    pm.expect(responseData).to.have.property('subResourceId');",
											"});",
											"",
											"",
											"pm.test(\"ResourceId is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  pm.expect(responseData.resourceId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ResourceId should be a non-empty string\");",
											"});",
											"",
											"",
											"pm.test(\"SubResourceId is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.subResourceId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"SubResourceId should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "891ce6c3-6634-4d21-b5c4-d145e99cd03c"
									}
								}
							],
							"id": "97071fed-8053-4059-818d-fbd66d1a43bc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/odirieboh/Downloads/598795F25CCFC450.png"
										},
										{
											"key": "sourceOfIncomeDocumentTypeId",
											"value": "811828204064711",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/source-of-income/:sourceOfIncomeId/add-document-to-source-of-income",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"source-of-income",
										":sourceOfIncomeId",
										"add-document-to-source-of-income"
									],
									"variable": [
										{
											"key": "sourceOfIncomeId",
											"value": "13678573726112266"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete a source of income",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is a JSON object\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "aea18fcd-4906-4a9f-ba38-906935a845a8"
									}
								}
							],
							"id": "a7f1571f-b0ef-44c6-9fb1-7791ee1ef5b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/source-of-income/:sourceOfIncomeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"source-of-income",
										":sourceOfIncomeId"
									],
									"variable": [
										{
											"key": "sourceOfIncomeId",
											"value": "1074865666337198"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get-one-by-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is in JSON format\", function () {",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
											"});",
											"",
											"pm.test(\"Response has maximumAnnualMonetaryIncome property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('maximumAnnualMonetaryIncome');",
											"});",
											"",
											"pm.test(\"Response has clientId property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('clientId');",
											"});",
											"",
											"pm.test(\"Response has active property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('active');",
											"});",
											"",
											"pm.test(\"Response has sourceOfIncomeType property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('sourceOfIncomeType');",
											"});",
											"",
											"pm.test(\"Response has minimumAnnualMonetaryIncome property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('minimumAnnualMonetaryIncome');",
											"});",
											"",
											"pm.test(\"sourceOfIncomeType is an object with specific properties\", function () {",
											"    pm.expect(pm.response.json().sourceOfIncomeType).to.be.an('object').that.has.all.keys('name', 'description', 'active', 'id', 'position', 'mandatory');",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "d4bb9406-3d65-4df1-b7ac-c7d2fd85bf2c"
									}
								}
							],
							"id": "63bc754d-8a66-42d3-a2c6-81c52ab758f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/source-of-income/:sourceOfIncomeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"source-of-income",
										":sourceOfIncomeId"
									],
									"variable": [
										{
											"key": "sourceOfIncomeId",
											"value": "5970042012873464"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "fbc3e3e2-fa67-4462-a2e4-f72283213939"
				},
				{
					"name": "Creating a new client",
					"item": [
						{
							"name": "Create a Client",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
											"pm.globals.set(\"clientEmail\", \"victorsam\"+num+\"@yopmail.com\");",
											"",
											"",
											"pm.globals.set(\"clientPhone\", \"+2348129920\"+num)",
											"",
											"pm.globals.set(\"externalId\", \"QEE10\"+num)"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "71515e71-14b7-42b6-a9e2-ffdd89a59600"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields - resourceId, clientId, and officeId\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.resourceId).to.exist;",
											"    pm.expect(responseData.clientId).to.exist;",
											"    pm.expect(responseData.officeId).to.exist;",
											"});",
											"",
											"",
											"",
											"pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(600);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "8dce3aa5-e220-47f0-8e72-897fc8dfe932"
									}
								}
							],
							"id": "f3ceb98f-1178-4eac-bbb2-18370243b7b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationDate\": \"16 February 2024\",\n  \"active\": false,\n  \"address\": [\n    {\n      \"addressLine1\": \"27 Adebayo Street\",\n      \"addressLine2\": \"Fadeyi\",\n      \"addressLine3\": \"Onipanu\",\n      \"addressTypeId\": 1,\n      \"city\": \"Lagos\",\n      \"country\": \"Nigeria\",\n      \"isActive\": true,\n      \"postalCode\": 100211,\n      \"state\": \"LAGOS\",\n      \"street\": \"Olusola\"\n    }\n  ],\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dateOfBirth\": \"07 April 1996\",\n  \"externalId\": {{externalId}},\n  \"firstname\": \"Victor\",\n  \"lastname\": \"Anu\",\n  \"legalFormId\": 1,\n  \"locale\": \"en\",\n  \"emailAddress\":{{clientEmail}},\n  \"maritalStatusId\": 17,\n  \"mobileNo\": {{clientPhone}},\n  \"officeId\": 1,\n  \"nationality\":\"Nigerian\",\n  \"preferredName\":\"Victor\",\n  \"staffId\": 13560075677916878,\n  \"personalTitleId\": 26,\n  \"clientTypeId\": 8581870069695319,\n  \"professionId\":6578119777392346,\n  \"datatables\":[{\"registeredTableName\":\"bvn_client\",\"data\":{\"locale\":\"en\",\"bvn\":\"12819128181\",\"nin\":\"44312819181\"}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									]
								},
								"description": "Note:\n\n1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).\n\n2.If address is enable(enable-address=true), then additional field called address has to be passed.\n\nMandatory Fields: firstname and lastname OR fullname, officeId, active=true and activationDate OR active=false, if(address enabled) address\n\nOptional Fields: groupId, externalId, accountNo, staffId, mobileNo, savingsProductId, genderId, clientTypeId, clientClassificationId"
							},
							"response": [
								{
									"id": "b441af0a-9ae8-4c5d-a742-974de3e1a5ff",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationDate\": \"04 March 2009\",\n  \"active\": true,\n  \"address\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"datatables\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dateOfBirth\": \"2008-06-24\",\n  \"emailAddress\": \"1\",\n  \"externalId\": \"123\",\n  \"firstname\": \"Client_FirstName\",\n  \"fullname\": \"Client of group\",\n  \"groupId\": 1,\n  \"homePhone\": \"02-05996\",\n  \"lastname\": \"Client_LastName\",\n  \"legalFormId\": 1,\n  \"locale\": \"en\",\n  \"maritalStatusId\": 2,\n  \"mobileNo\": \"+353851239876\",\n  \"mobilePhone2\": \"08080069690\",\n  \"notes\": \"This is a client note\",\n  \"officeId\": 1,\n  \"personalTitleId\": 1,\n  \"profilePictureKey\": \"des\",\n  \"profileSignatureKey\": \"esse eu voluptate laboris\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "98f33245-5631-4736-bec8-ae5ed12316b2"
										}
									],
									"cookie": [],
									"body": "{\n  \"clientId\": 2,\n  \"groupId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 2\n}"
								}
							]
						},
						{
							"name": "existing_external",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (10 - 1 + 1)) + 1;",
											"pm.globals.set(\"clientEmail\", \"victorsam\"+num+\"@yopmail.com\");",
											"",
											"",
											"pm.globals.set(\"clientPhone\", \"+2348129920\"+num)",
											"",
											"pm.globals.set(\"externalId\", \"DE10\"+num)"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "b3a56571-f187-4bc8-ad22-a03c53293a41"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"pm.test(\"Response has application/json content type\", function () {",
											"    pm.expect(pm.response).to.have.header(\"Content-Type\", \"application/json\");",
											"});",
											"",
											"pm.test(\"Response has duplicate entry error\", ()=>{",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.errors[0].developerMessage).contains('already exists') ",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "b37d83ff-59af-41c2-9e02-ef2f30106957"
									}
								}
							],
							"id": "2a36af67-0431-4573-ab4c-50ad6849f85b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationDate\": \"16 February 2024\",\n  \"active\": false,\n  \"address\": [\n    {\n      \"addressLine1\": \"27 Adebayo Street\",\n      \"addressLine2\": \"Fadeyi\",\n      \"addressLine3\": \"Onipanu\",\n      \"addressTypeId\": 1,\n      \"city\": \"Lagos\",\n      \"country\": \"Nigeria\",\n      \"isActive\": true,\n      \"postalCode\": 100211,\n      \"state\": \"LAGOS\",\n      \"street\": \"Olusola\"\n    }\n  ],\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dateOfBirth\": \"07 April 1996\",\n  \"externalId\": \"130Pop\",\n  \"firstname\": \"Victor\",\n  \"lastname\": \"Anu\",\n  \"legalFormId\": 1,\n  \"locale\": \"en\",\n  \"emailAddress\":{{clientEmail}},\n  \"maritalStatusId\": 17,\n  \"mobileNo\": {{clientPhone}},\n  \"officeId\": 1,\n  \"nationality\":\"Nigerian\",\n  \"preferredName\":\"Victor\",\n  \"staffId\": 13560075677916878,\n  \"personalTitleId\": 26,\n  \"clientTypeId\": 8581870069695319,\n  \"professionId\":6578119777392346,\n  \"datatables\":[{\"registeredTableName\":\"bvn_client\",\"data\":{\"locale\":\"en\",\"bvn\":\"09819128181\",\"nin\":\"20312819181\"}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									]
								},
								"description": "Note:\n\n1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).\n\n2.If address is enable(enable-address=true), then additional field called address has to be passed.\n\nMandatory Fields: firstname and lastname OR fullname, officeId, active=true and activationDate OR active=false, if(address enabled) address\n\nOptional Fields: groupId, externalId, accountNo, staffId, mobileNo, savingsProductId, genderId, clientTypeId, clientClassificationId"
							},
							"response": [
								{
									"id": "734232e2-c05b-49c7-b179-da37927a87b7",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationDate\": \"04 March 2009\",\n  \"active\": true,\n  \"address\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"datatables\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dateOfBirth\": \"2008-06-24\",\n  \"emailAddress\": \"1\",\n  \"externalId\": \"123\",\n  \"firstname\": \"Client_FirstName\",\n  \"fullname\": \"Client of group\",\n  \"groupId\": 1,\n  \"homePhone\": \"02-05996\",\n  \"lastname\": \"Client_LastName\",\n  \"legalFormId\": 1,\n  \"locale\": \"en\",\n  \"maritalStatusId\": 2,\n  \"mobileNo\": \"+353851239876\",\n  \"mobilePhone2\": \"08080069690\",\n  \"notes\": \"This is a client note\",\n  \"officeId\": 1,\n  \"personalTitleId\": 1,\n  \"profilePictureKey\": \"des\",\n  \"profileSignatureKey\": \"esse eu voluptate laboris\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "e4359338-79ab-4792-ada9-e2fbba2b4434"
										}
									],
									"cookie": [],
									"body": "{\n  \"clientId\": 2,\n  \"groupId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 2\n}"
								}
							]
						},
						{
							"name": "existing_email_address",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (10 - 1 + 1)) + 1;",
											"pm.globals.set(\"clientEmail\", \"victorsam\"+num+\"@yopmail.com\");",
											"",
											"",
											"pm.globals.set(\"clientPhone\", \"+2348129920\"+num)",
											"",
											"pm.globals.set(\"externalId\", \"DE10\"+num)"
										],
										"type": "text/javascript",
										"id": "d8cd18ae-3381-4965-8753-69f881a75689"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"pm.test(\"Response has application/json content type\", function () {",
											"    pm.expect(pm.response).to.have.header(\"Content-Type\", \"application/json\");",
											"});",
											"",
											"pm.test(\"Response has duplicate entry error\", ()=>{",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData.errors[0].developerMessage).contains('already exists') ",
											"})"
										],
										"type": "text/javascript",
										"id": "35e4d719-05fe-49ee-a661-d2005c72e0ce"
									}
								}
							],
							"id": "50803bfe-5fcb-424c-93c7-a678578b7297",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationDate\": \"16 February 2024\",\n  \"active\": false,\n  \"address\": [\n    {\n      \"addressLine1\": \"27 Adebayo Street\",\n      \"addressLine2\": \"Fadeyi\",\n      \"addressLine3\": \"Onipanu\",\n      \"addressTypeId\": 1,\n      \"city\": \"Lagos\",\n      \"country\": \"Nigeria\",\n      \"isActive\": true,\n      \"postalCode\": 100211,\n      \"state\": \"LAGOS\",\n      \"street\": \"Olusola\"\n    }\n  ],\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dateOfBirth\": \"07 April 1996\",\n  \"externalId\": \"{{externalId}}\",\n  \"firstname\": \"Victor\",\n  \"lastname\": \"Anu\",\n  \"legalFormId\": 1,\n  \"locale\": \"en\",\n  \"emailAddress\":\"akeem@blusalt.netnnn\",\n  \"maritalStatusId\": 17,\n  \"mobileNo\": {{clientPhone}},\n  \"officeId\": 1,\n  \"nationality\":\"Nigerian\",\n  \"preferredName\":\"Victor\",\n  \"staffId\": 13560075677916878,\n  \"personalTitleId\": 26,\n  \"clientTypeId\": 8581870069695319,\n  \"professionId\":6578119777392346,\n  \"datatables\":[{\"registeredTableName\":\"bvn_client\",\"data\":{\"locale\":\"en\",\"bvn\":\"09819128181\",\"nin\":\"20312819181\"}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									]
								},
								"description": "Note:\n\n1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).\n\n2.If address is enable(enable-address=true), then additional field called address has to be passed.\n\nMandatory Fields: firstname and lastname OR fullname, officeId, active=true and activationDate OR active=false, if(address enabled) address\n\nOptional Fields: groupId, externalId, accountNo, staffId, mobileNo, savingsProductId, genderId, clientTypeId, clientClassificationId"
							},
							"response": [
								{
									"id": "a213008a-4fc5-4f65-9a5d-02c4b0afc2e7",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationDate\": \"04 March 2009\",\n  \"active\": true,\n  \"address\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"datatables\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dateOfBirth\": \"2008-06-24\",\n  \"emailAddress\": \"1\",\n  \"externalId\": \"123\",\n  \"firstname\": \"Client_FirstName\",\n  \"fullname\": \"Client of group\",\n  \"groupId\": 1,\n  \"homePhone\": \"02-05996\",\n  \"lastname\": \"Client_LastName\",\n  \"legalFormId\": 1,\n  \"locale\": \"en\",\n  \"maritalStatusId\": 2,\n  \"mobileNo\": \"+353851239876\",\n  \"mobilePhone2\": \"08080069690\",\n  \"notes\": \"This is a client note\",\n  \"officeId\": 1,\n  \"personalTitleId\": 1,\n  \"profilePictureKey\": \"des\",\n  \"profileSignatureKey\": \"esse eu voluptate laboris\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "186f3040-c2b5-412d-a86a-6c4617e0c7e7"
										}
									],
									"cookie": [],
									"body": "{\n  \"clientId\": 2,\n  \"groupId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 2\n}"
								}
							]
						}
					],
					"id": "af707c53-ea58-45bf-b397-aa1a1e100be2"
				},
				{
					"name": "column settings",
					"item": [
						{
							"name": "Get All Configured Entities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "ec783d9e-35ab-4501-8379-ccbd5655becd"
									}
								}
							],
							"id": "adaafd02-5700-4c27-8012-99d98eef13c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/column-settings/configured/CLIENT",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"column-settings",
										"configured",
										"CLIENT"
									],
									"query": [
										{
											"key": "sqlSearch",
											"value": "anim reprehenderit ut",
											"description": "sqlSearch",
											"disabled": true
										},
										{
											"key": "officeId",
											"value": "6608969",
											"description": "officeId",
											"disabled": true
										},
										{
											"key": "externalId",
											"value": "anim reprehenderit ut",
											"description": "externalId",
											"disabled": true
										},
										{
											"key": "displayName",
											"value": "anim reprehenderit ut",
											"description": "displayName",
											"disabled": true
										},
										{
											"key": "firstName",
											"value": "anim reprehenderit ut",
											"description": "firstName",
											"disabled": true
										},
										{
											"key": "lastName",
											"value": "anim reprehenderit ut",
											"description": "lastName",
											"disabled": true
										},
										{
											"key": "status",
											"value": "anim reprehenderit ut",
											"description": "status",
											"disabled": true
										},
										{
											"key": "underHierarchy",
											"value": "anim reprehenderit ut",
											"description": "underHierarchy",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "-44553522",
											"description": "offset",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-44553522",
											"description": "limit",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "anim reprehenderit ut",
											"description": "orderBy",
											"disabled": true
										},
										{
											"key": "sortOrder",
											"value": "anim reprehenderit ut",
											"description": "sortOrder",
											"disabled": true
										},
										{
											"key": "orphansOnly",
											"value": "true",
											"description": "orphansOnly",
											"disabled": true
										}
									]
								},
								"description": "The list capability of clients can support pagination and sorting.\n\nExample Requests:\n\nclients\n\nclients?fields=displayName,officeName,timeline\n\nclients?offset=10&limit=50\n\nclients?orderBy=displayName&sortOrder=DESC"
							},
							"response": [
								{
									"id": "d89bf3b4-45bc-4bd5-9435-65a7bed5461d",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients?sqlSearch=anim reprehenderit ut&officeId=6608969&externalId=anim reprehenderit ut&displayName=anim reprehenderit ut&firstName=anim reprehenderit ut&lastName=anim reprehenderit ut&status=anim reprehenderit ut&underHierarchy=anim reprehenderit ut&offset=-44553522&limit=-44553522&orderBy=anim reprehenderit ut&sortOrder=anim reprehenderit ut&orphansOnly=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients"
											],
											"query": [
												{
													"key": "sqlSearch",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "officeId",
													"value": "6608969"
												},
												{
													"key": "externalId",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "displayName",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "firstName",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "lastName",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "status",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "underHierarchy",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "offset",
													"value": "-44553522"
												},
												{
													"key": "limit",
													"value": "-44553522"
												},
												{
													"key": "orderBy",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "sortOrder",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "orphansOnly",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "6aa278f5-d9e9-40c8-9fd6-a7f9e0d80587"
										}
									],
									"cookie": [],
									"body": "{\n  \"pageItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalFilteredRecords\": 2\n}"
								}
							]
						},
						{
							"name": "Configured Column Entities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "45ef3504-5d77-415a-9e2f-8820bc5ae28b"
									}
								}
							],
							"id": "7c746c66-c936-4bbb-8d9d-c46a517ff956",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"firstname\",\n    \"entityType\":\"CLIENT\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/column-settings/configured/CLIENT",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"column-settings",
										"configured",
										"CLIENT"
									],
									"query": [
										{
											"key": "sqlSearch",
											"value": "anim reprehenderit ut",
											"description": "sqlSearch",
											"disabled": true
										},
										{
											"key": "officeId",
											"value": "6608969",
											"description": "officeId",
											"disabled": true
										},
										{
											"key": "externalId",
											"value": "anim reprehenderit ut",
											"description": "externalId",
											"disabled": true
										},
										{
											"key": "displayName",
											"value": "anim reprehenderit ut",
											"description": "displayName",
											"disabled": true
										},
										{
											"key": "firstName",
											"value": "anim reprehenderit ut",
											"description": "firstName",
											"disabled": true
										},
										{
											"key": "lastName",
											"value": "anim reprehenderit ut",
											"description": "lastName",
											"disabled": true
										},
										{
											"key": "status",
											"value": "anim reprehenderit ut",
											"description": "status",
											"disabled": true
										},
										{
											"key": "underHierarchy",
											"value": "anim reprehenderit ut",
											"description": "underHierarchy",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "-44553522",
											"description": "offset",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-44553522",
											"description": "limit",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "anim reprehenderit ut",
											"description": "orderBy",
											"disabled": true
										},
										{
											"key": "sortOrder",
											"value": "anim reprehenderit ut",
											"description": "sortOrder",
											"disabled": true
										},
										{
											"key": "orphansOnly",
											"value": "true",
											"description": "orphansOnly",
											"disabled": true
										}
									]
								},
								"description": "The list capability of clients can support pagination and sorting.\n\nExample Requests:\n\nclients\n\nclients?fields=displayName,officeName,timeline\n\nclients?offset=10&limit=50\n\nclients?orderBy=displayName&sortOrder=DESC"
							},
							"response": [
								{
									"id": "3a10d17c-9b65-4c16-93a7-04c9125b46ac",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients?sqlSearch=anim reprehenderit ut&officeId=6608969&externalId=anim reprehenderit ut&displayName=anim reprehenderit ut&firstName=anim reprehenderit ut&lastName=anim reprehenderit ut&status=anim reprehenderit ut&underHierarchy=anim reprehenderit ut&offset=-44553522&limit=-44553522&orderBy=anim reprehenderit ut&sortOrder=anim reprehenderit ut&orphansOnly=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients"
											],
											"query": [
												{
													"key": "sqlSearch",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "officeId",
													"value": "6608969"
												},
												{
													"key": "externalId",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "displayName",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "firstName",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "lastName",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "status",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "underHierarchy",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "offset",
													"value": "-44553522"
												},
												{
													"key": "limit",
													"value": "-44553522"
												},
												{
													"key": "orderBy",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "sortOrder",
													"value": "anim reprehenderit ut"
												},
												{
													"key": "orphansOnly",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "73269420-8fa2-49d8-816f-a91afc88af18"
										}
									],
									"cookie": [],
									"body": "{\n  \"pageItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalFilteredRecords\": 2\n}"
								}
							]
						}
					],
					"id": "4299b931-bf42-4f93-91d9-099e4cd0d917"
				},
				{
					"name": "List Clients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const pageItemsResponse = pm.response.json().pageItems;",
									"",
									"// Test for response status code",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for the existence of the totalFilteredRecords property",
									"pm.test(\"Response has totalFilteredRecords property\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('totalFilteredRecords');",
									"});",
									"",
									"// Test for the presence of pageItems array",
									"pm.test(\"Response has pageItems array\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('pageItems').that.is.an('array');",
									"",
									"});",
									"",
									"pm.test(\"Verify response properties exist\", function () {",
									"    pageItemsResponse.forEach(responseJson => {",
									"        pm.expect(responseJson).to.have.property('officeName');",
									"    pm.expect(responseJson).to.have.property('notes');",
									"    pm.expect(responseJson).to.have.property('dateFormat');",
									"    pm.expect(responseJson).to.have.property('clientLegalFormOptions');",
									"    pm.expect(responseJson).to.have.property('mobilePhone2');",
									"    pm.expect(responseJson).to.have.property('companyName');",
									"    pm.expect(responseJson).to.have.property('savingsProductId');",
									"    pm.expect(responseJson).to.have.property('sourceOfIncomeData');",
									"    pm.expect(responseJson).to.have.property('threadId');",
									"    pm.expect(responseJson).to.have.property('emailAddress');",
									"    pm.expect(responseJson).to.have.property('clientType');",
									"    pm.expect(responseJson.clientType).to.have.property('id');",
									"    pm.expect(responseJson.clientType).to.have.property('name');",
									"    pm.expect(responseJson.clientType).to.have.property('position');",
									"    pm.expect(responseJson.clientType).to.have.property('description');",
									"    pm.expect(responseJson.clientType).to.have.property('active');",
									"    pm.expect(responseJson.clientType).to.have.property('mandatory');",
									"    pm.expect(responseJson).to.have.property('whatsappId');",
									"    pm.expect(responseJson).to.have.property('officeId');",
									"    pm.expect(responseJson).to.have.property('tiktokId');",
									"    pm.expect(responseJson).to.have.property('familyMemberOptions');",
									"    pm.expect(responseJson).to.have.property('id');",
									"    pm.expect(responseJson).to.have.property('submittedOnDate');",
									"    pm.expect(responseJson).to.have.property('bvn');",
									"    pm.expect(responseJson).to.have.property('preferredName');",
									"    pm.expect(responseJson).to.have.property('profession');",
									"    pm.expect(responseJson).to.have.property('officeOptions');",
									"    pm.expect(responseJson).to.have.property('imageId');",
									"    pm.expect(responseJson).to.have.property('personalTitleId');",
									"    pm.expect(responseJson).to.have.property('isStaff');",
									"    pm.expect(responseJson).to.have.property('alternatePhoneNumber');",
									"    pm.expect(responseJson).to.have.property('homePhone');",
									"    pm.expect(responseJson).to.have.property('facebookId');",
									"    pm.expect(responseJson).to.have.property('internalControlSettingData');",
									"    pm.expect(responseJson.internalControlSettingData).to.have.property('maximumConcurrentLoanAccountCount');",
									"    pm.expect(responseJson.internalControlSettingData).to.have.property('maximumConcurrentGroupCount');",
									"    pm.expect(responseJson.internalControlSettingData).to.have.property('maximumConcurrentSavingsAccountCount');",
									"    pm.expect(responseJson.internalControlSettingData).to.have.property('creditArrangementEnabled');",
									"    pm.expect(responseJson).to.have.property('active');",
									"    pm.expect(responseJson).to.have.property('clientCollateralManagements');",
									"    pm.expect(responseJson).to.have.property('legalFormId');",
									"    pm.expect(responseJson).to.have.property('subStatus');",
									"    pm.expect(responseJson.subStatus).to.have.property('id');",
									"    pm.expect(responseJson.subStatus).to.have.property('name');",
									"    pm.expect(responseJson.subStatus).to.have.property('position');",
									"    pm.expect(responseJson.subStatus).to.have.property('description');",
									"    pm.expect(responseJson.subStatus).to.have.property('active');",
									"    pm.expect(responseJson.subStatus).to.have.property('mandatory');",
									"    pm.expect(responseJson).to.have.property('clientNonPersonConstitutionOptions');",
									"    pm.expect(responseJson).to.have.property('lastname');",
									"    pm.expect(responseJson).to.have.property('isAddressEnabled');",
									"    pm.expect(responseJson).to.have.property('maritalStatusId');",
									"    pm.expect(responseJson).to.have.property('profilePictureKey');",
									"    pm.expect(responseJson).to.have.property('numberOfChildren');",
									"    pm.expect(responseJson).to.have.property('nationality');",
									"    pm.expect(responseJson).to.have.property('clientTypeId');",
									"    pm.expect(responseJson).to.have.property('matricNumber');",
									"    // // pm.expect(responseJson).to.have.property('rEG_NO');",
									"    pm.expect(responseJson).to.have.property('activationDate');",
									"    pm.expect(responseJson).to.have.property('transferToOfficeName');",
									"    pm.expect(responseJson).to.have.property('savingProductOptions');",
									"    pm.expect(responseJson).to.have.property('maritalStatus');",
									"    pm.expect(responseJson).to.have.property('status');",
									"    pm.expect(responseJson.status).to.have.property('id');",
									"    pm.expect(responseJson.status).to.have.property('code');",
									"    pm.expect(responseJson.status).to.have.property('value');",
									"    pm.expect(responseJson).to.have.property('firstname');",
									"    pm.expect(responseJson).to.have.property('gender');",
									"    pm.expect(responseJson.gender).to.have.property('id');",
									"    pm.expect(responseJson.gender).to.have.property('name');",
									"    pm.expect(responseJson.gender).to.have.property('position');",
									"    pm.expect(responseJson.gender).to.have.property('description');",
									"    pm.expect(responseJson.gender).to.have.property('active');",
									"    pm.expect(responseJson.gender).to.have.property('mandatory');",
									"    pm.expect(responseJson).to.have.property('displayName');",
									"    // pm.expect(responseJson).to.have.property('oCCUPATION');",
									"    pm.expect(responseJson).to.have.property('locale');",
									"    pm.expect(responseJson).to.have.property('dataTableEntries');",
									"    pm.expect(responseJson).to.have.property('twitterId');",
									"    pm.expect(responseJson).to.have.property('transferToOfficeId');",
									"    pm.expect(responseJson).to.have.property('imagePresent');",
									"    pm.expect(responseJson).to.have.property('savingsProductName');",
									"    pm.expect(responseJson).to.have.property('companyEmail');",
									"    pm.expect(responseJson).to.have.property('datatables');",
									"    pm.expect(responseJson).to.have.property('customerId');",
									"    pm.expect(responseJson).to.have.property('staffName');",
									"    pm.expect(responseJson).to.have.property('genderOptions');",
									"    pm.expect(responseJson).to.have.property('clientClassificationId');",
									"    pm.expect(responseJson).to.have.property('companyPhoneNumber');",
									"    // // pm.expect(responseJson).to.have.property('sALARY');",
									"    pm.expect(responseJson).to.have.property('politicallyExposed');",
									"    pm.expect(responseJson).to.have.property('staffOptions');",
									"    pm.expect(responseJson).to.have.property('address');",
									"    pm.expect(responseJson).to.have.property('genderId');",
									"    pm.expect(responseJson).to.have.property('customerRegion');",
									"    pm.expect(responseJson).to.have.property('externalId');",
									"    pm.expect(responseJson).to.have.property('middlename');",
									"    pm.expect(responseJson).to.have.property('groups');",
									"    pm.expect(responseJson).to.have.property('dateOfBirth');",
									"    pm.expect(responseJson).to.have.property('clientClassification');",
									"    pm.expect(responseJson.clientClassification).to.have.property('id');",
									"    pm.expect(responseJson.clientClassification).to.have.property('name');",
									"    pm.expect(responseJson.clientClassification).to.have.property('position');",
									"    pm.expect(responseJson.clientClassification).to.have.property('description');",
									"    pm.expect(responseJson.clientClassification).to.have.property('active');",
									"    pm.expect(responseJson.clientClassification).to.have.property('mandatory');",
									"    pm.expect(responseJson).to.have.property('savingsAccountId');",
									"    pm.expect(responseJson).to.have.property('mobileNo');",
									"    pm.expect(responseJson).to.have.property('postHeld');",
									"    pm.expect(responseJson).to.have.property('legalForm');",
									"    // pm.expect(responseJson.legalForm).to.have.property('id');",
									"    // pm.expect(responseJson.legalForm).to.have.property('code');",
									"    // pm.expect(responseJson.legalForm).to.have.property('value');",
									"    pm.expect(responseJson).to.have.property('narrations');",
									"    pm.expect(responseJson).to.have.property('savingAccountOptions');",
									"    pm.expect(responseJson).to.have.property('profileSignatureKey');",
									"    pm.expect(responseJson).to.have.property('clientTypeOptions');",
									"    pm.expect(responseJson).to.have.property('clientNonPersonDetails');",
									"    pm.expect(responseJson.clientNonPersonDetails).to.have.property('constitution');",
									"    pm.expect(responseJson.clientNonPersonDetails.constitution).to.have.property('id');",
									"    pm.expect(responseJson.clientNonPersonDetails.constitution).to.have.property('name');",
									"    pm.expect(responseJson.clientNonPersonDetails.constitution).to.have.property('position');",
									"    pm.expect(responseJson.clientNonPersonDetails.constitution).to.have.property('description');",
									"    pm.expect(responseJson.clientNonPersonDetails.constitution).to.have.property('active');",
									"    pm.expect(responseJson.clientNonPersonDetails.constitution).to.have.property('mandatory');",
									"    pm.expect(responseJson.clientNonPersonDetails).to.have.property('incorpNumber');",
									"    pm.expect(responseJson.clientNonPersonDetails).to.have.property('incorpValidityTillDate');",
									"    pm.expect(responseJson.clientNonPersonDetails).to.have.property('mainBusinessLine');",
									"    pm.expect(responseJson.clientNonPersonDetails.mainBusinessLine).to.have.property('id');",
									"    pm.expect(responseJson.clientNonPersonDetails.mainBusinessLine).to.have.property('name');",
									"    pm.expect(responseJson.clientNonPersonDetails.mainBusinessLine).to.have.property('position');",
									"    pm.expect(responseJson.clientNonPersonDetails.mainBusinessLine).to.have.property('description');",
									"    pm.expect(responseJson.clientNonPersonDetails.mainBusinessLine).to.have.property('active');",
									"    pm.expect(responseJson.clientNonPersonDetails.mainBusinessLine).to.have.property('mandatory');",
									"    pm.expect(responseJson.clientNonPersonDetails).to.have.property('remarks');",
									"    pm.expect(responseJson.clientNonPersonDetails).to.have.property('mainBusinessLineId');",
									"    pm.expect(responseJson.clientNonPersonDetails).to.have.property('constitutionId')",
									"    });",
									"});",
									"",
									"//Test that head office is present",
									"pm.test(\"Response has head office\", ()=>{",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.pageItems[0].officeName).eqls('Head Office') ",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "074f6baf-f29a-417b-a5f4-5933f138ab1d"
							}
						}
					],
					"id": "70419ebc-2330-42db-9f2e-68f62635410c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Fineract-Platform-TenantId",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients"
							],
							"query": [
								{
									"key": "sqlSearch",
									"value": "anim reprehenderit ut",
									"description": "sqlSearch",
									"disabled": true
								},
								{
									"key": "officeId",
									"value": "6608969",
									"description": "officeId",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "anim reprehenderit ut",
									"description": "externalId",
									"disabled": true
								},
								{
									"key": "displayName",
									"value": "anim reprehenderit ut",
									"description": "displayName",
									"disabled": true
								},
								{
									"key": "firstName",
									"value": "anim reprehenderit ut",
									"description": "firstName",
									"disabled": true
								},
								{
									"key": "lastName",
									"value": "anim reprehenderit ut",
									"description": "lastName",
									"disabled": true
								},
								{
									"key": "status",
									"value": "anim reprehenderit ut",
									"description": "status",
									"disabled": true
								},
								{
									"key": "underHierarchy",
									"value": "anim reprehenderit ut",
									"description": "underHierarchy",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "-44553522",
									"description": "offset",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "-44553522",
									"description": "limit",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "anim reprehenderit ut",
									"description": "orderBy",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "anim reprehenderit ut",
									"description": "sortOrder",
									"disabled": true
								},
								{
									"key": "orphansOnly",
									"value": "true",
									"description": "orphansOnly",
									"disabled": true
								}
							]
						},
						"description": "The list capability of clients can support pagination and sorting.\n\nExample Requests:\n\nclients\n\nclients?fields=displayName,officeName,timeline\n\nclients?offset=10&limit=50\n\nclients?orderBy=displayName&sortOrder=DESC"
					},
					"response": [
						{
							"id": "0cce31f8-1eb8-447b-89c5-985657a31a37",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients?sqlSearch=anim reprehenderit ut&officeId=6608969&externalId=anim reprehenderit ut&displayName=anim reprehenderit ut&firstName=anim reprehenderit ut&lastName=anim reprehenderit ut&status=anim reprehenderit ut&underHierarchy=anim reprehenderit ut&offset=-44553522&limit=-44553522&orderBy=anim reprehenderit ut&sortOrder=anim reprehenderit ut&orphansOnly=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"query": [
										{
											"key": "sqlSearch",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "officeId",
											"value": "6608969"
										},
										{
											"key": "externalId",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "displayName",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "firstName",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "lastName",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "status",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "underHierarchy",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "offset",
											"value": "-44553522"
										},
										{
											"key": "limit",
											"value": "-44553522"
										},
										{
											"key": "orderBy",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "sortOrder",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "orphansOnly",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "3746f383-3e02-4e07-a004-52a653efd264"
								}
							],
							"cookie": [],
							"body": "{\n  \"pageItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalFilteredRecords\": 2\n}"
						}
					]
				},
				{
					"name": "Retrieve a Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is a JSON object with specific properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('officeName');",
									"    pm.expect(jsonData).to.have.property('clientCollateralManagements');",
									"    pm.expect(jsonData).to.have.property('emailAddress');",
									"    pm.expect(jsonData).to.have.property('clientType');",
									"    pm.expect(jsonData).to.have.property('id');",
									"     pm.expect(jsonData.clientType).to.have.property('name');",
									"    pm.expect(jsonData.clientType).to.have.property('position');",
									"    pm.expect(jsonData.clientType).to.have.property('description');",
									"    pm.expect(jsonData.clientType).to.have.property('active');",
									"    pm.expect(jsonData.clientType).to.have.property('mandatory');",
									"    pm.expect(jsonData).to.have.property('whatsappId');",
									"    pm.expect(jsonData).to.have.property('officeId');",
									"    pm.expect(jsonData).to.have.property('tiktokId');",
									"    pm.expect(jsonData).to.have.property('familyMemberOptions');",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('submittedOnDate');",
									"    pm.expect(jsonData).to.have.property('bvn');",
									"    pm.expect(jsonData).to.have.property('preferredName');",
									"    pm.expect(jsonData).to.have.property('profession');",
									"    pm.expect(jsonData).to.have.property('officeOptions');",
									"    pm.expect(jsonData).to.have.property('imageId');",
									"    pm.expect(jsonData).to.have.property('personalTitleId');",
									"    pm.expect(jsonData).to.have.property('isStaff');",
									"    pm.expect(jsonData).to.have.property('alternatePhoneNumber');",
									"    pm.expect(jsonData).to.have.property('homePhone');",
									"    pm.expect(jsonData).to.have.property('facebookId');",
									"    pm.expect(jsonData).to.have.property('internalControlSettingData');",
									"    pm.expect(jsonData.internalControlSettingData).to.have.property('maximumConcurrentLoanAccountCount');",
									"    pm.expect(jsonData.internalControlSettingData).to.have.property('maximumConcurrentGroupCount');",
									"    pm.expect(jsonData.internalControlSettingData).to.have.property('maximumConcurrentSavingsAccountCount');",
									"    pm.expect(jsonData.internalControlSettingData).to.have.property('creditArrangementEnabled');",
									"    pm.expect(jsonData).to.have.property('active');",
									"    pm.expect(jsonData).to.have.property('clientCollateralManagements');",
									"    pm.expect(jsonData).to.have.property('legalFormId');",
									"    pm.expect(jsonData).to.have.property('subStatus');",
									"    pm.expect(jsonData.subStatus).to.have.property('id');",
									"    pm.expect(jsonData.subStatus).to.have.property('name');",
									"    pm.expect(jsonData.subStatus).to.have.property('position');",
									"    pm.expect(jsonData.subStatus).to.have.property('description');",
									"    pm.expect(jsonData.subStatus).to.have.property('active');",
									"    pm.expect(jsonData.subStatus).to.have.property('mandatory');",
									"    pm.expect(jsonData).to.have.property('clientNonPersonConstitutionOptions');",
									"    pm.expect(jsonData).to.have.property('lastname');",
									"    pm.expect(jsonData).to.have.property('isAddressEnabled');",
									"    pm.expect(jsonData).to.have.property('maritalStatusId');",
									"    pm.expect(jsonData).to.have.property('profilePictureKey');",
									"    pm.expect(jsonData).to.have.property('numberOfChildren');",
									"    pm.expect(jsonData).to.have.property('nationality');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "abfab2f6-0262-4200-9973-05c3f43a386c"
							}
						}
					],
					"id": "2c62f204-6047-4d19-9bca-1b7b715a4ca7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clients/:clientId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients",
								":clientId"
							],
							"variable": [
								{
									"key": "clientId",
									"value": "13391932459983781",
									"description": "(Required) clientId"
								}
							]
						},
						"description": "Example Requests:\n\nclients/1\n\n\nclients/1?template=true\n\n\nclients/1?fields=id,displayName,officeName"
					},
					"response": [
						{
							"id": "e5d63ddc-f060-4173-b3a4-cebe47ed6be2",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/client-documents/:clientId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"client-documents",
										":clientId"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6608969",
											"description": "(Required) clientId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "3b01115c-c5b5-4b74-b2b6-ee050b37246e"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountNo\": \"000000027\",\n  \"activationDate\": \"2008-08-10\",\n  \"active\": true,\n  \"displayName\": \"savings test\",\n  \"emailAddress\": \"1\",\n  \"firstname\": \"savings\",\n  \"id\": 27,\n  \"lastname\": \"test\",\n  \"officeId\": 1,\n  \"officeName\": \"Head Office\",\n  \"personalTitleId\": 1,\n  \"savingsProductId\": 4,\n  \"savingsProductName\": \"account overdraft\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeline\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Group Internal Control",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
									"pm.globals.set(\"accountCount\", num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "84b15ea9-bbfb-4f35-a82b-cfb3d6ed5c9b"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is a valid JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response contains resourceId, clientId, and changes properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('resourceId');",
									"    pm.expect(jsonData).to.have.property('clientId');",
									"    pm.expect(jsonData).to.have.property('changes');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "87afa3e4-393e-409b-975d-d71e9fdfe210"
							}
						}
					],
					"id": "956994e1-2619-4245-b716-ce2d4354add5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Fineract-Platform-TenantId",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  //\"creditArrangementEnabled\": true,\n  //\"maximumConcurrentSavingsAccountCount\":50,\n  \"maximumConcurrentGroupCount\":{{accountCount}},\n  \"locale\": \"en\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/:groupId/update-internal-control",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":groupId",
								"update-internal-control"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "6738274059297165"
								}
							]
						},
						"description": "Note:\n\n1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).\n\n2.If address is enable(enable-address=true), then additional field called address has to be passed.\n\nMandatory Fields: firstname and lastname OR fullname, officeId, active=true and activationDate OR active=false, if(address enabled) address\n\nOptional Fields: groupId, externalId, accountNo, staffId, mobileNo, savingsProductId, genderId, clientTypeId, clientClassificationId"
					},
					"response": [
						{
							"id": "6023be8a-119a-4294-a10f-1f19c141ef7d",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationDate\": \"04 March 2009\",\n  \"active\": true,\n  \"address\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"datatables\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dateOfBirth\": \"2008-06-24\",\n  \"emailAddress\": \"1\",\n  \"externalId\": \"123\",\n  \"firstname\": \"Client_FirstName\",\n  \"fullname\": \"Client of group\",\n  \"groupId\": 1,\n  \"homePhone\": \"02-05996\",\n  \"lastname\": \"Client_LastName\",\n  \"legalFormId\": 1,\n  \"locale\": \"en\",\n  \"maritalStatusId\": 2,\n  \"mobileNo\": \"+353851239876\",\n  \"mobilePhone2\": \"08080069690\",\n  \"notes\": \"This is a client note\",\n  \"officeId\": 1,\n  \"personalTitleId\": 1,\n  \"profilePictureKey\": \"des\",\n  \"profileSignatureKey\": \"esse eu voluptate laboris\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "899772d3-f843-4a90-bc4f-b582d9cab7ff"
								}
							],
							"cookie": [],
							"body": "{\n  \"clientId\": 2,\n  \"groupId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 2\n}"
						}
					]
				},
				{
					"name": "Client Internal Control",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
									"pm.globals.set(\"accountCount\", num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "ceedfd86-29a5-4ad0-9bbf-d0825b7b8b89"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is a JSON object\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"pm.test(\"Response has resourceId, clientId, and changes properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('resourceId');",
									"    pm.expect(jsonData).to.have.property('clientId');",
									"    pm.expect(jsonData).to.have.property('changes');",
									"});",
									"",
									"pm.test(\"Changes object has maximumConcurrentGroupCount and maximumConcurrentSavingsAccountCount properties\", function () {",
									"    var changes = pm.response.json().changes;",
									"    pm.expect(changes).to.have.property('maximumConcurrentGroupCount');",
									"    pm.expect(changes).to.have.property('maximumConcurrentSavingsAccountCount');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "4bd3dde8-3615-4ec8-81c2-98431f906f14"
							}
						}
					],
					"id": "e6a16e78-1b7b-4918-baa3-92409155a6a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Fineract-Platform-TenantId",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"maximumConcurrentSavingsAccountCount\": {{accountCount}},\n  \"creditArrangementEnabled\":true,\n   \"maximumConcurrentGroupCount\":{{accountCount}},\n  \"locale\": \"en\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clients/:clientId/update-internal-control",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients",
								":clientId",
								"update-internal-control"
							],
							"variable": [
								{
									"key": "clientId",
									"value": "4402935164613998"
								}
							]
						},
						"description": "Note:\n\n1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).\n\n2.If address is enable(enable-address=true), then additional field called address has to be passed.\n\nMandatory Fields: firstname and lastname OR fullname, officeId, active=true and activationDate OR active=false, if(address enabled) address\n\nOptional Fields: groupId, externalId, accountNo, staffId, mobileNo, savingsProductId, genderId, clientTypeId, clientClassificationId"
					},
					"response": [
						{
							"id": "f7ec0ca6-91f0-444f-900e-d9ad2f7a8f96",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationDate\": \"04 March 2009\",\n  \"active\": true,\n  \"address\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"datatables\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dateOfBirth\": \"2008-06-24\",\n  \"emailAddress\": \"1\",\n  \"externalId\": \"123\",\n  \"firstname\": \"Client_FirstName\",\n  \"fullname\": \"Client of group\",\n  \"groupId\": 1,\n  \"homePhone\": \"02-05996\",\n  \"lastname\": \"Client_LastName\",\n  \"legalFormId\": 1,\n  \"locale\": \"en\",\n  \"maritalStatusId\": 2,\n  \"mobileNo\": \"+353851239876\",\n  \"mobilePhone2\": \"08080069690\",\n  \"notes\": \"This is a client note\",\n  \"officeId\": 1,\n  \"personalTitleId\": 1,\n  \"profilePictureKey\": \"des\",\n  \"profileSignatureKey\": \"esse eu voluptate laboris\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "27b7255f-e623-444f-8bb1-7e9a5ae4530c"
								}
							],
							"cookie": [],
							"body": "{\n  \"clientId\": 2,\n  \"groupId\": 1,\n  \"officeId\": 1,\n  \"resourceId\": 2\n}"
						}
					]
				},
				{
					"name": "get Client Template",
					"id": "0eca569a-8f02-4d78-9cb1-f235abb22e89",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.ms-excel"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clients/downloadtemplate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients",
								"downloadtemplate"
							],
							"query": [
								{
									"key": "legalFormType",
									"value": "anim reprehenderit ut",
									"disabled": true
								},
								{
									"key": "officeId",
									"value": "6608969",
									"disabled": true
								},
								{
									"key": "staffId",
									"value": "6608969",
									"disabled": true
								},
								{
									"key": "dateFormat",
									"value": "anim reprehenderit ut",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "cd20318a-ab7d-4d67-9ce9-bb187964bcef",
							"name": "default response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients/downloadtemplate?legalFormType=anim reprehenderit ut&officeId=6608969&staffId=6608969&dateFormat=anim reprehenderit ut",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										"downloadtemplate"
									],
									"query": [
										{
											"key": "legalFormType",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "officeId",
											"value": "6608969"
										},
										{
											"key": "staffId",
											"value": "6608969"
										},
										{
											"key": "dateFormat",
											"value": "anim reprehenderit ut"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.ms-excel",
									"uuid": "356fd69f-e902-4972-8336-5aba9c354149"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get KYC Report for Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.include.all.keys(",
									"        'kycCompleted',",
									"        'type',",
									"        'client',",
									"        'bvnSupplied',",
									"        'completeBioDataSupplied',",
									"        'nationalIdSupplied',",
									"        'utilBillSupplied'",
									"    );",
									"});",
									"",
									"",
									"pm.test(\"Type is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.type).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Type should be a non-empty string\");",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "9cb08292-04b0-4971-befb-81df314cb1ad"
							}
						}
					],
					"id": "3a8a5e8c-5d27-406e-b251-ad8581cedeef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clients/get-report-for-client/:clientId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients",
								"get-report-for-client",
								":clientId"
							],
							"variable": [
								{
									"key": "clientId",
									"value": "25862431621186",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns KYC Report Data for client\n\n"
					},
					"response": [
						{
							"id": "f93828a4-88fd-4726-817b-163b43dfd2d1",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients/get-report-for-client/:clientId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										"get-report-for-client",
										":clientId"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "6608969",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "dc287355-1f86-4eec-ac1f-1526c2582007"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"bvnSupplied\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"client\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"completeBioDataSupplied\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"kycCompleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nationalIdSupplied\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"utilBillSupplied\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"bvnSupplied\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"client\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"completeBioDataSupplied\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"kycCompleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nationalIdSupplied\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"utilBillSupplied\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Retrieve Client Details Template",
					"id": "d4f22183-8542-47aa-8151-b0824c711024",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clients/template?officeId=6608969&commandParam=anim reprehenderit ut&staffInSelectedOfficeOnly=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients",
								"template"
							],
							"query": [
								{
									"key": "officeId",
									"value": "6608969",
									"description": "officeId"
								},
								{
									"key": "commandParam",
									"value": "anim reprehenderit ut",
									"description": "commandParam"
								},
								{
									"key": "staffInSelectedOfficeOnly",
									"value": "false",
									"description": "staffInSelectedOfficeOnly"
								}
							]
						},
						"description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\n\nExample Request:\n\nclients/template"
					},
					"response": [
						{
							"id": "e1b60133-70af-40d4-b8fe-d69975671b12",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients/template?officeId=6608969&commandParam=anim reprehenderit ut&staffInSelectedOfficeOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										"template"
									],
									"query": [
										{
											"key": "officeId",
											"value": "6608969"
										},
										{
											"key": "commandParam",
											"value": "anim reprehenderit ut"
										},
										{
											"key": "staffInSelectedOfficeOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "198db116-6d2c-4723-b981-4f37f526ed90"
								}
							],
							"cookie": [],
							"body": "{\n  \"activationDate\": \"1981-02-13\",\n  \"datatables\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"officeId\": 1,\n  \"officeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"savingProductOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"staffOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "post Client Template",
					"id": "ed513f16-9602-489e-99a6-eb3e5ac5bc75",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "dateFormat",
									"value": "sed non do sit",
									"type": "text"
								},
								{
									"key": "locale",
									"value": "ut commodo sunt in",
									"type": "text"
								},
								{
									"key": "uploadedInputStream",
									"type": "file",
									"value": null
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/clients/uploadtemplate?legalFormType=anim reprehenderit ut",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients",
								"uploadtemplate"
							],
							"query": [
								{
									"key": "legalFormType",
									"value": "anim reprehenderit ut"
								}
							]
						}
					},
					"response": [
						{
							"id": "883e4e11-9939-4515-9118-7a59e8ddad29",
							"name": "default response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dateFormat",
											"value": "sed non do sit",
											"type": "text"
										},
										{
											"key": "locale",
											"value": "ut commodo sunt in",
											"type": "text"
										},
										{
											"key": "uploadedInputStream",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/clients/uploadtemplate?legalFormType=anim reprehenderit ut",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										"uploadtemplate"
									],
									"query": [
										{
											"key": "legalFormType",
											"value": "anim reprehenderit ut"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*",
									"uuid": "0356a0fa-0706-4321-b224-6f6b7a3ac05e"
								}
							],
							"cookie": [],
							"body": "anim reprehenderit ut"
						}
					]
				}
			],
			"id": "088df4c7-51fc-4953-af19-e5e923dfd46d"
		},
		{
			"name": "configurations",
			"item": [
				{
					"name": "{configId}",
					"item": [
						{
							"name": "Retrieve Global Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();",
											"",
											"pm.test(\"Verify response properties\", function () {",
											"    pm.expect(responseJson).to.be.an('object');",
											"    ",
											"    pm.expect(responseJson).to.have.property('trapDoor').that.is.an('boolean');",
											"    pm.expect(responseJson).to.have.property('name').that.is.a('string');",
											"    pm.expect(responseJson).to.have.property('id').that.is.a('string');",
											"    pm.expect(responseJson).to.have.property('description').that.is.a('string');",
											"    pm.expect(responseJson).to.have.property('value').that.is.a('number');",
											"    pm.expect(responseJson).to.have.property('enabled').that.is.a('boolean')",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "8bfeeeb7-08fa-4501-87b3-434c330406d5"
									}
								}
							],
							"id": "395253d5-9cb8-4486-97fd-27f847e2835b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/configurations/:configId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configurations",
										":configId"
									],
									"variable": [
										{
											"key": "configId",
											"value": "62",
											"description": "(Required) configId"
										}
									]
								},
								"description": "Returns a global enable/disable configurations.\n\nExample Requests:\n\nconfigurations/1"
							},
							"response": [
								{
									"id": "b658ba38-75de-43d2-90c1-b700a577ba92",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/configurations/:configId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"configurations",
												":configId"
											],
											"variable": [
												{
													"key": "configId",
													"value": "6608969",
													"description": "(Required) configId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "64c25756-1e73-4de9-85ad-b0758736a924"
										}
									],
									"cookie": [],
									"body": "{\n  \"globalConfiguration\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Global Configuration",
							"id": "42ac26d0-ccd2-405a-b3a6-33c556ab1aa8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configurations/:configId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configurations",
										":configId"
									],
									"variable": [
										{
											"key": "configId",
											"value": "62",
											"description": "(Required) configId"
										}
									]
								},
								"description": "Updates an enable/disable global configuration item."
							},
							"response": [
								{
									"id": "a5005380-4f4d-4154-ae59-6142b67365c4",
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": 2,\n  \"enabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/configurations/:configId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"configurations",
												":configId"
											],
											"variable": [
												{
													"key": "configId",
													"value": "6608969",
													"description": "(Required) configId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "0a15314a-c364-4fc9-879e-a11f0bb09785"
										}
									],
									"cookie": [],
									"body": "{\n  \"changes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resourceId\": 4\n}"
								}
							]
						}
					],
					"id": "56e68ab1-71ef-4779-9f1e-a4a0d4668fe6"
				},
				{
					"name": "Retrieve Global Configuration | Retrieve Global Configuration for surveys",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json().globalConfiguration;",
									"",
									"pm.test(\"Verify response properties\", function () {",
									"    pm.expect(responseJson).to.be.an('array').that.is.not.empty;",
									"    responseJson.forEach(config => {",
									"        pm.expect(config).to.be.an('object');",
									"        pm.expect(config).to.have.property('trapDoor').that.is.an('boolean');",
									"        pm.expect(config).to.have.property('name').that.is.a('string');",
									"        pm.expect(config).to.have.property('id').that.is.a('string');",
									"        pm.expect(config).to.have.property('value').that.is.a('number');",
									"        pm.expect(config).to.have.property('enabled').that.is.a('boolean')",
									"    })",
									"   ",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bdeafbc8-1623-460e-9263-897444200d43"
							}
						}
					],
					"id": "0d0e4c2e-591b-4446-af69-698a69d673cb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configurations?survey=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configurations"
							],
							"query": [
								{
									"key": "survey",
									"value": "false",
									"description": "survey"
								}
							]
						},
						"description": "Returns the list global enable/disable configurations.\n\nExample Requests:\n\nconfigurations\n\n\nReturns the list global enable/disable survey configurations.\n\nExample Requests:\n\nconfigurations/survey"
					},
					"response": [
						{
							"id": "002bf92c-2247-4687-8e4a-1f49faeddb89",
							"name": "List of example \\n response \\nsurveys response   \\ngiven below",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/configurations?survey=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configurations"
									],
									"query": [
										{
											"key": "survey",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "5956fc6d-fa45-41e9-82a0-00b7bc5a635c"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"globalConfiguration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"globalConfiguration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Retrieve Global Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Verify response properties\", function () {",
									"    pm.expect(responseJson).to.be.an('object');",
									"    ",
									"    pm.expect(responseJson).to.have.property('trapDoor').that.is.an('boolean');",
									"    pm.expect(responseJson).to.have.property('name').that.is.a('string');",
									"    pm.expect(responseJson).to.have.property('id').that.is.a('string');",
									"    pm.expect(responseJson).to.have.property('description').that.is.a('string');",
									"    pm.expect(responseJson).to.have.property('value').that.is.a('number');",
									"    pm.expect(responseJson).to.have.property('enabled').that.is.a('boolean')",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8ec4b2cc-3f41-44c1-94dd-54ca2da782e9"
							}
						}
					],
					"id": "8897009b-8176-466a-94a4-3389531054d0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configurations/name/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configurations",
								"name",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "Maximum_Deposit_No_AML_Check_Politically_Exposure",
									"description": "(Required) name"
								}
							]
						},
						"description": "Returns a global enable/disable configuration.\n\nExample Requests:\n\nconfigurations/name/Enable-Address"
					},
					"response": [
						{
							"id": "28b9d1f1-9efb-446c-af45-c87a3d0374a6",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/configurations/name/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configurations",
										"name",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "anim reprehenderit ut",
											"description": "(Required) name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "bb951050-b33f-48d9-8794-8a1577ffc943"
								}
							],
							"cookie": [],
							"body": "{\n  \"dateValue\": \"1955-02-20T01:10:14.815Z\",\n  \"description\": \"amet labore\",\n  \"enabled\": true,\n  \"id\": 95684889,\n  \"name\": \"in Lorem\",\n  \"stringValue\": \"ea deserunt consequat Duis nulla\",\n  \"trapDoor\": false,\n  \"value\": 61249352\n}"
						}
					]
				}
			],
			"id": "41e5cc81-7ef2-41ac-8a34-067d77d818f6"
		},
		{
			"name": "savingsproducts",
			"item": [
				{
					"name": "List Savings Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify response properties\", function () {",
									"    var savingsProducts = pm.response.json();",
									"    savingsProducts.forEach(function(product) {",
									"    ",
									"    pm.expect(product).to.have.property('interestRateReviewUnit')",
									"",
									"",
									"    pm.expect(product).to.have.property('collectInterestWhenLocked').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('notes');",
									"    pm.expect(product).to.have.property('forAllBranches').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('maxRequiredOpeningBalance');",
									"    pm.expect(product).to.have.property('allowOverdraft').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('isActive').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('indexInterestRateSourceKey');",
									"    pm.expect(product).to.have.property('interestChargeFrequencyCount');",
									"    ",
									"    pm.expect(product).to.have.property('nominalAnnualInterestRate');",
									"    pm.expect(product).to.have.property('accountingInterestAccrualMethod').that.is.an('object');",
									"    pm.expect(product.accountingInterestAccrualMethod).to.have.property('code')",
									"    pm.expect(product.accountingInterestAccrualMethod).to.have.property('id')",
									"    pm.expect(product.accountingInterestAccrualMethod).to.have.property('value')",
									"",
									"    pm.expect(product).to.have.property('maxRequiredBalance')",
									"    pm.expect(product).to.have.property('id')",
									"    pm.expect(product).to.have.property('withdrawalFeeForTransfers').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('lienAllowed').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('daysToDormancy');",
									"    pm.expect(product).to.have.property('nominalAnnualInterestRateOverdraft');",
									"",
									"    pm.expect(product).to.have.property('minRequiredOpeningBalance');",
									"    pm.expect(product).to.have.property('daysToInactive');",
									"    pm.expect(product).to.have.property('maxAllowedLienLimit');",
									"    pm.expect(product).to.have.property('isMultiCurrencySupported').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('interestPaidIntoAccount').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('description');",
									"    pm.expect(product).to.have.property('daysToEscheat');",
									"    pm.expect(product).to.have.property('isAvailableForGroups').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('maximumNominalAnnualInterestRate')",
									"",
									"    pm.expect(product).to.have.property('interestCalculationType').that.is.an('object');",
									"    pm.expect(product.interestCalculationType).to.have.property('code')",
									"    pm.expect(product.interestCalculationType).to.have.property('id')",
									"    pm.expect(product.interestCalculationType).to.have.property('value')",
									"",
									"    pm.expect(product).to.have.property('maxBalanceForInterestCalculation');",
									"",
									"    pm.expect(product).to.have.property('currency').that.is.an('object');",
									"    pm.expect(product.currency).to.have.property('displayLabel')",
									"    pm.expect(product.currency).to.have.property('code')",
									"    pm.expect(product.currency).to.have.property('decimalPlaces');",
									"    pm.expect(product.currency).to.have.property('name')",
									"",
									"    pm.expect(product).to.have.property('maxWithdrawalAmount');",
									"    pm.expect(product).to.have.property('isAvailableForIndividuals').that.is.a('boolean');",
									"",
									"    pm.expect(product).to.have.property('interestCompoundingPeriodType').that.is.an('object');",
									"    pm.expect(product.interestCompoundingPeriodType).to.have.property('code');",
									"    pm.expect(product.interestCompoundingPeriodType).to.have.property('id');",
									"    pm.expect(product.interestCompoundingPeriodType).to.have.property('value');",
									"",
									"    pm.expect(product).to.have.property('interestCalculationDaysInYearType')",
									"    pm.expect(product.interestCalculationDaysInYearType).to.have.property('code')",
									"    pm.expect(product.interestCalculationDaysInYearType).to.have.property('id')",
									"    pm.expect(product.interestCalculationDaysInYearType).to.have.property('value')",
									"",
									"    // pm.expect(product).to.have.property('minimumTieringAllowedForIndividual').that.is.an('object');",
									"    // pm.expect(product.minimumTieringAllowedForIndividual).to.have.property('code')",
									"    // pm.expect(product.minimumTieringAllowedForIndividual).to.have.property('id')",
									"    // pm.expect(product.minimumTieringAllowedForIndividual).to.have.property('value')",
									"",
									"    pm.expect(product).to.have.property('overdraftLimit');",
									"    pm.expect(product).to.have.property('enforceMinRequiredBalance').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('isDormancyTrackingActive').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('allowArbitraryFees').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('withHoldTax').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('allowTechnicalOverdraft').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('enforceMaxRequiredBalance').that.is.a('boolean');",
									"    pm.expect(product).to.have.property('interestRateReviewCount');",
									"    pm.expect(product).to.have.property('allowOffset').that.is.a('boolean');",
									"",
									"    pm.expect(product).to.have.property('interestPostingPeriodType').that.is.an('object');",
									"    pm.expect(product.interestPostingPeriodType).to.have.property('code')",
									"    pm.expect(product.interestPostingPeriodType).to.have.property('id')",
									"    pm.expect(product.interestPostingPeriodType).to.have.property('value')",
									"    // ",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "787b6198-4d25-4cbe-8032-d5b1884ce4f0"
							}
						}
					],
					"id": "f6f6d3b2-ddc8-4957-b7f3-347685a5a328",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/savingsproducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts"
							]
						},
						"description": "Lists Savings Products\n\nExample Requests:\n\nsavingsproducts\n\nsavingsproducts?fields=name"
					},
					"response": [
						{
							"id": "eb829d31-dc80-40dc-a0a8-191754ff9de0",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savingsproducts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "11b1ed9d-9a48-485f-bdfe-434214c58105"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"accountingRule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interestCalculationDaysInYearType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interestCalculationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interestCompoundingPeriodType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interestPostingPeriodType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nominalAnnualInterestRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shortName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"withdrawalFeeForTransfers\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"accountingRule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interestCalculationDaysInYearType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interestCalculationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interestCompoundingPeriodType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interestPostingPeriodType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nominalAnnualInterestRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shortName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"withdrawalFeeForTransfers\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Create index rate Savings Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"// Verify the length of resourceId",
									"pm.test(\"The resourceId length must be greater than zero\", function () {",
									"    const responseData = pm.response.json();",
									"    const resourceId = responseData.resourceId;",
									"",
									"    pm.expect(resourceId.length).to.be.greaterThan(0, \"Resource ID should not be empty\");",
									"    pm.collectionVariables.set(\"savingsProductId\", responseData.resourceId)",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "66bb50f8-0d3c-4419-8eed-c8ce5bc5ec1f"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"savingsProductName\",\"IndexCorporateWallet\"+num)",
									"",
									"pm.collectionVariables.set(\"savingsProductShortCode\",\"IndCorp\"+num)"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "ad6bf507-4c4b-473f-9a5e-9a5268c22d19"
							}
						}
					],
					"id": "9af9b647-c836-4769-9eeb-4cb828d06732",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountingRule\": \"CASH_BASED\",\n  \"accountingRuleModel\": \"CENTRALISED\",\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"category\": \"CORPORATE_BANKING\",\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"NOT_REQUIRED\",\n  \"currencyCode\": \"NGN\",\n  \"isMultiCurrencySupported\": true,\n   \"otherCurrencies\": [\n      {\n      \"currencyCode\": \"USD\"\n      },\n      {\n      \"currencyCode\": \"USD\"\n      },\n      {\n      \"currencyCode\": \"JPY\"\n      },\n      {\n      \"currencyCode\": \"AED\"\n      },\n      {\n      \"currencyCode\": \"GBP\"\n      },\n      {\n      \"currencyCode\": \"CAD\"\n      },\n      {\n      \"currencyCode\": \"GNF\"\n      }\n      \n      ],\n  \"description\": \"Business Multicurrency Wallet\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": 11420465309194898,\n  \"interestCalculationDaysInYearType\": \"DAYS_365\",\n  \"interestCalculationType\": \"DAILY_BALANCE\",\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 0,\n  \"interestCompoundingPeriodType\": \"DAILY\",\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": \"MONTHLY\",\n  \"interestRateReviewCount\": 0,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"INDEX_INTEREST_RATE\", //FIXED_INTEREST_RATE\n  \"interestRateTerms\": \"FIXED\",\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"isDormancyTrackingActive\": true,\n  \"daysToInactive\": 60,\n  \"daysToDormancy\": 90,\n  \"daysToEscheat\": 120,\n  \"locale\": \"en\",\n  \"minBalanceForInterestCalculation\": 5000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"minOverdraftForInterestCalculation\": 0,\n  \"name\": \"{{savingsProductName}}\",\n  \"nominalAnnualInterestRate\": 2.50,\n  \"shortName\": \"{{savingsProductShortCode}}\",\n  \"withdrawalFeeForTransfers\": true,\n  \"savingsControlAccountId\": 3,\n  \"savingsReferenceAccountId\": 1,\n  \"transfersInSuspenseAccountId\": 4,\n  \"interestOnSavingsAccountId\": 6,\n  \"incomeFromFeeAccountId\": 8,\n  \"incomeFromPenaltyAccountId\": 9,\n  \"overdraftPortfolioControlId\": 2,\n  \"incomeFromInterestId\": 10,\n  \"writeOffAccountId\": 7,\n  \"escheatLiabilityId\": 5,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"forAllBranches\":true,\n  \"notes\":\"Testing index rate sources\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsproducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts"
							]
						},
						"description": "Creates a Savings Product\n\nMandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,accountingRule\n\nMandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId\n\nOptional Fields: minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, allowOverdraft, overdraftLimit, minBalanceForInterestCalculation,withHoldTax,taxGroupId,accountMapping, lienAllowed, maxAllowedLienLimit"
					},
					"response": [
						{
							"id": "be5d58a7-c8d4-41aa-8b11-5c055f1362e2",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountMappingForPayment\": \"accountMappingForPayment\",\n  \"accountingRule\": 1,\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"allowTechnicalOverdraft\": false,\n  \"category\": \"PERSONAL_DEPOSIT\",\n  \"charges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"OPTIONAL\",\n  \"currencyCode\": \"USD\",\n  \"description\": \"Daily compounding using Daily Balance, 5% per year, 365 days in year\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": \"001\",\n  \"interestCalculationDaysInYearType\": 365,\n  \"interestCalculationType\": 1,\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 2,\n  \"interestCompoundingPeriodType\": 1,\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": 4,\n  \"interestRateReviewCount\": 2,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateTerms\": \"FIXED\",\n  \"interestRateTiers\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"lienAllowed\": true,\n  \"locale\": \"en\",\n  \"maxAllowedLienLimit\": 10000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minBalanceForInterestCalculation\": 500,\n  \"minOverdraftForInterestCalculation\": -3000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"name\": \"Passbook Savings\",\n  \"nominalAnnualInterestRate\": 5,\n  \"nominalAnnualInterestRateOverdraft\": 10,\n  \"notes\": \"A note for savings product\",\n  \"overdraftLimit\": -10000,\n  \"productCurrencies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"shortName\": \"PBSV\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsproducts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "b30ecc35-3006-4a9a-b3d9-ff18f61160ea"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				},
				{
					"name": "Create wht rate Savings Product using tax group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"// Verify the length of resourceId",
									"pm.test(\"The resourceId length must be greater than zero\", function () {",
									"    const responseData = pm.response.json();",
									"    const resourceId = responseData.resourceId;",
									"",
									"    pm.expect(resourceId.length).to.be.greaterThan(0, \"Resource ID should not be empty\");",
									"    pm.collectionVariables.set(\"savingsProductId\", responseData.resourceId)",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "3b04cab1-d1ff-4f51-904a-8ef71038d3ab"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"savingsProductName\",\"WHTaxGroupSavingsProduct\"+num)",
									"",
									"pm.collectionVariables.set(\"savingsProductShortCode\",\"WHTaxG\"+num)"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "2e37fd83-2354-48a8-b6ed-113b7707dafb"
							}
						}
					],
					"id": "e5685344-443a-41c9-87f3-5ba2ebf0fe6c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountingRule\": \"CASH_BASED\",\n  \"accountingRuleModel\": \"CENTRALISED\",\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"category\": \"CORPORATE_BANKING\",\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"NOT_REQUIRED\",\n  \"currencyCode\": \"NGN\",\n  \"isMultiCurrencySupported\": true,\n   \"otherCurrencies\": [\n      {\n      \"currencyCode\": \"USD\"\n      },\n      {\n      \"currencyCode\": \"USD\"\n      },\n      {\n      \"currencyCode\": \"JPY\"\n      },\n      {\n      \"currencyCode\": \"AED\"\n      },\n      {\n      \"currencyCode\": \"GBP\"\n      },\n      {\n      \"currencyCode\": \"CAD\"\n      },\n      {\n      \"currencyCode\": \"GNF\"\n      }\n      \n      ],\n  \"description\": \"WHT Savings Product\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": 11420465309194898,\n  \"interestCalculationDaysInYearType\": \"DAYS_365\",\n  \"interestCalculationType\": \"DAILY_BALANCE\",\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 0,\n  \"interestCompoundingPeriodType\": \"DAILY\",\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": \"MONTHLY\",\n  \"interestRateReviewCount\": 0,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"INDEX_INTEREST_RATE\", //FIXED_INTEREST_RATE\n  \"interestRateTerms\": \"FIXED\",\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"isDormancyTrackingActive\": true,\n  \"daysToInactive\": 60,\n  \"daysToDormancy\": 90,\n  \"daysToEscheat\": 120,\n  \"locale\": \"en\",\n  \"minBalanceForInterestCalculation\": 5000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"minOverdraftForInterestCalculation\": 0,\n  \"name\": \"{{savingsProductName}}\",\n  \"nominalAnnualInterestRate\": 2.50,\n  \"shortName\": \"{{savingsProductShortCode}}\",\n  \"withdrawalFeeForTransfers\": true,\n  \"savingsControlAccountId\": 3,\n  \"savingsReferenceAccountId\": 1,\n  \"transfersInSuspenseAccountId\": 4,\n  \"interestOnSavingsAccountId\": 6,\n  \"incomeFromFeeAccountId\": 8,\n  \"incomeFromPenaltyAccountId\": 9,\n  \"overdraftPortfolioControlId\": 2,\n  \"incomeFromInterestId\": 10,\n  \"writeOffAccountId\": 7,\n  \"escheatLiabilityId\": 5,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"forAllBranches\":true,\n  \"notes\":\"Testing with holding tax rate sources\",\n  \"withHoldTax\": true,\n  \"withholdingTaxRateSource\": \"TAX_GROUP_WITHHOLDING_TAX_RATE\", //TAX_GROUP_WITHHOLDING_TAX_RATE,INDEX_WITHHOLDING_TAX_RATE\n  \"taxGroupId\":5463963047680093\n  //\"indexWithholdingTaxRateSourceKey\": 273287821674500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsproducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts"
							]
						},
						"description": "Creates a Savings Product\n\nMandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,accountingRule\n\nMandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId\n\nOptional Fields: minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, allowOverdraft, overdraftLimit, minBalanceForInterestCalculation,withHoldTax,taxGroupId,accountMapping, lienAllowed, maxAllowedLienLimit"
					},
					"response": [
						{
							"id": "6c9c70ce-50bc-4ffa-b9dc-17ae2a0758de",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountMappingForPayment\": \"accountMappingForPayment\",\n  \"accountingRule\": 1,\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"allowTechnicalOverdraft\": false,\n  \"category\": \"PERSONAL_DEPOSIT\",\n  \"charges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"OPTIONAL\",\n  \"currencyCode\": \"USD\",\n  \"description\": \"Daily compounding using Daily Balance, 5% per year, 365 days in year\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": \"001\",\n  \"interestCalculationDaysInYearType\": 365,\n  \"interestCalculationType\": 1,\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 2,\n  \"interestCompoundingPeriodType\": 1,\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": 4,\n  \"interestRateReviewCount\": 2,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateTerms\": \"FIXED\",\n  \"interestRateTiers\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"lienAllowed\": true,\n  \"locale\": \"en\",\n  \"maxAllowedLienLimit\": 10000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minBalanceForInterestCalculation\": 500,\n  \"minOverdraftForInterestCalculation\": -3000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"name\": \"Passbook Savings\",\n  \"nominalAnnualInterestRate\": 5,\n  \"nominalAnnualInterestRateOverdraft\": 10,\n  \"notes\": \"A note for savings product\",\n  \"overdraftLimit\": -10000,\n  \"productCurrencies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"shortName\": \"PBSV\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsproducts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "aef30ba9-f4ee-47c5-8a16-11e7e113f6df"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				},
				{
					"name": "Create wht rate Savings Product using index rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"// Verify the length of resourceId",
									"pm.test(\"The resourceId length must be greater than zero\", function () {",
									"    const responseData = pm.response.json();",
									"    const resourceId = responseData.resourceId;",
									"   ",
									"    pm.expect(resourceId.length).to.be.greaterThan(0, \"Resource ID should not be empty\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "4ec4e0f9-32a9-4536-8836-b72d637b11b8"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"savingsProductName\",\"IndexRateSavingsProduct\"+num)",
									"",
									"pm.collectionVariables.set(\"savingsProductShortCode\",\"INDS\"+num)"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "efb80603-a06b-42d1-a7df-03d135c28bb5"
							}
						}
					],
					"id": "ac9cb209-3054-4ff7-8380-79c58c79bbd4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountingRule\": \"CASH_BASED\",\n  \"accountingRuleModel\": \"CENTRALISED\",\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"category\": \"CORPORATE_BANKING\",\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"NOT_REQUIRED\",\n  \"currencyCode\": \"NGN\",\n  \"isMultiCurrencySupported\": true,\n   \"otherCurrencies\": [\n      {\n      \"currencyCode\": \"USD\"\n      },\n      {\n      \"currencyCode\": \"USD\"\n      },\n      {\n      \"currencyCode\": \"JPY\"\n      },\n      {\n      \"currencyCode\": \"AED\"\n      },\n      {\n      \"currencyCode\": \"GBP\"\n      },\n      {\n      \"currencyCode\": \"CAD\"\n      },\n      {\n      \"currencyCode\": \"GNF\"\n      }\n      \n      ],\n  \"description\": \"iWHT Product\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": 11420465309194898,\n  \"interestCalculationDaysInYearType\": \"DAYS_365\",\n  \"interestCalculationType\": \"DAILY_BALANCE\",\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 0,\n  \"interestCompoundingPeriodType\": \"DAILY\",\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": \"MONTHLY\",\n  \"interestRateReviewCount\": 0,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"INDEX_INTEREST_RATE\", //FIXED_INTEREST_RATE\n  \"interestRateTerms\": \"FIXED\",\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"isDormancyTrackingActive\": true,\n  \"daysToInactive\": 60,\n  \"daysToDormancy\": 90,\n  \"daysToEscheat\": 120,\n  \"locale\": \"en\",\n  \"minBalanceForInterestCalculation\": 5000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"minOverdraftForInterestCalculation\": 0,\n  \"name\": \"{{savingsProductName}}\",\n  \"nominalAnnualInterestRate\": 2.50,\n  \"shortName\": \"{{savingsProductShortCode}}\",\n  \"withdrawalFeeForTransfers\": true,\n  \"savingsControlAccountId\": 3,\n  \"savingsReferenceAccountId\": 1,\n  \"transfersInSuspenseAccountId\": 4,\n  \"interestOnSavingsAccountId\": 6,\n  \"incomeFromFeeAccountId\": 8,\n  \"incomeFromPenaltyAccountId\": 9,\n  \"overdraftPortfolioControlId\": 2,\n  \"incomeFromInterestId\": 10,\n  \"writeOffAccountId\": 7,\n  \"escheatLiabilityId\": 5,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"forAllBranches\":true,\n  \"notes\":\"Testing with holding tax rate via index wht\",\n  \"withHoldTax\": true,\n  \"withholdingTaxRateSource\": \"INDEX_WITHHOLDING_TAX_RATE\", //TAX_GROUP_WITHHOLDING_TAX_RATE,INDEX_WITHHOLDING_TAX_RATE\n  //\"taxGroupId\":5463963047680093\n  \"indexWithholdingTaxRateSourceKey\": 5465699583638761\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsproducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts"
							]
						},
						"description": "Creates a Savings Product\n\nMandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,accountingRule\n\nMandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId\n\nOptional Fields: minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, allowOverdraft, overdraftLimit, minBalanceForInterestCalculation,withHoldTax,taxGroupId,accountMapping, lienAllowed, maxAllowedLienLimit"
					},
					"response": [
						{
							"id": "aef8c987-3478-4c73-9409-ab551309d8eb",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountMappingForPayment\": \"accountMappingForPayment\",\n  \"accountingRule\": 1,\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"allowTechnicalOverdraft\": false,\n  \"category\": \"PERSONAL_DEPOSIT\",\n  \"charges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"OPTIONAL\",\n  \"currencyCode\": \"USD\",\n  \"description\": \"Daily compounding using Daily Balance, 5% per year, 365 days in year\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": \"001\",\n  \"interestCalculationDaysInYearType\": 365,\n  \"interestCalculationType\": 1,\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 2,\n  \"interestCompoundingPeriodType\": 1,\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": 4,\n  \"interestRateReviewCount\": 2,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateTerms\": \"FIXED\",\n  \"interestRateTiers\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"lienAllowed\": true,\n  \"locale\": \"en\",\n  \"maxAllowedLienLimit\": 10000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minBalanceForInterestCalculation\": 500,\n  \"minOverdraftForInterestCalculation\": -3000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"name\": \"Passbook Savings\",\n  \"nominalAnnualInterestRate\": 5,\n  \"nominalAnnualInterestRateOverdraft\": 10,\n  \"notes\": \"A note for savings product\",\n  \"overdraftLimit\": -10000,\n  \"productCurrencies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"shortName\": \"PBSV\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsproducts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "e8430c31-a32f-4927-b345-7921b327b9fe"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				},
				{
					"name": "Create a Personal Savings Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"// Verify the length of resourceId",
									"pm.test(\"The resourceId length must be greater than zero\", function () {",
									"    const responseData = pm.response.json();",
									"    const resourceId = responseData.resourceId;",
									"   ",
									"    pm.expect(resourceId.length).to.be.greaterThan(0, \"Resource ID should not be empty\");",
									"});",
									"",
									"pm.test(\"Get savings product id\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.resourceId).to.exist",
									"    pm.globals.set(\"savingsProductId\", jsonData.resourceId)",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f024211d-1609-498c-a98a-bfadc469f68c"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"savingsProductName\",\"PersonalSavingsProduct\"+num)",
									"",
									"pm.collectionVariables.set(\"savingsProductShortCode\",\"PERS\"+num)"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "2746bcb5-62c8-44d5-aab9-dadcc8434202"
							}
						}
					],
					"id": "16527338-3e49-4613-8e9a-3546d2feaf88",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountingRule\": \"CASH_BASED\",\n  \"accountingRuleModel\": \"CENTRALISED\",\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"category\": \"PERSONAL_BANKING\",\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"NOT_REQUIRED\",\n  \"currencyCode\": \"NGN\",\n  \"isMultiCurrencySupported\": true,\n   \"otherCurrencies\": [\n      {\n      \"currencyCode\": \"USD\"\n      },\n      {\n      \"currencyCode\": \"GBP\"\n      },\n      {\n      \"currencyCode\": \"AED\"\n      }],\n  \"description\": \"Personal Savings Product\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": null,\n  \"interestCalculationDaysInYearType\": \"DAYS_365\",\n  \"interestCalculationType\": \"DAILY_BALANCE\",\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 0,\n  \"interestCompoundingPeriodType\": \"DAILY\",\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": \"MONTHLY\",\n  \"interestRateReviewCount\": 0,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateTerms\": \"FIXED\",\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"isDormancyTrackingActive\": true,\n  \"daysToInactive\": 60,\n  \"daysToDormancy\": 90,\n  \"daysToEscheat\": 120,\n  \"locale\": \"en\",\n  \"minBalanceForInterestCalculation\": 5000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"enforceMaxRequiredBalance\": true,\n  \"maxRequiredBalance\": 200000,\n  \"minRequiredBalance\":1000,\n  \"minOverdraftForInterestCalculation\": 0,\n  \"name\": \"{{savingsProductName}}\",\n  \"nominalAnnualInterestRate\": 2.50,\n  \"nominalAnnualInterestRateOverdraft\": 0.0,\n  \"notes\": \"A note for Corporate wallet Savings\",\n  \"overdraftLimit\": 0,\n  \"shortName\": \"{{savingsProductShortCode}}\",\n  \"withdrawalFeeForTransfers\": true,\n  \"savingsControlAccountId\": 3,\n  \"savingsReferenceAccountId\": 1,\n  \"transfersInSuspenseAccountId\": 4,\n  \"interestOnSavingsAccountId\": 6,\n  \"incomeFromFeeAccountId\": 8,\n  \"incomeFromPenaltyAccountId\": 9,\n  \"overdraftPortfolioControlId\": 2,\n  \"incomeFromInterestId\": 10,\n  \"writeOffAccountId\": 7,\n  \"escheatLiabilityId\": 5,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"forAllBranches\":true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsproducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts"
							]
						},
						"description": "Creates a Savings Product\n\nMandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,accountingRule\n\nMandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId\n\nOptional Fields: minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, allowOverdraft, overdraftLimit, minBalanceForInterestCalculation,withHoldTax,taxGroupId,accountMapping, lienAllowed, maxAllowedLienLimit"
					},
					"response": [
						{
							"id": "bebd8d23-7b54-4142-b555-3193e36f67a8",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountMappingForPayment\": \"accountMappingForPayment\",\n  \"accountingRule\": 1,\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"allowTechnicalOverdraft\": false,\n  \"category\": \"PERSONAL_DEPOSIT\",\n  \"charges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"OPTIONAL\",\n  \"currencyCode\": \"USD\",\n  \"description\": \"Daily compounding using Daily Balance, 5% per year, 365 days in year\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": \"001\",\n  \"interestCalculationDaysInYearType\": 365,\n  \"interestCalculationType\": 1,\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 2,\n  \"interestCompoundingPeriodType\": 1,\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": 4,\n  \"interestRateReviewCount\": 2,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateTerms\": \"FIXED\",\n  \"interestRateTiers\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"lienAllowed\": true,\n  \"locale\": \"en\",\n  \"maxAllowedLienLimit\": 10000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minBalanceForInterestCalculation\": 500,\n  \"minOverdraftForInterestCalculation\": -3000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"name\": \"Passbook Savings\",\n  \"nominalAnnualInterestRate\": 5,\n  \"nominalAnnualInterestRateOverdraft\": 10,\n  \"notes\": \"A note for savings product\",\n  \"overdraftLimit\": -10000,\n  \"productCurrencies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"shortName\": \"PBSV\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsproducts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "8fd895d4-c2e6-4d10-8342-cffc5c488f00"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				},
				{
					"name": "Create a Business Savings Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"// Verify the length of resourceId",
									"pm.test(\"The resourceId length must be greater than zero\", function () {",
									"    const responseData = pm.response.json();",
									"    const resourceId = responseData.resourceId;",
									"   ",
									"    pm.expect(resourceId.length).to.be.greaterThan(0, \"Resource ID should not be empty\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "98af16ea-3ea2-4d52-aa2b-6ec69832e967"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;",
									"pm.collectionVariables.set(\"savingsProductName\",\"BizSavingsProduct\"+num)",
									"",
									"pm.collectionVariables.set(\"savingsProductShortCode\",\"BizSP\"+num)"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "64642f0f-b393-43e1-97fd-e2be853824d6"
							}
						}
					],
					"id": "bdcd8a4d-3b4d-4135-a447-6adb2dba7639",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountingRule\": \"CASH_BASED\",\n  \"accountingRuleModel\": \"CENTRALISED\",\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"category\": \"BUSINESS_BANKING\",\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"NOT_REQUIRED\",\n  \"currencyCode\": \"NGN\",\n  \"isMultiCurrencySupported\": true,\n   \"otherCurrencies\": [\n      {\n      \"currencyCode\": \"USD\"\n      },\n      {\n      \"currencyCode\": \"GBP\"\n      },\n      {\n      \"currencyCode\": \"AED\"\n      }],\n  \"description\": \"Corporate Wallet\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": null,\n  \"interestCalculationDaysInYearType\": \"DAYS_365\",\n  \"interestCalculationType\": \"DAILY_BALANCE\",\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 0,\n  \"interestCompoundingPeriodType\": \"DAILY\",\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": \"MONTHLY\",\n  \"interestRateReviewCount\": 0,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateTerms\": \"FIXED\",\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": false,\n  \"isDormancyTrackingActive\": true,\n  \"daysToInactive\": 60,\n  \"daysToDormancy\": 90,\n  \"daysToEscheat\": 120,\n  \"locale\": \"en\",\n  \"minBalanceForInterestCalculation\": 5000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"enforceMaxRequiredBalance\": false,\n  \"maxRequiredBalance\": 200000000000,\n  \"minRequiredBalance\":100000,\n  \"minOverdraftForInterestCalculation\": 0,\n  \"name\": \"{{savingsProductName}}\",\n  \"nominalAnnualInterestRate\": 2.50,\n  \"nominalAnnualInterestRateOverdraft\": 0.0,\n  \"notes\": \"A note for Business wallet Savings\",\n  \"overdraftLimit\": 0,\n  \"shortName\": \"{{savingsProductShortCode}}\",\n  \"withdrawalFeeForTransfers\": true,\n  \"savingsControlAccountId\": 3,\n  \"savingsReferenceAccountId\": 1,\n  \"transfersInSuspenseAccountId\": 4,\n  \"interestOnSavingsAccountId\": 6,\n  \"incomeFromFeeAccountId\": 8,\n  \"incomeFromPenaltyAccountId\": 9,\n  \"overdraftPortfolioControlId\": 2,\n  \"incomeFromInterestId\": 10,\n  \"writeOffAccountId\": 7,\n  \"escheatLiabilityId\": 5,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"forAllBranches\":true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsproducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts"
							]
						},
						"description": "Creates a Savings Product\n\nMandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,accountingRule\n\nMandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId\n\nOptional Fields: minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, allowOverdraft, overdraftLimit, minBalanceForInterestCalculation,withHoldTax,taxGroupId,accountMapping, lienAllowed, maxAllowedLienLimit"
					},
					"response": [
						{
							"id": "6f756514-5e04-4198-8ba6-9d1c92f2b1c0",
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountMappingForPayment\": \"accountMappingForPayment\",\n  \"accountingRule\": 1,\n  \"allowNegativeInterestRate\": false,\n  \"allowOffset\": true,\n  \"allowOverdraft\": false,\n  \"allowTechnicalOverdraft\": false,\n  \"category\": \"PERSONAL_DEPOSIT\",\n  \"charges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"collectInterestWhenLocked\": true,\n  \"creditArrangementRequirement\": \"OPTIONAL\",\n  \"currencyCode\": \"USD\",\n  \"description\": \"Daily compounding using Daily Balance, 5% per year, 365 days in year\",\n  \"digitsAfterDecimal\": 2,\n  \"inMultiplesOf\": 0,\n  \"indexInterestRateSourceKey\": \"001\",\n  \"interestCalculationDaysInYearType\": 365,\n  \"interestCalculationType\": 1,\n  \"interestChargeFrequency\": \"ANNUALIZED\",\n  \"interestChargeFrequencyCount\": 2,\n  \"interestCompoundingPeriodType\": 1,\n  \"interestPaidIntoAccount\": true,\n  \"interestPostingPeriodType\": 4,\n  \"interestRateReviewCount\": 2,\n  \"interestRateReviewUnit\": \"DAYS\",\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateTerms\": \"FIXED\",\n  \"interestRateTiers\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": true,\n  \"isAvailableForGroups\": true,\n  \"isAvailableForIndividuals\": true,\n  \"lienAllowed\": true,\n  \"locale\": \"en\",\n  \"maxAllowedLienLimit\": 10000,\n  \"maxBalanceForInterestCalculation\": 50000,\n  \"maxRequiredOpeningBalance\": 500000,\n  \"maxWithdrawalAmount\": 100000,\n  \"minBalanceForInterestCalculation\": 500,\n  \"minOverdraftForInterestCalculation\": -3000,\n  \"minRequiredOpeningBalance\": 5000,\n  \"minimumTieringAllowedForGroup\": \"TIER_0\",\n  \"minimumTieringAllowedForIndividual\": \"TIER_0\",\n  \"name\": \"Passbook Savings\",\n  \"nominalAnnualInterestRate\": 5,\n  \"nominalAnnualInterestRateOverdraft\": 10,\n  \"notes\": \"A note for savings product\",\n  \"overdraftLimit\": -10000,\n  \"productCurrencies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"shortName\": \"PBSV\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsproducts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "5f899202-0081-4f8a-b8d3-b3aca0826646"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				},
				{
					"name": "Deactivate a savings product",
					"id": "68d4abb7-2a9d-47d5-b4c6-ff9a41416746",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/savingsproducts/deactivate/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts",
								"deactivate",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{savingsProductId}}",
									"description": "(Required) productId"
								}
							]
						},
						"description": "Deactivating an existing savings product."
					},
					"response": [
						{
							"id": "2923abfc-9e5d-4dbc-b748-98a0693dbd69",
							"name": "Ok",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savingsproducts/deactivate/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts",
										"deactivate",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "6608969",
											"description": "(Required) productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "0b8388d4-0b69-4cac-8964-0e1c754791ee"
								}
							],
							"cookie": [],
							"body": "\"anim reprehenderit ut\""
						}
					]
				},
				{
					"name": "Activate a savings product",
					"id": "d80a1966-7a99-4863-83be-494317e3f50e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/savingsproducts/activate/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts",
								"activate",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{savingsProductId}}",
									"description": "(Required) productId"
								}
							]
						},
						"description": "Activating an existing savings product."
					},
					"response": [
						{
							"id": "a52f878f-37e4-42db-8725-8b847285b392",
							"name": "Ok",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savingsproducts/activate/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts",
										"activate",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "6608969",
											"description": "(Required) productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "faf38bc3-2dfb-4b97-9dcf-d086b0e30f16"
								}
							],
							"cookie": [],
							"body": "\"anim reprehenderit ut\""
						}
					]
				},
				{
					"name": "Retrieve Savings Product Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify response properties\", function () {",
									"    var product = pm.response.json();",
									"   ",
									"    ",
									"    pm.expect(product).to.have.property('interestRateReviewUnit')",
									"    pm.expect(product).to.have.property('collectInterestWhenLocked')",
									"    pm.expect(product).to.have.property('notes');",
									"    pm.expect(product).to.have.property('forAllBranches')",
									"    pm.expect(product).to.have.property('accountingRuleModelOptions')",
									"    pm.expect(product).to.have.property('maxRequiredOpeningBalance');",
									"    pm.expect(product).to.have.property('allowOverdraft')",
									"    pm.expect(product).to.have.property('isActive')",
									"    pm.expect(product).to.have.property('indexInterestRateSourceKey');",
									"    pm.expect(product).to.have.property('interestChargeFrequencyCount');",
									"    pm.expect(product).to.have.property('nominalAnnualInterestRate');",
									"    pm.expect(product).to.have.property('accountingInterestAccrualMethod')",
									"",
									"    pm.expect(product).to.have.property('maxRequiredBalance')",
									"    pm.expect(product)",
									"    pm.expect(product).to.have.property('withdrawalFeeForTransfers')",
									"    pm.expect(product).to.have.property('lienAllowed')",
									"    pm.expect(product).to.have.property('daysToDormancy');",
									"    pm.expect(product).to.have.property('nominalAnnualInterestRateOverdraft');",
									"",
									"    pm.expect(product).to.have.property('minRequiredOpeningBalance');",
									"    pm.expect(product).to.have.property('daysToInactive');",
									"    pm.expect(product).to.have.property('maxAllowedLienLimit');",
									"    pm.expect(product).to.have.property('isMultiCurrencySupported')",
									"    pm.expect(product).to.have.property('interestPaidIntoAccount')",
									"    pm.expect(product).to.have.property('description');",
									"    pm.expect(product).to.have.property('daysToEscheat');",
									"    pm.expect(product).to.have.property('isAvailableForGroups')",
									"    pm.expect(product).to.have.property('maximumNominalAnnualInterestRate')",
									"",
									"    pm.expect(product).to.have.property('interestCalculationType')",
									"",
									"    pm.expect(product).to.have.property('maxBalanceForInterestCalculation');",
									"",
									"    pm.expect(product).to.have.property('currency')",
									"    pm.expect(product.currency).to.have.property('displayLabel')",
									"    pm.expect(product.currency).to.have.property('decimalPlaces');",
									"    pm.expect(product.currency).to.have.property('name')",
									"",
									"    pm.expect(product).to.have.property('maxWithdrawalAmount');",
									"    pm.expect(product).to.have.property('isAvailableForIndividuals')",
									"",
									"    pm.expect(product).to.have.property('interestCompoundingPeriodType')",
									"",
									"    pm.expect(product).to.have.property('interestCalculationDaysInYearType')",
									"",
									"    // pm.expect(product).to.have.property('minimumTieringAllowedForIndividual').that.is.an('object');",
									"    // pm.expect(product.minimumTieringAllowedForIndividual)",
									"    // pm.expect(product.minimumTieringAllowedForIndividual)",
									"    // pm.expect(product.minimumTieringAllowedForIndividual).to.have.property('value')",
									"",
									"    pm.expect(product).to.have.property('overdraftLimit');",
									"    pm.expect(product).to.have.property('enforceMinRequiredBalance')",
									"    pm.expect(product).to.have.property('isDormancyTrackingActive')",
									"    pm.expect(product).to.have.property('allowArbitraryFees')",
									"    pm.expect(product).to.have.property('withHoldTax')",
									"    pm.expect(product).to.have.property('allowTechnicalOverdraft')",
									"    pm.expect(product).to.have.property('enforceMaxRequiredBalance')",
									"    pm.expect(product).to.have.property('interestRateReviewCount');",
									"    pm.expect(product).to.have.property('allowOffset')",
									"",
									"    pm.expect(product).to.have.property('interestPostingPeriodType')",
									"",
									"    // ",
									"    ",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c6edfc4b-39f2-4838-98de-229c1d3051a6"
							}
						}
					],
					"id": "5fef1565-0004-46fe-bb25-abec2714f1bb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/savingsproducts/template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts",
								"template"
							]
						},
						"description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed description Lists\nExample Request:\nAccount Mapping:\n\nsavingsproducts/template"
					},
					"response": [
						{
							"id": "95d4dbe7-d3a8-47d0-92fe-f81a8a80681c",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savingsproducts/template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts",
										"template"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "ff7660cb-56aa-4add-8988-c9e9f78d96af"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountMapping\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"accountingMappingOptions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"accountingRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"accountingRuleOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"chargeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currencyOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"interestCalculationDaysInYearType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"interestCalculationDaysInYearTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"interestCalculationType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"interestCalculationTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"interestCompoundingPeriodType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"interestCompoundingPeriodTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"interestPostingPeriodType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"interestPostingPeriodTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"lockinPeriodFrequencyTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"paymentTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"withdrawalFeeTypeOptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieval of a Deposit(Savings) Product Sub-Ledger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    pm.expect(pm.response.json().pageItems).to.be.an('array').that.is.not.empty;",
									"    pm.response.json().pageItems.forEach(function(config) {",
									"        let transactionType = config.transactionType;",
									"",
									"        pm.expect(config).to.have.property('amount');",
									"        pm.expect(config).to.have.property('balanceBefore');",
									"        pm.expect(config).to.have.property('productId');",
									"        pm.expect(config).to.have.property('accountType');",
									"        pm.expect(config).to.have.property('transactionDate');",
									"        pm.expect(config).to.have.property('transactionId');",
									"        pm.expect(config).to.have.property('productName');",
									"        pm.expect(config).to.have.property('referenceId');",
									"        pm.expect(config).to.have.property('transactionType');",
									"        pm.expect(transactionType).to.have.property('id');",
									"        pm.expect(transactionType).to.have.property('code');",
									"        pm.expect(transactionType).to.have.property('value');",
									"        pm.expect(transactionType).to.have.property('deposit');",
									"        pm.expect(transactionType).to.have.property('dividendPayout');",
									"        pm.expect(transactionType).to.have.property('withdrawal');",
									"        pm.expect(transactionType).to.have.property('interestPosting');",
									"        pm.expect(transactionType).to.have.property('feeDeduction');",
									"        pm.expect(transactionType).to.have.property('initiateTransfer');",
									"        pm.expect(transactionType).to.have.property('approveTransfer');",
									"        pm.expect(transactionType).to.have.property('withdrawTransfer');",
									"        pm.expect(transactionType).to.have.property('rejectTransfer');",
									"        pm.expect(transactionType).to.have.property('overdraftInterest');",
									"        pm.expect(transactionType).to.have.property('writtenoff');",
									"        pm.expect(transactionType).to.have.property('overdraftFee');",
									"        pm.expect(transactionType).to.have.property('withholdTax');",
									"        pm.expect(transactionType).to.have.property('escheat');",
									"        pm.expect(transactionType).to.have.property('amountHold');",
									"        pm.expect(transactionType).to.have.property('amountRelease');",
									"        pm.expect(transactionType).to.have.property('amountSeized');",
									"        pm.expect(config).to.have.property('accountId');",
									"        pm.expect(config).to.have.property('accountNo');",
									"        pm.expect(config).to.have.property('balanceAfter');",
									"        pm.expect(config).to.have.property('currencyCode');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f87e3de2-2c8a-4abf-b022-bd4195e4bc1e"
							}
						}
					],
					"id": "45dee9ef-3833-42ef-8b32-68ca2e54e99e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{fineract-tenant-platformid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{fineract-url}}/savingsproducts/:savingsProductId/transactions/sub-ledger?paged=true&offset=0&limit=10",
							"host": [
								"{{fineract-url}}"
							],
							"path": [
								"savingsproducts",
								":savingsProductId",
								"transactions",
								"sub-ledger"
							],
							"query": [
								{
									"key": "paged",
									"value": "true"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							],
							"variable": [
								{
									"key": "savingsProductId",
									"value": "7713662640689334"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Savings Product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.random() * (10 - 1 + 1) + 1;",
									"pm.collectionVariables.set(\"nominalInterest\", num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "40c7e8ba-520c-474b-905e-ab9ce48ea234"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Verify savings product update is successful', () => {",
									"    var jsonData = pm.response.json().changes",
									"    pm.expect(jsonData).to.have.property('nominalAnnualInterestRate')",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7f0af788-af85-4780-b5c9-3662276af9a4"
							}
						}
					],
					"id": "d59bef57-6b7d-4e72-a18d-173532c43034",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n//     \"accountingRule\": \"CASH_BASED\",\n//     \"accountingRuleModel\": \"CENTRALISED\",\n//   \"savingsControlAccountId\": 3,\n//   \"savingsReferenceAccountId\": 1,\n//   \"transfersInSuspenseAccountId\": 4,\n//   \"interestOnSavingsAccountId\": 6,\n//   \"incomeFromFeeAccountId\": 8,\n//   \"incomeFromPenaltyAccountId\": 9,\n//   \"overdraftPortfolioControlId\": 2,\n//   \"incomeFromInterestId\": 10,\n//   \"writeOffAccountId\": 7,\n//   \"escheatLiabilityId\": 5,\n \"nominalAnnualInterestRate\": {{nominalInterest}},\n  \"locale\": \"en\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsproducts/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{savingsProductId}}",
									"description": "(Required) productId"
								}
							]
						},
						"description": "Updates a Savings Product"
					},
					"response": [
						{
							"id": "c6102e8e-0d43-4338-8392-fc093ebd057b",
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Passbook Savings Lite.\",\n  \"interestRate\": 5.73,\n  \"locale\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsproducts/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "6608969",
											"description": "(Required) productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "5f761320-ff9f-4535-9e28-4075644992e4"
								}
							],
							"cookie": [],
							"body": "{\n  \"changes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resourceId\": 1\n}"
						}
					]
				},
				{
					"name": "Retrieve a Savings Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an object with specific properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('collectInterestWhenLocked');",
									"    pm.expect(jsonData).to.have.property('isActive');",
									"    pm.expect(jsonData).to.have.property('allowOverdraft');",
									"    pm.expect(jsonData).to.have.property('nominalAnnualInterestRate');",
									"    pm.expect(jsonData).to.have.property('currency');",
									"    pm.expect(jsonData).to.have.property('isAvailableForGroups');",
									"    pm.expect(jsonData).to.have.property('isAvailableForIndividuals');",
									"});",
									"",
									"pm.test(\"Verify that nominal interest updates successful\", ()=>{",
									"    var nominalInterestValue = parseFloat(pm.collectionVariables.get(\"nominalInterest\").toFixed(6));",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.nominalAnnualInterestRate).to.eql(nominalInterestValue)",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a19655d4-15d0-4473-bf1b-826501435cfb"
							}
						}
					],
					"id": "a543717a-5725-4040-bab0-7f0e9f2c5c3c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/savingsproducts/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{savingsProductId}}",
									"description": "(Required) productId"
								}
							]
						},
						"description": "Retrieves a Savings Product\n\nExample Requests:\n\nsavingsproducts/1\n\nsavingsproducts/1?template=true\n\nsavingsproducts/1?fields=name,description"
					},
					"response": [
						{
							"id": "b82c48f7-d2a6-4664-a8ff-6b0dd5ed5150",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savingsproducts/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "6608969",
											"description": "(Required) productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "89c55a8c-45a4-4f01-8bdb-db4650fa986e"
								}
							],
							"cookie": [],
							"body": "{\n  \"accountingMappings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"accountingRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"gtasga\",\n  \"feeToIncomeAccountMappings\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"id\": 1,\n  \"interestCalculationDaysInYearType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"interestCalculationType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"interestCompoundingPeriodType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"interestPostingPeriodType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"savings product\",\n  \"nominalAnnualInterestRate\": 5,\n  \"paymentChannelToFundSourceMappings\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"penaltyToIncomeAccountMappings\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"shortName\": \"sa1\",\n  \"withdrawalFeeForTransfers\": false\n}"
						}
					]
				},
				{
					"name": "Delete a Savings Product",
					"id": "e8a6044e-cb1a-4fd5-bbd6-a368ea23c9b5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/savingsproducts/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsproducts",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{savingsProductId}}",
									"description": "(Required) productId"
								}
							]
						},
						"description": "Deletes a Savings Product"
					},
					"response": [
						{
							"id": "21096fa0-2f70-4883-a844-67ea93a3c69e",
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savingsproducts/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsproducts",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "6608969",
											"description": "(Required) productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "0c4a6ad9-5fba-4443-bd2e-a3a4aabaee87"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceId\": 1\n}"
						}
					]
				}
			],
			"id": "d6b7b1f5-3063-408c-a8be-2b3b5d5592a7"
		},
		{
			"name": "savings account",
			"item": [
				{
					"name": "Create Savings Account",
					"item": [
						{
							"name": "Negative Scenarios",
							"item": [
								{
									"name": "Create Existing Savings Account",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var num = Math.floor(Math.random() * (10000)) + 1;",
													"",
													"pm.globals.set(\"savingsExternalId\", \"BW10\"+num)",
													"",
													"pm.globals.set(\"savingsAccountNum\", \"850987\"+num)"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "3bf71c16-8350-456b-9de9-1397f640ef05"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Response is a JSON object with specific properties\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData).to.have.property('developerMessage');",
													"    pm.expect(jsonData).to.have.property('httpStatusCode');",
													"    pm.expect(jsonData).to.have.property('defaultUserMessage');",
													"    pm.expect(jsonData).to.have.property('userMessageGlobalisationCode');",
													"    pm.expect(jsonData).to.have.property('errors');",
													"});",
													"",
													"pm.test(\"Savings account number already exists error is returned\", () => {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errors[0].developerMessage).to.contains(\"already exists\")",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "912498ee-e418-4074-ad7c-1e189ea7071f"
											}
										}
									],
									"id": "747a27d0-486f-4ab4-8c59-4fb37311945d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Fineract-Platform-TenantId",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \"Adebayo Blessed\",\n  \"accountNo\": \"85098761005\",\n  \"allowOverdraft\": false,\n  \"applicationId\": 1,\n  \"clientId\": 14690260376751992,\n  \"interestRateSource\": \"INDEX_INTEREST_RATE\",\n  \"interestRateSpread\": 1.50, \n   \"indexInterestRateKey\": 11420768491396195,\n  \"creditArrangementKey\": null,\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"enforceMinRequiredBalance\": false,\n  \"externalId\": \"BW104878\",\n  \"feeAmount\": 12.25,\n  \"currencyCode\":\"AED\",\n  \"digitsAfterDecimal\": 2, //\n  \"inMultiplesOf\": 10, //\n  \"feeOnMonthDay\": 26.50,\n  \"fieldOfficerId\": 12545079046479857,\n  \"interestCalculationDaysInYearType\": \"DAYS_365\",\n  \"interestCalculationType\": \"DAILY_BALANCE\",\n  \"interestCompoundingPeriodType\": \"DAILY\",\n  \"interestPostingPeriodType\": \"MONTHLY\",\n  \"isGSIM\": false,\n  \"isParentAccount\": false,\n  \"lienAllowed\": true,\n  \"locale\": \"en\",\n  \"lockinPeriodFrequency\": 1,\n  \"lockinPeriodFrequencyType\": \"DAYS\",\n  \"maxAllowedLienLimit\": 1000,\n  \"minOverdraftForInterestCalculation\": 10000,\n  \"minRequiredBalance\": 2000,\n  \"minRequiredOpeningBalance\": 50000,\n  \"monthDayFormat\": \"dd MMMM\",\n  \"nominalAnnualInterestRate\": 3.50,\n  \"nominalAnnualInterestRateOverdraft\": 10,\n  \"notes\": \"New Multicurrency Account\",\n  \"overdraftLimit\": 0,\n  \"productId\": 11421789399007595,\n  \"savingsOfficerId\": 12545079046479857,\n  \"submittedOnDate\": \"05 March 2024\",\n  \"withHoldTax\": false,\n  \"withdrawalFeeForTransfers\": 53.75,\n  \"maxRequiredBalance\":\"100000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/savingsaccounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"savingsaccounts"
											]
										},
										"description": "create savings account and add charges"
									},
									"response": []
								}
							],
							"id": "6fd18001-3457-43ad-96b9-4fa53f193f8c"
						},
						{
							"name": "CreateSavingsAccount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is a JSON object with specific properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('object');",
											"    pm.expect(jsonData).to.have.property('resourceId');",
											"    pm.expect(jsonData).to.have.property('gsimId');",
											"    pm.expect(jsonData).to.have.property('clientId');",
											"    pm.expect(jsonData).to.have.property('savingsId');",
											"    pm.expect(jsonData).to.have.property('officeId');",
											"});",
											"",
											"pm.test(\"Get savings id\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.collectionVariables.set(\"savingsId\", jsonData.resourceId)",
											"})",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "3408445f-ae5c-4b5c-af5f-fdc88f4372f9"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (10000)) + 1;",
											"",
											"pm.globals.set(\"savingsExternalId\", \"BW10\"+num)",
											"",
											"pm.globals.set(\"savingsAccountNum\", \"850987\"+num)"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "a8fba821-b7f0-46fb-b51f-d481007f2dd3"
									}
								}
							],
							"id": "14cad76f-6c83-4fc4-af7b-f58173fbdadb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"Adebayo Paul\",\n  \"accountNo\": \"{{savingsAccountNum}}\",\n  \"allowOverdraft\": false,\n  \"applicationId\": 1,\n  \"clientId\": 14690260376751992,\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateSpread\": 1.50,\n   //\"indexInterestRateKey\": 11420768491396195,\n  //\"creditArrangementKey\": null,\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"enforceMinRequiredBalance\": false,\n  \"externalId\": \"{{savingsExternalId}}\",\n  \"feeAmount\": 12.25,\n  \"currencyCode\":\"USD\",\n  \"digitsAfterDecimal\": 2, //\n  \"inMultiplesOf\": 10, //\n  \"feeOnMonthDay\": 26.50,\n  \"fieldOfficerId\": 12545079046479857,\n  \"interestCalculationDaysInYearType\": \"DAYS_365\",\n  \"interestCalculationType\": \"DAILY_BALANCE\",\n  \"interestCompoundingPeriodType\": \"DAILY\",\n  \"interestPostingPeriodType\": \"MONTHLY\",\n  \"isGSIM\": false,\n  \"isParentAccount\": false,\n  \"lienAllowed\": true,\n  \"locale\": \"en\",\n  \"lockinPeriodFrequency\": 1,\n  \"lockinPeriodFrequencyType\": \"DAYS\",\n  \"maxAllowedLienLimit\": 1000,\n  \"minOverdraftForInterestCalculation\": 10000,\n//   \"minRequiredBalance\": 2000,\n  \"minRequiredOpeningBalance\": 50000,\n  \"monthDayFormat\": \"dd MMMM\",\n  \"nominalAnnualInterestRate\": 3.50,\n  \"nominalAnnualInterestRateOverdraft\": 10,\n  \"notes\": \"New WHT rate Account\",\n  \"overdraftLimit\": 0,\n  \"productId\": 5466093503466178,\n  \"savingsOfficerId\": 12545079046479857,\n  \"submittedOnDate\": \"11 March 2024\",\n  \"withdrawalFeeForTransfers\": 53.75,\n    \"enforceMaxRequiredBalance\": false,\n// \"maxRequiredBalance\": 200000,\n// \"minRequiredBalance\":1000\n\"withHoldTax\": true,\n\"withholdingTaxRateSource\": \"INDEX_WITHHOLDING_TAX_RATE\", \n\"indexWithholdingTaxRateKey\": 5466020109948511\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts"
									]
								},
								"description": "create savings account and add charges"
							},
							"response": []
						},
						{
							"name": "CreateSavingsAccount for Merchants",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (10000)) + 1;",
											"",
											"pm.globals.set(\"savingsExternalId\", \"BUS\"+num)",
											"",
											"pm.globals.set(\"savingsAccountNum\", \"890987\"+num)"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "f6cbb243-2fb2-4e72-936b-afea2b1aa32a"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is a JSON object with specific properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('object');",
											"    pm.expect(jsonData).to.have.property('resourceId');",
											"    pm.expect(jsonData).to.have.property('gsimId');",
											"    pm.expect(jsonData).to.have.property('clientId');",
											"    pm.expect(jsonData).to.have.property('savingsId');",
											"    pm.expect(jsonData).to.have.property('officeId');",
											"});",
											"",
											"pm.test(\"Get savings id\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"savingsId\", jsonData.resourceId)",
											"})",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "837b9952-d7cc-48f9-aaa5-f7aee00c617b"
									}
								}
							],
							"id": "37503204-2c2b-4ec2-a1fa-4746813f7fe6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"Adebayo Paul\",\n  \"accountNo\": \"{{savingsAccountNum}}\",\n  \"allowOverdraft\": false,\n  \"applicationId\": 1,\n  \"groupId\": 6738274059297165,\n  \"interestRateSource\": \"FIXED_INTEREST_RATE\",\n  \"interestRateSpread\": 1.50,\n   //\"indexInterestRateKey\": 11420768491396195,\n  //\"creditArrangementKey\": null,\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"enforceMinRequiredBalance\": false,\n  \"externalId\": \"{{savingsExternalId}}\",\n  \"feeAmount\": 12.25,\n  \"currencyCode\":\"AED\",\n  \"digitsAfterDecimal\": 2, //\n  \"inMultiplesOf\": 10, //\n  \"feeOnMonthDay\": 26.50,\n  \"fieldOfficerId\": 12545079046479857,\n  \"interestCalculationDaysInYearType\": \"DAYS_365\",\n  \"interestCalculationType\": \"DAILY_BALANCE\",\n  \"interestCompoundingPeriodType\": \"DAILY\",\n  \"interestPostingPeriodType\": \"MONTHLY\",\n  \"isGSIM\": true,\n  \"isParentAccount\": false,\n  \"lienAllowed\": true,\n  \"locale\": \"en\",\n  \"lockinPeriodFrequency\": 1,\n  \"lockinPeriodFrequencyType\": \"DAYS\",\n  \"maxAllowedLienLimit\": 1000,\n  \"minOverdraftForInterestCalculation\": 10000,\n//   \"minRequiredBalance\": 2000,\n  \"minRequiredOpeningBalance\": 50000,\n  \"monthDayFormat\": \"dd MMMM\",\n  \"nominalAnnualInterestRate\": 3.50,\n  \"nominalAnnualInterestRateOverdraft\": 10,\n  \"notes\": \"New Account for Businesses\",\n  \"overdraftLimit\": 0,\n  \"productId\": 1866658105342153,\n  \"savingsOfficerId\": 12545079046479857,\n  \"submittedOnDate\": \"11 June 2024\",\n  \"withHoldTax\": false,\n  \"withdrawalFeeForTransfers\": 53.75,\n    \"enforceMaxRequiredBalance\": false\n// \"maxRequiredBalance\": 200000,\n// \"minRequiredBalance\":1000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts"
									]
								},
								"description": "create savings account and add charges"
							},
							"response": []
						}
					],
					"id": "b222a04d-42ed-44d9-b692-cd65b2009fdf"
				},
				{
					"name": "Approve Savings Account",
					"item": [
						{
							"name": "Positive Scenarios",
							"item": [
								{
									"name": "Approve Savings account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response is in JSON format\", function () {",
													"    pm.response.to.have.header('Content-Type', 'application/json');",
													"});",
													"",
													"pm.test(\"Response has resourceId, clientId, changes, savingsId, and officeId properties\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.have.property('resourceId');",
													"    pm.expect(jsonData).to.have.property('clientId');",
													"    pm.expect(jsonData).to.have.property('changes');",
													"    pm.expect(jsonData).to.have.property('savingsId');",
													"    pm.expect(jsonData).to.have.property('officeId');",
													"});",
													"",
													"pm.test(\"Savings account is approved\", () => {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.changes.status.value).to.be.eqls(\"Approved\")",
													"})"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "cbd47d78-9c4c-4126-8693-2c6fb2201850"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",",
													"  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"",
													"];",
													"const today = new Date();",
													"const yyyy = today.getFullYear();",
													"let mm = today.getMonth();",
													"let dd = today.getDate();",
													"",
													"if(dd<10) dd = '0'+dd;",
													"",
													"const formattedDate = dd+' '+monthNames[mm]+' '+yyyy",
													"pm.globals.set(\"savingsApprovalDate\", formattedDate)"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "425c8e9a-0d6b-4249-86d9-343ddc2813b7"
											}
										}
									],
									"id": "75a9a5af-8b8d-4aba-ba6f-804956cc437c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Fineract-Platform-TenantId",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"approvedOnDate\": \"{{savingsApprovalDate}}\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\",\n  \"note\": \"This savings account application is approved because all requirements fulfilled.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/savingsaccounts/:savingsId?command=approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"savingsaccounts",
												":savingsId"
											],
											"query": [
												{
													"key": "command",
													"value": "approve"
												}
											],
											"variable": [
												{
													"key": "savingsId",
													"value": "{{savingsId}}"
												}
											]
										},
										"description": "create savings account and add charges"
									},
									"response": []
								}
							],
							"id": "c0cc8c17-4cdc-4330-ad66-e7e23d0b6154"
						},
						{
							"name": "Negative Scenarios",
							"item": [
								{
									"name": "Approve an already approved account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content type is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"pm.test(\"Response has errors array\", function () {",
													"    pm.expect(pm.response.json()).to.have.property('errors').that.is.an('array');",
													"});"
												],
												"type": "text/javascript",
												"id": "4ed1e6a8-e710-401f-a64c-367f387343e2"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",",
													"  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"",
													"];",
													"const today = new Date();",
													"const yyyy = today.getFullYear();",
													"let mm = today.getMonth();",
													"let dd = today.getDate();",
													"",
													"if(dd<10) dd = '0'+dd;",
													"",
													"const formattedDate = dd+' '+monthNames[mm]+' '+yyyy",
													"pm.globals.set(\"savingsApprovalDate\", formattedDate)"
												],
												"type": "text/javascript",
												"id": "cbfc4882-4d54-4d83-8f2d-aa8aa9a7f797"
											}
										}
									],
									"id": "10ed5f9c-4c07-41ed-9b2c-02c7e7216b16",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Fineract-Platform-TenantId",
												"value": "default",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"approvedOnDate\": \"{{savingsApprovalDate}}\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\",\n  \"note\": \"This savings account application is approved because all requirements fulfilled.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/savingsaccounts/{{savingsId}}?command=approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"savingsaccounts",
												"{{savingsId}}"
											],
											"query": [
												{
													"key": "command",
													"value": "approve"
												}
											]
										},
										"description": "create savings account and add charges"
									},
									"response": []
								}
							],
							"id": "62932ca8-462a-4987-ba6c-52a6a10c1d24"
						}
					],
					"id": "d0b10485-3ac9-44dd-a1ac-0a4297f05dee"
				},
				{
					"name": "Fetch Savings Account",
					"item": [
						{
							"name": "Get All Savings Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response contains totalFilteredRecords property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('totalFilteredRecords');",
											"});",
											"",
											"pm.test(\"Response contains totalFilteredRecords greater than 0\", function () {",
											"    pm.expect(pm.response.json().totalFilteredRecords).to.be.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Each element in pageItems array has clientId property\", function () {",
											"    pm.response.json().pageItems.forEach(function(item) {",
											"        pm.expect(item).to.have.property('clientId');",
											"    });",
											"});",
											"",
											"pm.test(\"Each element in pageItems array has savingsProductId property\", function () {",
											"    pm.response.json().pageItems.forEach(function(item) {",
											"        pm.expect(item).to.have.property('savingsProductId');",
											"    });",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "095c0006-0113-4950-b557-0bae69a0663b"
									}
								}
							],
							"id": "07ec6e57-4621-4591-a5f0-f255922e89d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts"
									]
								},
								"description": "create savings account and add charges"
							},
							"response": []
						},
						{
							"name": "Get Single Savings Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is an object with specific properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('object');",
											"    pm.expect(jsonData).to.have.property('savingsProductId');",
											"    pm.expect(jsonData).to.have.property('interestChargeFrequencyCount');",
											"    pm.expect(jsonData).to.have.property('nominalAnnualInterestRate');",
											"    pm.expect(jsonData).to.have.property('minRequiredOpeningBalance');",
											"    pm.expect(jsonData).to.have.property('status');",
											"    pm.expect(jsonData).to.have.property('currency');",
											"    pm.expect(jsonData).to.have.property('clientId');",
											"    pm.expect(jsonData).to.have.property('allowOverdraft');",
											"    pm.expect(jsonData).to.have.property('accountNo');",
											"    pm.expect(jsonData).to.have.property('summary');",
											"    pm.expect(jsonData).to.have.property('enforceMinRequiredBalance');",
											"    pm.expect(jsonData).to.have.property('withHoldTax');",
											"    pm.expect(jsonData).to.have.property('depositType');",
											"    pm.expect(jsonData).to.have.property('minBalanceForInterestCalculation');",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "35758f05-b4c6-4342-989c-3eed147dcb11"
									}
								}
							],
							"id": "2d7e8759-8b17-4941-9b4b-6a400919b239",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								},
								"description": "create savings account and add charges"
							},
							"response": []
						},
						{
							"name": "Verify Total WithHoldingTax",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"pm.test(\"Response is an object with specific properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('object');",
											"    pm.expect(jsonData).to.have.property('savingsProductId');",
											"    pm.expect(jsonData).to.have.property('interestChargeFrequencyCount');",
											"    pm.expect(jsonData).to.have.property('nominalAnnualInterestRate');",
											"    pm.expect(jsonData).to.have.property('minRequiredOpeningBalance');",
											"    pm.expect(jsonData).to.have.property('status');",
											"    pm.expect(jsonData).to.have.property('currency');",
											"    pm.expect(jsonData).to.have.property('clientId');",
											"    pm.expect(jsonData).to.have.property('allowOverdraft');",
											"    pm.expect(jsonData).to.have.property('accountNo');",
											"    pm.expect(jsonData).to.have.property('summary');",
											"    pm.expect(jsonData).to.have.property('enforceMinRequiredBalance');",
											"    pm.expect(jsonData).to.have.property('withHoldTax');",
											"    pm.expect(jsonData).to.have.property('depositType');",
											"    pm.expect(jsonData).to.have.property('minBalanceForInterestCalculation');",
											"    pm.expect(jsonData.summary).to.have.property('totalWithholdTax');",
											"});",
											"",
											"pm.test(\"Total Withholding tax exists\", ()=>{",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.summary.totalWithholdTax).to.exist;",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "7cee7056-9ef1-486d-a2e1-d483b4ab9907"
									}
								}
							],
							"id": "6feeb7da-de0b-4cb9-8bed-ea7a1074fddb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "5468128078243643"
										}
									]
								},
								"description": "create savings account and add charges"
							},
							"response": []
						}
					],
					"id": "036d061a-a8b9-44b7-b092-ae413b3be059"
				},
				{
					"name": "Activate Savings Account",
					"item": [
						{
							"name": "Activate Savings account",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",",
											"  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"",
											"];",
											"const today = new Date();",
											"const yyyy = today.getFullYear();",
											"let mm = today.getMonth();",
											"let dd = today.getDate();",
											"",
											"if(dd<10) dd = '0'+dd;",
											"",
											"const formattedDate = dd+' '+monthNames[mm]+' '+yyyy",
											"pm.globals.set(\"savingsActivationDate\", formattedDate)"
										],
										"type": "text/javascript",
										"id": "89240d95-4758-46a8-9d58-148bbb5680ea"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is in JSON format\", function () {",
											"    pm.response.to.have.header('Content-Type', 'application/json');",
											"});",
											"",
											"pm.test(\"Response has resourceId, clientId, changes, savingsId, and officeId properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('resourceId');",
											"    pm.expect(jsonData).to.have.property('clientId');",
											"    pm.expect(jsonData).to.have.property('changes');",
											"});",
											"",
											"pm.test(\"Savings account is active\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.changes.status.value).to.be.eqls(\"Active\")",
											"})"
										],
										"type": "text/javascript",
										"id": "cf0f09fc-96c3-4d80-ab5e-ea2e6a3a7f6a"
									}
								}
							],
							"id": "7957b765-af51-48ac-969d-2578830dc657",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activatedOnDate\": \"{{savingsActivationDate}}\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/{{savingsId}}?command=activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										"{{savingsId}}"
									],
									"query": [
										{
											"key": "command",
											"value": "activate"
										}
									]
								},
								"description": "create savings account and add charges"
							},
							"response": []
						}
					],
					"id": "456085f2-ab5b-42d2-b478-b7fdb8041741"
				},
				{
					"name": "Change Interest",
					"item": [
						{
							"name": "Change interest Rate on Active Account API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is a JSON object\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"pm.test(\"Response is a valid JSON object\", function () {",
											"    pm.response.to.have.jsonBody();",
											"});",
											"",
											"pm.test(\"Response has a specific property\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('resourceId');",
											"    pm.expect(pm.response.json()).to.have.property('changes');",
											"    pm.expect(pm.response.json()).to.have.property('savingsId');",
											"",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "6a496a49-1cad-44bd-8d10-83fe9954e12f"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (99 - 1 + 1)) + 1;",
											"pm.collectionVariables.set(\"newInterestRate\", 10.0+num/10);",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "1a65f84c-57f7-4c2f-abb9-eea90d29fdde"
									}
								}
							],
							"id": "c61162c5-0ae0-4a1a-9ea0-3f17662c14c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nominalAnnualInterestRate\": {{newInterestRate}},\n  \"valueDate\": \"{{todaysDate}}\",\n  \"note\": \"Changing of nominalAnnualInterestRate to {{newInterestRate}}%\",\n  \"locale\": \"en\",\n  \"dateFormat\": \"dd MMMM yyyy\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId?command=changeInterestRate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId"
									],
									"query": [
										{
											"key": "command",
											"value": "changeInterestRate"
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "f8358ee2-946e-44e7-b6b0-0fc3a22854e8"
				},
				{
					"name": "Savings Account Interest Availability",
					"item": [
						{
							"name": "Create a Savings Account Interest Availability",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (99 - 1 + 1)) + 1;",
											"pm.collectionVariables.set(\"newInterestRate\", 10.0+num/10);",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "40ef6a4e-9ec5-465f-9c00-705701492b85"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "6facb2e0-8a34-4223-9832-bda7aaae2382"
									}
								}
							],
							"id": "0f116708-b274-42da-bdc8-d65768867282",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"interestRate\": {{newInterestRate}},\n  \"startDate\": \"{{todaysDate}}\",\n  \"locale\": \"en\",\n  \"dateFormat\": \"dd MMMM yyyy\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savings-accounts/:savingsId/interest-availabilities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savings-accounts",
										":savingsId",
										"interest-availabilities"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Savings Account Interest Availability",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (99 - 1 + 1)) + 1;",
											"pm.collectionVariables.set(\"newInterestRate\", 10.0+num/10);",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "5d92483b-22c2-493c-856d-076f56b676c9"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that interest rate updates successful\", ()=>{",
											"    var nominalInterestValue = parseFloat(pm.collectionVariables.get(\"newInterestRate\"));",
											"    var jsonData = pm.response.json().changes",
											"    pm.expect(jsonData.interestRate).to.eql(nominalInterestValue)",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "cfcfb3db-995d-4d3c-abd0-85bd2b25c857"
									}
								}
							],
							"id": "3522c4a3-538b-4adf-ac32-4db9dc0c3524",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"interestRate\": {{newInterestRate}},\n  \"locale\": \"en\",\n//   \"startDate\": \"26 September 2024\",\n  \"dateFormat\": \"dd MMMM yyyy\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savings-accounts/:savingsId/interest-availabilities/:savingsAvailablityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savings-accounts",
										":savingsId",
										"interest-availabilities",
										":savingsAvailablityId"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										},
										{
											"key": "savingsAvailablityId",
											"value": "{{savingsAvailabilityId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieval of all Savings Account Interest Availabilities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is an array\", function () {",
											"    const responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Response is an array\", function () {",
											"    const responseData = pm.response.json();",
											"    responseData.forEach(config => {",
											"        pm.expect(config).to.have.property('interestRate')",
											"        pm.expect(config).to.have.property('accountId')",
											"        pm.expect(config).to.have.property('overdraftInterestRate')",
											"        pm.expect(config).to.have.property('externalId')",
											"        pm.expect(config).to.have.property('interestRateSpread')",
											"        pm.expect(config).to.have.property('id')",
											"        pm.expect(config).to.have.property('startDate')",
											"    });",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "2d7e4680-09d9-4b5f-acf7-fd8f09a08c41"
									}
								}
							],
							"id": "3e35c338-12af-4956-ab50-77dbd33a52b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savings-accounts/:savingsId/interest-availabilities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savings-accounts",
										":savingsId",
										"interest-availabilities"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieval of a Savings Account Interest Availability",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response contains specific properties\", () => {",
											"    var config = pm.response.json()",
											"    pm.expect(config).to.have.property('interestRate')",
											"    pm.expect(config).to.have.property('accountId')",
											"    pm.expect(config).to.have.property('overdraftInterestRate')",
											"    pm.expect(config).to.have.property('externalId')",
											"    pm.expect(config).to.have.property('interestRateSpread')",
											"    pm.expect(config).to.have.property('id')",
											"    pm.expect(config).to.have.property('startDate')",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "934221c1-0926-4791-a9f4-0ac07e3badde"
									}
								}
							],
							"id": "56cb8c79-f1c3-4afe-9f17-354b98f7036d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savings-accounts/:savingsId/interest-availabilities/:savingsAvailabilityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savings-accounts",
										":savingsId",
										"interest-availabilities",
										":savingsAvailabilityId"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										},
										{
											"key": "savingsAvailabilityId",
											"value": "{{savingsAvailabilityId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Savings Account Interest Availability",
							"id": "6b1bbfb6-e732-462d-b455-7da3f6d712ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/savings-accounts/:savingId/interest-availabilities/:savingsAvalabilityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savings-accounts",
										":savingId",
										"interest-availabilities",
										":savingsAvalabilityId"
									],
									"variable": [
										{
											"key": "savingId",
											"value": "{{savingsId}}"
										},
										{
											"key": "savingsAvalabilityId",
											"value": "{{savingsAvailabilityId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "271770d2-ba08-4a09-90e1-2b18ce09552a"
				},
				{
					"name": "Savings Transactions",
					"item": [
						{
							"name": "Deposit Money",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											"",
											"pm.test(\"Get savings deposit id\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.resourceId).to.exist",
											"    pm.collectionVariables.set(\"savingsDepositId\", jsonData.resourceId)",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "02c59285-657a-4fa0-9c2e-d99f0edc5eae"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (100000 - 1000 + 500)) + 100;",
											"pm.collectionVariables.set(\"amountToDeposit\", num);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "07180e9b-6a13-410d-954d-6d85d3bcca19"
									}
								}
							],
							"id": "a8487fc7-09dc-43a9-971d-4af91f43a235",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionDate\": \"{{todaysDate}}\",\n  \"transactionAmount\": {{amountToDeposit}},\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/transactions?command=deposit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions"
									],
									"query": [
										{
											"key": "command",
											"value": "deposit"
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Withdraw Money",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											"",
											"pm.test(\"Get savings withdrawal id\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.resourceId).to.exist",
											"    pm.globals.set(\"savingsWithdrawalId\", jsonData.resourceId)",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "cc258914-dcc0-4af8-bb33-0576c609b52d"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (10000 - 100 + 50)) + 10;",
											"pm.collectionVariables.set(\"amountToWithdraw\", num);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "a525803e-3c6e-4d3d-b922-6862e87b88ce"
									}
								}
							],
							"id": "838ac3e9-3a9e-46ab-914b-1d3694369c0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{fineract_platform_tenantid}}",
										"value": "default",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionDate\": \"{{todaysDate}}\",\n  \"transactionAmount\": {{amountToWithdraw}},\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/transactions?command=withdrawal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions"
									],
									"query": [
										{
											"key": "command",
											"value": "withdrawal"
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AdjustTransaction",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (100000 - 1000 + 500)) + 100;",
											"pm.collectionVariables.set(\"amountToAdjust\", num);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "f61595a4-8474-4e50-af13-8bde91d62c3e"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(pm.environment.get('baseSuccessTest'))();",
											"",
											"pm.test(\"Test that transactions can be adjusted\", () => {",
											"    var jsonData = pm.response.json().changes",
											"    pm.expect(jsonData).to.have.property('accountNumber')",
											"    pm.expect(jsonData).to.have.property('checkNumber')",
											"    pm.expect(jsonData).to.have.property('routingCode')",
											"    pm.expect(jsonData).to.have.property('receiptNumber')",
											"    pm.expect(jsonData).to.have.property('bankNumber')",
											"",
											"})",
											"",
											"pm.test(\"Get modified savings transaction id\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.resourceId).to.exist",
											"    pm.globals.set(\"modSavingsTransactionId\", jsonData.resourceId)",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "e4debc12-8c82-4810-b7da-919a261c7470"
									}
								}
							],
							"id": "b0ebf7a4-5c7d-4a30-96b4-691235a47356",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "mifos",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"locale\": \"en\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"transactionDate\": \"{{todaysDate}}\",\n  \"transactionAmount\": \"{{amountToAdjust}}\",\n  \"paymentTypeId\": \"3\",\n  \"accountNumber\": \"1000000009\",\n  \"checkNumber\": \"che123\",\n  \"routingCode\": \"rou123\",\n  \"receiptNumber\": \"RCPT#SN{{amountToAdjust}}\",\n  \"bankNumber\": \"bank123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/transactions/:transactionId?command=modify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions",
										":transactionId"
									],
									"query": [
										{
											"key": "command",
											"value": "modify"
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										},
										{
											"key": "transactionId",
											"value": "{{savingsDepositId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adjust Already Modified Transaction",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (100000 - 1000 + 500)) + 100;",
											"pm.collectionVariables.set(\"amountToAdjust\", num);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "629af706-9d14-496b-b8bb-f22fc5906f2d"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for response status code is 503",
											"pm.test(\"Response status code is 503\", function () {",
											"    pm.response.to.have.status(503);",
											"});",
											"",
											"pm.test(\"Response is a JSON object with specific properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('object');",
											"    pm.expect(jsonData).to.have.property('developerMessage');",
											"    pm.expect(jsonData).to.have.property('httpStatusCode');",
											"    pm.expect(jsonData).to.have.property('defaultUserMessage');",
											"    pm.expect(jsonData).to.have.property('userMessageGlobalisationCode');",
											"    pm.expect(jsonData).to.have.property('errors');",
											"});",
											"",
											"pm.test(\"Savings account number already exists error is returned\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].developerMessage).to.contains(\"Savings Account transaction update not allowed with savings\")",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "b2f9c345-8740-4531-b654-9eec2db9db58"
									}
								}
							],
							"id": "fd4e5ef9-a714-4c77-8c9a-212c7de237a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "mifos",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"locale\": \"en\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"transactionDate\": \"{{todaysDate}}\",\n  \"transactionAmount\": \"{{amountToAdjust}}\",\n  \"paymentTypeId\": \"3\",\n  \"accountNumber\": \"1000000009\",\n  \"checkNumber\": \"che123\",\n  \"routingCode\": \"rou123\",\n  \"receiptNumber\": \"rec123\",\n  \"bankNumber\": \"bank123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/transactions/:transactionId?command=modify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions",
										":transactionId"
									],
									"query": [
										{
											"key": "command",
											"value": "modify"
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										},
										{
											"key": "transactionId",
											"value": "{{savingsDepositId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAllTransactionsForSavingsAccount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response contains an array of transactions\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('transactions').that.is.an('array');",
											"});",
											"",
											"pm.test(\"Each transaction has required properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    jsonData.transactions.forEach(function(transaction) {",
											"        pm.expect(transaction).to.have.property('amount');",
											"        pm.expect(transaction).to.have.property('transactionType');",
											"        pm.expect(transaction).to.have.property('runningBalance');",
											"        pm.expect(transaction).to.have.property('submittedOnDate');",
											"        pm.expect(transaction).to.have.property('transactionReference').to.be.a('string')",
											"        pm.expect(transaction).to.have.property('customerName');",
											"        pm.expect(transaction).to.have.property('accountId');",
											"        pm.expect(transaction).to.have.property('accountNo');",
											"        pm.expect(transaction).to.have.property('currency');",
											"    });",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "9c0b4050-ca8b-4f66-968f-c51e83d4c029"
									}
								}
							],
							"id": "71e36a86-1f09-49e2-a702-5717fbb0cb56",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"typeOf\": 3,\n  \"amount\":4000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/transactions-only/:savingsId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										"transactions-only",
										":savingsId"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieval of a Transaction Sub-Ledger for a Savings Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Transactions sub ledger are retrieved successfully\", function () {",
											"    pm.expect(pm.response.json()).to.have.property('lienTransaction');",
											"    pm.expect(pm.response.json()).to.have.property('officeName');",
											"    pm.expect(pm.response.json()).to.have.property('balanceBefore');",
											"    pm.expect(pm.response.json()).to.have.property('id');",
											"    pm.expect(pm.response.json()).to.have.property('originalTransactionId');",
											"    pm.expect(pm.response.json()).to.have.property('officeId');",
											"    pm.expect(pm.response.json()).to.have.property('transactionReference');",
											"    pm.expect(pm.response.json()).to.have.property('customerName');",
											"    pm.expect(pm.response.json()).to.have.property('accountId');",
											"    pm.expect(pm.response.json()).to.have.property('submittedByUsername');",
											"    pm.expect(pm.response.json()).to.have.property('currency');",
											"    pm.expect(pm.response.json()).to.have.property('amount');",
											"    pm.expect(pm.response.json()).to.have.property('clientId');",
											"    pm.expect(pm.response.json()).to.have.property('narration');",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "e3f88cba-cf28-424f-a0ee-4b31db6c4d73"
									}
								}
							],
							"id": "65dca810-d923-41ec-9aa3-15afbbf19507",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{fineract-url}}/savingsaccounts/:savingsId/transactions/:transactionId",
									"host": [
										"{{fineract-url}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										},
										{
											"key": "transactionId",
											"value": "{{savingsDepositId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieval of Customer (Savings) Account Sub-Ledger",
							"id": "c8eb2233-e115-4c24-9006-ced136769f6e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{fineract-tenant-platformid}}",
										"value": "default",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{fineract-url}}/savingsaccounts/:savingsId/transactions/sub-ledger?paged=true&offset=0&limit=10&orderBy=&sortOrder=",
									"host": [
										"{{fineract-url}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions",
										"sub-ledger"
									],
									"query": [
										{
											"key": "paged",
											"value": "true"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "orderBy",
											"value": ""
										},
										{
											"key": "sortOrder",
											"value": ""
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CriteriaSearch",
							"id": "aacae68f-23b9-4aac-9013-f6ee02e8ec68",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"typeOf\": 1,\n  \"amount\":200000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/transactions/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions",
										"search"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "EditCustomNotes",
							"id": "7deacf34-3523-4fc2-baff-b151d12c2eb6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "mifos",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionId\": 13297176924041,\n  \"accountId\": 319465239124000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}savingsaccounts/:savingsId/transactions/editCustomNotes",
									"host": [
										"{{baseUrl}}savingsaccounts"
									],
									"path": [
										":savingsId",
										"transactions",
										"editCustomNotes"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MakeBulkDeposit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response returns a success response\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData).to.have.property('message');",
											"    pm.expect(jsonData.status).eql('Successful')",
											"    pm.expect(jsonData.message).eql('Successful')",
											"});",
											"",
											"pm.test(\"Get bulk deposit key\", function () {",
											"    var jsonData = pm.response.json().data",
											"    pm.collectionVariables.set(\"bulkDepositKey\", jsonData.key)",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "f89fac85-b2dd-44f7-b72f-80c11f32d31c"
									}
								}
							],
							"id": "44939b54-7cc7-4b37-bf5b-7c2d692a0c41",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"contentType": "",
											"type": "file",
											"src": "postman-cloud:///1ef477fd-eb29-4940-bc07-b20b58d58c57"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/transactions/makeBulkDeposit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions",
										"makeBulkDeposit"
									],
									"query": [
										{
											"key": "file",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "StatusQueryForBulkDeposit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response returns a success response\", function () {",
											"    var jsonData = pm.response.json()",
											"    pm.expect(jsonData).to.have.property('message');",
											"    pm.expect(jsonData.status).eql('Successful')",
											"    pm.expect(jsonData.message).eql('Successful')",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "c6a81a5f-0701-4fc0-a0d5-3a98129fd33a"
									}
								}
							],
							"id": "6134a640-c8a9-44d3-b4ce-cbd8c8c90aaf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "mifos",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/{{savingsId}}/transactions/statusQueryForBulkDeposit?key={{bulkDepositKey}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										"{{savingsId}}",
										"transactions",
										"statusQueryForBulkDeposit"
									],
									"query": [
										{
											"key": "key",
											"value": "{{bulkDepositKey}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "downloadBulkDepositReport",
							"id": "d82a2bb1-9327-4efc-b044-8150bf97cc2e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/transactions/downloadBulkDepositReport?key={{bulkDepositKey}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"transactions",
										"downloadBulkDepositReport"
									],
									"query": [
										{
											"key": "key",
											"value": "{{bulkDepositKey}}"
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "{{savingsId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "7a08cefe-25aa-409d-8769-fd09af766d8f"
				},
				{
					"name": "Savings Charge",
					"item": [
						{
							"name": "FetchCharges",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (1000)) + 1;",
											"",
											"pm.globals.set(\"chargeName\", \"TestAutomationCharge\"+num)"
										],
										"type": "text/javascript",
										"id": "c7e6e650-2259-4096-9646-ece5ed8a1987"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is an array of objects\", function () {",
											"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;",
											"    pm.response.json().forEach(function(charge) {",
											"        pm.expect(charge).to.be.an('object');",
											"    });",
											"});",
											"pm.test(\"Each charge object has required properties\", function () {",
											"    pm.response.json().forEach(function(charge) {",
											"        pm.expect(charge).to.have.property('penalty').that.is.a('boolean');",
											"        pm.expect(charge).to.have.property('amount').that.is.a('number');",
											"        pm.expect(charge).to.have.property('active').that.is.a('boolean');",
											"        pm.expect(charge).to.have.property('isPaymentType').that.is.a('boolean');",
											"        pm.expect(charge).to.have.property('freeWithdrawal').that.is.a('boolean');",
											"    });",
											"});"
										],
										"type": "text/javascript",
										"id": "a6955703-b2cd-4e8e-a6fe-d3f7d0cc8425"
									}
								}
							],
							"id": "501588ac-4e4c-45fd-bf86-2825b1320224",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chargeAppliesTo\": 2,\n    \"name\": \"{{chargeName}}\",\n    \"currencyCode\": \"NGN\",\n    \"chargeTimeType\": 19,\n    \"chargeCalculationType\": 1,\n    \"amount\": \"1000\",\n    \"active\": true,\n    \"enableFreeWithdrawalCharge\": false,\n    \"enablePaymentType\": false,\n    \"locale\": \"en\",\n    \"monthDayFormat\": \"dd MMM\",\n    \"minimumTransactionAmount\": \"0\",\n    \"maximumTransactionAmount\": \"30000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/charges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charges"
									]
								}
							},
							"response": []
						},
						{
							"name": "addChargeToAccount",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var num = Math.floor(Math.random() * (1000 - 100 + 50)) + 10;",
											"pm.collectionVariables.set(\"amountToCharge\", num);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "3015d70c-d4f2-4438-97f3-31c9028b6ed3"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get savings charge id\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.resourceId).to.exist",
											"    pm.collectionVariables.set(\"savingsChargeId\", jsonData.resourceId)",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "09a1d261-604a-4765-b3e9-68ac58e30120"
									}
								}
							],
							"id": "37fcf4cc-b076-4b08-b60e-4315d78aefdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"chargeId\": 10814943544032424,\n  \"amount\": \"{{amountToCharge}}\",\n  \"locale\": \"en\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"dueDate\": \"{{todaysDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/charges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"charges"
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "7973452448520586"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PayFee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get savings charge transaction id\", () => {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.resourceId).to.exist",
											"    pm.globals.set(\"savingsChargeTransactionId\", jsonData.resourceId)",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "69bd6731-3b4f-480e-9a1c-12fa706c27bd"
									}
								}
							],
							"id": "77e79773-9a87-4912-9c62-7899c88ea08e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Fineract-Platform-TenantId",
										"value": "default",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateFormat\": \"dd MMMM yyyy\",\n    \"locale\": \"en\",\n    \"amount\": {{amountToCharge}},\n    \"dueDate\": \"{{todaysDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/savingsaccounts/:savingsId/charges/:savingsChargeId?command=paycharge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"savingsaccounts",
										":savingsId",
										"charges",
										":savingsChargeId"
									],
									"query": [
										{
											"key": "command",
											"value": "paycharge"
										}
									],
									"variable": [
										{
											"key": "savingsId",
											"value": "7973452448520586"
										},
										{
											"key": "savingsChargeId",
											"value": "{{savingsChargeId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "a7f98a5b-bef2-4b5f-be59-acd900f56118"
				},
				{
					"name": "Calculate Interest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Response is a JSON object with specific properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    const resourceId = jsonData.resourceId;",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('resourceId');",
									"    pm.expect(jsonData).to.have.property('clientId');",
									"    pm.expect(jsonData).to.have.property('changes');",
									"    pm.expect(resourceId.length).to.be.greaterThan(0, \"Resource ID should not be empty\");",
									"});",
									"",
									"pm.test(\"Changes response is a JSON object with specific properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    var changesData = jsonData.changes;",
									"    pm.expect(changesData).to.have.property('InterestPostingPeriods');",
									"    pm.expect(changesData.InterestPostingPeriods).to.be.an('array');",
									"    pm.expect(changesData).to.have.property('totalInterestEarned');",
									"    pm.expect(changesData).to.have.property('lastInterestCalculationDate');",
									"    pm.expect(changesData).to.have.property('accountBalance')",
									"  ",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a9f771e0-174d-4891-a360-0b64d723a0bc"
							}
						}
					],
					"id": "6d706d23-7a4c-491f-abb2-fe4e7392ab80",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/savingsaccounts/:savingsId?command=calculateInterest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsaccounts",
								":savingsId"
							],
							"query": [
								{
									"key": "command",
									"value": "calculateInterest"
								}
							],
							"variable": [
								{
									"key": "savingsId",
									"value": "{{savingsId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Interest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();",
									"",
									"pm.test(\"Response is an array of objects with specific properties\", function () {",
									"    var jsonData = pm.response.json().changes",
									"    pm.expect(jsonData).to.be.an('object').that.is.not.empty;",
									"",
									"    pm.expect(jsonData).to.have.property('totalInterestEarned');",
									"    pm.expect(jsonData).to.have.property('totalInterestPosted');",
									"    pm.expect(jsonData).to.have.property('lastInterestCalculationDate');",
									"    pm.expect(jsonData).to.have.property('interestPostedTillDate');",
									"    pm.expect(jsonData).to.have.property('accountBalance');",
									"",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "00d621ae-c9aa-4b1f-823f-b91cfbac06d7"
							}
						}
					],
					"id": "1078f5e3-de0d-4796-bbdd-0089c40e8508",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isPostInterestAsOn\": true,\n  \"transactionDate\": \"{{todaysDate}}\",\n  \"dateFormat\": \"dd MMMM yyyy\",\n  \"locale\": \"en\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsaccounts/:savingId?command=postInterest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsaccounts",
								":savingId"
							],
							"query": [
								{
									"key": "command",
									"value": "postInterest"
								}
							],
							"variable": [
								{
									"key": "savingId",
									"value": "{{savingsId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Manual Running of Interest Calculation Jobs for Savings Account Interest Availability",
					"id": "f5e57d18-d571-43de-bb9b-e6e1a1c9b90c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{fineract_platform_tenantid}}",
								"value": "default",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/savings-accounts/:savingsAccountId/interest-availabilities/manual-run-interest-calculation-jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savings-accounts",
								":savingsAccountId",
								"interest-availabilities",
								"manual-run-interest-calculation-jobs"
							],
							"variable": [
								{
									"key": "savingsAccountId",
									"value": "{{savingsId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BlockFund",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var num = Math.floor(Math.random() * (1000 - 100 + 200)) + 50;",
									"pm.collectionVariables.set(\"blockExternalReference\", \"BLOCK\"+num);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "941b5122-c124-4178-9d6d-d40a70ce5e5e"
							}
						}
					],
					"id": "ee926736-b45c-4438-875d-b1aa26f0aa1d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fineract-Platform-TenantId",
								"value": "default",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 1000,\n  \"notes\": \"Block this amount\",\n  \"externalReferenceId\": \"BLOCK\",\n  \"locale\":\"en_NG\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savings-accounts/block-funds/:savingsId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savings-accounts",
								"block-funds",
								":savingsId"
							],
							"variable": [
								{
									"key": "savingsId",
									"value": "{{savingsId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "MakeSeizure",
					"id": "352e8282-483f-497a-a29f-fc4406bf0c25",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fineract-Platform-TenantId",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"savingsAccountId\": 14166529843379048,\n  \"blockId\": {{blockSavingsId}},\n  \"amount\": 1000.00,\n   \"dateFormat\": \"dd MMMM yyyy\",\n  \"transactionDate\": \"{{todaysdate_ydm\",\n  \"locale\": \"en\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsaccounts/2/transactions/makeSeizure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsaccounts",
								"2",
								"transactions",
								"makeSeizure"
							]
						}
					},
					"response": []
				},
				{
					"name": "Map Accounts to Nuban",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "33ad828b-0446-4140-87c5-04af0736ed17"
							}
						}
					],
					"id": "5a9c58c5-5001-44c7-8b20-9aefa9c1d896",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fineract-Platform-TenantId",
								"value": "default",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mappedBy\": \"ACCOUNT_ID\",\n    \"accountType\": \"SAVINGS_DEPOSIT\",\n    \"accountIdList\": [\"1000000044\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/savingsaccounts/map-accounts-to-new-nuban",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"savingsaccounts",
								"map-accounts-to-new-nuban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Savings Account Pagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get('baseSuccessTest'))();"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "192a7d95-d622-4b80-95c6-1a7a88baf257"
							}
						}
					],
					"id": "ad24a505-e97a-4af8-80e5-679412db1871",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fineract-platform-tenantid",
								"value": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic bWlmb3M6cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"jqlRequestFilterList\": [\n    {\n         \"parameterName\": \"currencyCode\",\n        \"value\": [\"NGN\"],\n        \"operation\": \"EQ\"\n    }\n    // {\n    //     \"parameterName\": \"statusEnum\",\n    //     \"value\": [300],\n    //     \"operation\": \"EQ\"\n    // }\n    // {\n    //     \"parameterName\": \"productId\",\n    //     \"value\": [7713662640689334],\n    //     \"operation\": \"EQ\"\n    // }\n  ],\n  \"page\": {\n    \"paged\": true,\n    \"pageNumber\": 2,\n    \"pageSize\": 5\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/filter/savingsaccounts/paginated",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filter",
								"savingsaccounts",
								"paginated"
							]
						}
					},
					"response": []
				}
			],
			"id": "49b0019a-2d71-4325-b2d4-c0496e9c49ea"
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{basicAuthUsername}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{basicAuthPassword}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var baseSuccessTest = () => {",
					"    pm.test(\"Response status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"",
					"    pm.test(\"Response is a JSON object\", function () {",
					"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
					"    });",
					"",
					"    pm.test(\"Response is a valid JSON object\", function () {",
					"        pm.response.to.have.jsonBody();",
					"    });",
					"}   ",
					"",
					"pm.environment.set('baseSuccessTest',baseSuccessTest.toString());",
					"",
					"",
					"",
					"",
					"//*****Util Functions */",
					"pm.request.headers.add({",
					"  key: 'Fineract-Platform-TenantId',",
					"  value: 'default'",
					"});",
					"",
					"var getTodaysDate = () =>{",
					"",
					"    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];",
					"",
					"    const today = new Date();",
					"    const yyyy = today.getFullYear()",
					"    let mm = today.getMonth()+1",
					"    let dd = today.getDate()",
					"",
					"    let month = months[mm-1]",
					"",
					"    if(dd<10) dd = '0' + dd",
					"    if(mm<10) mm = '0' + mm",
					"    ",
					"",
					"    const formattedDate = dd + ' ' + month + ' ' + yyyy",
					"    const yyyyMMddDate = yyyy + '-' +mm+ '-' + dd",
					"",
					"",
					"    pm.collectionVariables.set('todaysDate',formattedDate)",
					"    pm.collectionVariables.set('todaysdate_ydm',yyyyMMddDate)",
					"",
					"",
					"}",
					"",
					"getTodaysDate()"
				],
				"id": "761f3816-95f2-4c8b-b782-10e887bf9173"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (pm.request.method === 'GET') {",
					"    // Run the test using the eval function",
					"    eval(pm.environment.get('baseSuccessTest'))();",
					"}",
					"",
					"if (pm.request.method === 'DELETE') {",
					"    // Run the test using the eval function",
					"    eval(pm.environment.get('baseSuccessTest'))();",
					"}",
					"",
					"if (pm.request.method === 'PUT') {",
					"    // Run the test using the eval function",
					"    eval(pm.environment.get('baseSuccessTest'))();",
					"}",
					""
				],
				"id": "23dfe975-1569-4492-bfa5-caf156315919"
			}
		}
	],
	"variable": [
		{
			"id": "4358e827-497c-4385-9f87-c16c5b185046",
			"key": "baseUrl",
			"value": "https://dev-cba.blusalt.net/fineract-provider/api/v1",
			"type": "string"
		},
		{
			"id": "d4be9938-ba59-46a1-87fb-ff9c2704f3fe",
			"key": "baseUr",
			"value": "https://cba.blusalt.co/fineract-provider/api/v1",
			"type": "string"
		},
		{
			"id": "acba4911-958b-42e9-9a7f-3d60fd1c5f03",
			"key": "basicAuthUsername",
			"value": "endurance"
		},
		{
			"id": "05859f3c-3852-42a9-b193-19a527499601",
			"key": "basicAuthPassword",
			"value": "Endurance230223#"
		},
		{
			"id": "b704e9a3-7142-4703-9b96-09987649cde9",
			"key": "fineract_platform_tenantid",
			"value": "Fineract-Platform-TenantId",
			"type": "string"
		},
		{
			"id": "713f8174-b348-40d9-8fa0-ed3057e5fda9",
			"key": "fineract_tenant",
			"value": "Fineract-Platform-TenantId",
			"type": "string"
		},
		{
			"id": "c113b649-644e-42d8-b7bf-595a18ac2f3b",
			"key": "todaysDate",
			"value": ""
		},
		{
			"id": "962a4a82-3573-4d0e-8765-222fadba3380",
			"key": "todaysdate_ydm",
			"value": ""
		},
		{
			"id": "fd383d68-c1b9-41a7-b1a9-8408641499e4",
			"key": "accountTransferId",
			"value": ""
		},
		{
			"id": "3f3fc2a7-bd63-4ce8-a1f2-c55d8a8b1015",
			"key": "externalReferenceId",
			"value": ""
		},
		{
			"id": "aa08f12a-adda-475d-85e1-5f314ba10bde",
			"key": "idForSettlement",
			"value": ""
		},
		{
			"id": "68cf0cc4-70bc-46ba-91a4-547157cbbb06",
			"key": "amountForSettlement",
			"value": ""
		},
		{
			"id": "e469df13-bb06-4c22-b3dc-655d7adf4997",
			"key": "newCardToken",
			"value": ""
		},
		{
			"id": "e2d920a7-d380-4b89-b8ff-3ba4b2025701",
			"key": "cardExternalReferenceId",
			"value": ""
		},
		{
			"id": "c998d896-c69a-4b95-9099-d90c33e98096",
			"key": "cardAuthHoldId",
			"value": ""
		},
		{
			"id": "53736117-2a26-4025-ae66-0197ddaee550",
			"key": "accountKeyId",
			"value": ""
		},
		{
			"id": "35269796-6894-4411-a34f-7e864b449dfb",
			"key": "cardAmount",
			"value": ""
		},
		{
			"id": "f57a4c8c-927b-424d-8c20-998ae4acb9fa",
			"key": "debitSettlementId",
			"value": ""
		},
		{
			"id": "3b1cb9d0-c455-4549-b200-0cc8a70d3279",
			"key": "cardInfoToDelete",
			"value": ""
		},
		{
			"id": "6cb59fae-db6f-495a-93b3-df59d2276cc2",
			"key": "centerName",
			"value": ""
		},
		{
			"id": "bee159c0-2e6b-48be-ac42-cf777b64e20e",
			"key": "centerId",
			"value": ""
		},
		{
			"id": "19b6238c-7a7f-447f-85c2-7b6ad78b4e0c",
			"key": "updatedCenterName",
			"value": ""
		},
		{
			"id": "a1443420-928d-41a2-b69d-dac6bcb05212",
			"key": "savingsChargeCode",
			"value": ""
		},
		{
			"id": "8305e707-0c39-4ca5-a9d8-fc25946ca786",
			"key": "savingsChargeName",
			"value": ""
		},
		{
			"id": "10f1eb84-4110-4a0f-b1df-1c02dea69eac",
			"key": "loanChargeCode",
			"value": ""
		},
		{
			"id": "2aaa37a1-8c4a-4cf0-9a09-4f976bec8d52",
			"key": "loanChargeName",
			"value": ""
		},
		{
			"id": "3afb3b89-4786-42c7-be5e-ee9170b0931e",
			"key": "loanChargeId",
			"value": ""
		},
		{
			"id": "0905e6d7-6401-417b-aab3-4e68dc9dd369",
			"key": "bnplChargeCode",
			"value": ""
		},
		{
			"id": "068ab6af-ab73-488d-9a8a-c1eedaccf604",
			"key": "bnplChargeName",
			"value": ""
		},
		{
			"id": "2ff6e89d-879a-4639-b81b-bdba2eab63b8",
			"key": "bnplChargeId",
			"value": ""
		},
		{
			"id": "b3833ca1-93b8-4126-a5a1-a4779f11a3e2",
			"key": "chargeAmount",
			"value": ""
		},
		{
			"id": "81caf1d4-0fdb-44c8-9155-7418b3b5fe72",
			"key": "docTypeName",
			"value": ""
		},
		{
			"id": "fb3d8423-8c80-49c0-8682-6686a62f7c58",
			"key": "savingsChargeId",
			"value": ""
		},
		{
			"id": "91f67235-bf37-48cc-85df-e79da8752122",
			"key": "savingsProductName",
			"value": ""
		},
		{
			"id": "288e1bdc-2d8a-4eff-9459-da6b59a43742",
			"key": "savingsProductShortCode",
			"value": ""
		},
		{
			"id": "90e139e5-7aa5-4d46-ae72-bcee4df2ef51",
			"key": "savingsProductId",
			"value": ""
		},
		{
			"id": "b2c982c1-ed75-4e4b-8e7d-47df09b2a286",
			"key": "nominalInterest",
			"value": ""
		},
		{
			"id": "7eb1a651-18c4-4c6e-88ea-c00f96282ec9",
			"key": "savingsId",
			"value": ""
		},
		{
			"id": "4789c181-80b1-46c2-adb1-bc6d848d8fe3",
			"key": "newInterestRate",
			"value": ""
		},
		{
			"id": "596ed660-1d4c-4cf2-b32f-73fa8b6bebb9",
			"key": "savingsAvailabilityId",
			"value": ""
		},
		{
			"id": "1e1460ef-908f-4201-9dcb-a555b9fd64c3",
			"key": "amountToDeposit",
			"value": ""
		},
		{
			"id": "9fb04ec0-af5e-4170-b357-30d14a7c31ca",
			"key": "amountToWithdraw",
			"value": ""
		},
		{
			"id": "ea7bcd58-fd31-46fe-b01a-6cabdce76171",
			"key": "amountToCharge",
			"value": ""
		},
		{
			"id": "8f06b830-364a-4a4f-b8d8-cc2f4c3b51d9",
			"key": "amountToAdjust",
			"value": ""
		},
		{
			"id": "3077dda6-77ae-42e4-96b2-e087206082f0",
			"key": "bulkDepositKey",
			"value": ""
		},
		{
			"id": "c8fd3bb6-aea0-4bf5-8c64-2c6b6fda41e5",
			"key": "blockExternalReference",
			"value": ""
		}
	]
}